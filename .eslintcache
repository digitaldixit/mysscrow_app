[{"H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\index.js":"1","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\store.js":"2","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\App.js":"3","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\account\\account_action.js":"4","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\system\\reducer.js":"5","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\system\\route.js":"6","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\common\\header.js":"7","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\common\\footer.js":"8","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\common\\common_action.js":"9","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\system\\config.js":"10","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\library\\elements\\index.js":"11","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\library\\elements\\modal\\index.js":"12","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\common\\common_reducer.js":"13","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\account\\account_reducer.js":"14","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\account\\logout.js":"15","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\account\\signin.js":"16","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\account\\signup.js":"17","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\account\\otp_signin.js":"18","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\account\\authentication.js":"19","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\common\\home.js":"20","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\account\\layout.js":"21","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\account\\dashboard.js":"22","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\account\\otp.js":"23","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\account\\provider_signin.js":"24","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\account\\ticket_add.js":"25","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\account\\ticket.js":"26","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\account\\past_ticket.js":"27","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\catalog\\catalog_reducer.js":"28","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\account\\provider_authentication.js":"29","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\account\\provider_layout.js":"30","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\catalog\\page_info.js":"31","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\provider\\logout.js":"32","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\provider\\ticket.js":"33","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\provider\\provider_reducer.js":"34","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\provider\\past_ticket.js":"35","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\account\\ticket_info.js":"36","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\provider\\dashboard.js":"37","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\provider\\ticket_info.js":"38","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\library\\elements\\loading_text.js":"39","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\library\\elements\\input.js":"40","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\library\\elements\\loading_large.js":"41","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\library\\elements\\alert_top.js":"42","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\library\\elements\\no_result.js":"43","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\library\\elements\\textarea.js":"44","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\library\\elements\\loading.js":"45","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\library\\elements\\image.js":"46","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\library\\elements\\breadcrumbs.js":"47","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\library\\elements\\library.js":"48","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\library\\elements\\modal\\container\\redux_modal.js":"49","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\library\\elements\\modal\\container\\emitter.js":"50","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\library\\elements\\modal\\container\\modal_reducer.js":"51","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\account\\model_forgotten.js":"52","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\account\\titlebox.js":"53","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\account\\modal_add_ticket_service.js":"54","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\account\\recent_ticket.js":"55","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\catalog\\catalog_action.js":"56","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\provider\\titlebox.js":"57","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\provider\\provider_action.js":"58","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\provider\\recent_ticket.js":"59","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\provider\\modal_add_ticket_timing.js":"60","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\provider\\modal_view_ticket_history.js":"61","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\provider\\modal_add_ticket_service.js":"62","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\library\\elements\\modal\\container\\modal_action.js":"63","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\library\\elements\\modal\\container\\modal.js":"64","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\account\\modal_edit_profile.js":"65","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\provider\\modal_edit_provider_profile.js":"66","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\account\\provider_signup.js":"67","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\account\\provider_otp.js":"68"},{"size":398,"mtime":1645110968836,"results":"69","hashOfConfig":"70"},{"size":245,"mtime":1645110964672,"results":"71","hashOfConfig":"70"},{"size":466,"mtime":1645247536345,"results":"72","hashOfConfig":"70"},{"size":17314,"mtime":1645112042550,"results":"73","hashOfConfig":"70"},{"size":735,"mtime":1645107030737,"results":"74","hashOfConfig":"70"},{"size":3253,"mtime":1645113200080,"results":"75","hashOfConfig":"70"},{"size":8621,"mtime":1645246728322,"results":"76","hashOfConfig":"70"},{"size":7909,"mtime":1645246943843,"results":"77","hashOfConfig":"70"},{"size":1195,"mtime":1554996208000,"results":"78","hashOfConfig":"70"},{"size":105,"mtime":1645103111379,"results":"79","hashOfConfig":"70"},{"size":501,"mtime":1644686939850,"results":"80","hashOfConfig":"70"},{"size":234,"mtime":1630997429000,"results":"81","hashOfConfig":"70"},{"size":698,"mtime":1644688981110,"results":"82","hashOfConfig":"70"},{"size":2762,"mtime":1644743078178,"results":"83","hashOfConfig":"70"},{"size":1148,"mtime":1554996205000,"results":"84","hashOfConfig":"70"},{"size":5609,"mtime":1645244730759,"results":"85","hashOfConfig":"70"},{"size":8793,"mtime":1644738060351,"results":"86","hashOfConfig":"70"},{"size":5280,"mtime":1644693191216,"results":"87","hashOfConfig":"70"},{"size":721,"mtime":1554996205000,"results":"88","hashOfConfig":"70"},{"size":5724,"mtime":1644726870546,"results":"89","hashOfConfig":"70"},{"size":702,"mtime":1645246354043,"results":"90","hashOfConfig":"70"},{"size":937,"mtime":1644687804365,"results":"91","hashOfConfig":"70"},{"size":5645,"mtime":1644736759316,"results":"92","hashOfConfig":"70"},{"size":7107,"mtime":1645244754857,"results":"93","hashOfConfig":"70"},{"size":8115,"mtime":1644736942778,"results":"94","hashOfConfig":"70"},{"size":16618,"mtime":1645112602201,"results":"95","hashOfConfig":"70"},{"size":11211,"mtime":1644692968604,"results":"96","hashOfConfig":"70"},{"size":335,"mtime":1554996207000,"results":"97","hashOfConfig":"70"},{"size":800,"mtime":1554996203000,"results":"98","hashOfConfig":"70"},{"size":1278,"mtime":1645113978715,"results":"99","hashOfConfig":"70"},{"size":2526,"mtime":1644687804363,"results":"100","hashOfConfig":"70"},{"size":1136,"mtime":1644688478072,"results":"101","hashOfConfig":"70"},{"size":17677,"mtime":1645113500226,"results":"102","hashOfConfig":"70"},{"size":1116,"mtime":1644689009048,"results":"103","hashOfConfig":"70"},{"size":16564,"mtime":1644693043919,"results":"104","hashOfConfig":"70"},{"size":10679,"mtime":1645246467925,"results":"105","hashOfConfig":"70"},{"size":1150,"mtime":1644687804360,"results":"106","hashOfConfig":"70"},{"size":16474,"mtime":1644748610038,"results":"107","hashOfConfig":"70"},{"size":427,"mtime":1554996211000,"results":"108","hashOfConfig":"70"},{"size":1802,"mtime":1644728312586,"results":"109","hashOfConfig":"70"},{"size":243,"mtime":1554996211000,"results":"110","hashOfConfig":"70"},{"size":901,"mtime":1644735987385,"results":"111","hashOfConfig":"70"},{"size":225,"mtime":1554996210000,"results":"112","hashOfConfig":"70"},{"size":644,"mtime":1554996210000,"results":"113","hashOfConfig":"70"},{"size":727,"mtime":1554996210000,"results":"114","hashOfConfig":"70"},{"size":2685,"mtime":1554996211000,"results":"115","hashOfConfig":"70"},{"size":769,"mtime":1644687804363,"results":"116","hashOfConfig":"70"},{"size":8688,"mtime":1644736081227,"results":"117","hashOfConfig":"70"},{"size":1054,"mtime":1630997429000,"results":"118","hashOfConfig":"70"},{"size":705,"mtime":1630997429000,"results":"119","hashOfConfig":"70"},{"size":641,"mtime":1630997429000,"results":"120","hashOfConfig":"70"},{"size":3705,"mtime":1644725039382,"results":"121","hashOfConfig":"70"},{"size":2722,"mtime":1645108852773,"results":"122","hashOfConfig":"70"},{"size":4646,"mtime":1644693188508,"results":"123","hashOfConfig":"70"},{"size":9194,"mtime":1645113427692,"results":"124","hashOfConfig":"70"},{"size":1081,"mtime":1644688554621,"results":"125","hashOfConfig":"70"},{"size":2486,"mtime":1645113119346,"results":"126","hashOfConfig":"70"},{"size":6358,"mtime":1644688466432,"results":"127","hashOfConfig":"70"},{"size":10041,"mtime":1644692887250,"results":"128","hashOfConfig":"70"},{"size":5979,"mtime":1644748475990,"results":"129","hashOfConfig":"70"},{"size":4529,"mtime":1645194307166,"results":"130","hashOfConfig":"70"},{"size":6017,"mtime":1644693236143,"results":"131","hashOfConfig":"70"},{"size":370,"mtime":1630997429000,"results":"132","hashOfConfig":"70"},{"size":1883,"mtime":1630997429000,"results":"133","hashOfConfig":"70"},{"size":9080,"mtime":1645109856235,"results":"134","hashOfConfig":"70"},{"size":5723,"mtime":1645114580127,"results":"135","hashOfConfig":"70"},{"size":11039,"mtime":1644750026813,"results":"136","hashOfConfig":"70"},{"size":5798,"mtime":1644746614777,"results":"137","hashOfConfig":"70"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1k5xqi",{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"142"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"142"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"142"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"142"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"142"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"142"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"184"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"142"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"190","messages":"191","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"142"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"142"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"142"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"142"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"204","messages":"205","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"142"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"142"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"184"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"215","messages":"216","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"142"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"142"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"223","messages":"224","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"142"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"142"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"231","messages":"232","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"142"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"142"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"142"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"142"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"142"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"142"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"142"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":40,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"142"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"142"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"142"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"142"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"280","messages":"281","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"142"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"285","messages":"286","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"142"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"142"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"142"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"296","messages":"297","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"142"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"142"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"308","messages":"309","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"142"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313","usedDeprecatedRules":"142"},"H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\index.js",[],"H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\store.js",[],["314","315"],"H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\App.js",[],"H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\account\\account_action.js",["316","317","318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343"],"H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\system\\reducer.js",[],"H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\system\\route.js",[],"H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\common\\header.js",["344","345","346","347"],"H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\common\\footer.js",["348","349"],"H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\common\\common_action.js",["350","351","352","353","354","355","356","357"],"import axios from 'axios';\nimport cookie from 'react-cookie';\nimport { API_URL,API_PREFIX } from '../../system/config';\n\nexport const FETCH_ALERT_TOP = 'FETCH_ALERT_TOP';\nexport const FETCH_LIST_FILTERS = 'FETCH_LIST_FILTERS';\nexport const UPDATE_LIST_FILTERS = 'UPDATE_LIST_FILTERS';\nexport const MERGE_LIST_FILTERS = 'MERGE_LIST_FILTERS';\n\n\nexport function setAlertTop(data) {\n  return {\n    type: FETCH_ALERT_TOP,\n    payload: {data}\n  };\n}\nexport function removeAlertTop() {\n  var data = {};\n  return {\n    type: FETCH_ALERT_TOP,\n    payload: {data}\n  };\n}\n\nexport function setFilters(group, group_data, type){\n  return function(dispatch, getState) {\n    const state = getState();\n    var filters_state = state.common.list_filters;\n    if(filters_state != undefined && filters_state[group] != undefined){\n      if(type != undefined && type == 'merge'){\n        dispatch( { type: MERGE_LIST_FILTERS, payload: group_data, group:group });\n      } else {\n        dispatch( { type: UPDATE_LIST_FILTERS, payload: group_data, group:group });\n      }\n    } else {\n      filters_state = {[group]: group_data}\n      dispatch( { type: FETCH_LIST_FILTERS, payload: {data:filters_state}} );\n    }\n  };\n}\n","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\system\\config.js",[],"H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\library\\elements\\index.js",[],"H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\library\\elements\\modal\\index.js",[],"H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\common\\common_reducer.js",["358"],"\nimport update from 'react-addons-update';\nimport {\n  FETCH_ALERT_TOP,\n  FETCH_LIST_FILTERS,\n  UPDATE_LIST_FILTERS,\n  MERGE_LIST_FILTERS,\n} from './common_action';\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case FETCH_ALERT_TOP:\n        return { ...state, alert: action.payload.data }\n    case FETCH_LIST_FILTERS:\n          return { ...state, list_filters: action.payload.data }\n    case UPDATE_LIST_FILTERS:\n          return update(state, { list_filters: { [action.group]: {$set: action.payload} } })\n    case MERGE_LIST_FILTERS:\n          return update(state, { list_filters: { [action.group]: {$merge: action.payload} } })\n    default:\n      return state;\n  }\n}\n","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\account\\account_reducer.js",["359"],"import {\n  AUTHENTICATE_CUSTOMER,\n  UNAUTHENTICATE_CUSTOMER,\n  VALIDATION_ERROR,\n  FETCH_ACCOUNT_PROFILE,\n  GET_PROJECTS,\n  CUSTOMER_LOGIN_PHONE,\n  GET_SERVICES,\n  FETCH_CUSTOM_SERVICE,\n  ADD_CUSTOM_SERVICE,\n  REMOVE_CUSTOM_SERVICE,\n\n  FETCH_TICKET_TOTAL,\n  FETCH_STATUSWISE_TICKETS,\n  FETCH_TICKET_LIST,\n  NULL_CUSTOM_SERVICE,\n  FETCH_TICKET_INFO,\n\n  // Provider\n  CONTRACTOR_LOGIN_PHONE,\n  AUTHENTICATE_PROVIDER,\n  UNAUTHENTICATE_PROVIDER,\n  FETCH_PROVIDER_ACCOUNT_PROFILE,\n  \n} from './account_action';\n\nconst INITIAL_STATE =  {\n  custom_service: [],\n};\n\nexport default function(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case VALIDATION_ERROR:\n        return { ...state, error: action.payload }\n    case AUTHENTICATE_CUSTOMER:\n        return { ...state, error: '', authenticated: true, token: action.payload }\n    case UNAUTHENTICATE_CUSTOMER:\n        localStorage.removeItem('token');\n        return { ...state, error: '', authenticated: false, token: false }\n    case FETCH_ACCOUNT_PROFILE:\n        return { ...state, profile: action.payload.data }\n    case GET_PROJECTS:\n          return { ...state, projects: action.payload.data }\n    case CUSTOMER_LOGIN_PHONE:\n        return { ...state, login_phone: action.payload }\n    case GET_SERVICES:\n        return { ...state, services: action.payload.data }\n\n// PROVIDER\ncase CONTRACTOR_LOGIN_PHONE:\n  return { ...state, contractor_login_phone: action.payload }\n    case AUTHENTICATE_PROVIDER:\n      return { ...state, error: '', authenticate_provider: true, token: action.payload }\n    case UNAUTHENTICATE_PROVIDER:\n      localStorage.removeItem('token');\n      return { ...state, error: '', authenticate_provider: false, token: false }\n    case FETCH_PROVIDER_ACCOUNT_PROFILE:\n      return { ...state, provider_profile: action.payload.data }\n\n\n      case FETCH_CUSTOM_SERVICE:\n          return { ...state, custom_service: action.payload.data }\n      case ADD_CUSTOM_SERVICE:\n          return { ...state, custom_service: [...state.custom_service, action.payload] }\n      case REMOVE_CUSTOM_SERVICE:\n          return { ...state, custom_service: [ ...state.custom_service.slice(0, action.payload), ...state.custom_service.slice(action.payload + 1) ] }\n      case FETCH_TICKET_TOTAL:\n            return { ...state, ticket_total: action.payload.data.total }\n      case FETCH_STATUSWISE_TICKETS:\n           return { ...state, filter_ticket_status: action.payload.data }\n      case FETCH_TICKET_LIST:\n          return { ...state, ticket_list: action.payload.data }\n      case NULL_CUSTOM_SERVICE:\n          return { ...state, custom_service: action.payload.data }\n      case FETCH_TICKET_INFO:\n          return { ...state, ticket_info: action.payload.data }\n    default:\n      return state;\n  }\n}\n","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\account\\logout.js",["360"],"import React,  { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { signoutCustomer } from './account_action';\n\nclass AccountLogout extends Component {\n\n  componentWillMount() {\n    this.props.signoutCustomer();\n  }\n\n  render() {\n    return (\n      <div id=\"logout\">\n          <div className=\"container mb-3 mt-3\">\n            <div className=\"row\">\n              <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                  <div className=\"card-block\">\n                    <div className=\"well text-muted text-center cart-empty sk-heading\">\n                      <i className=\"fa fa-shopping-basket fa-5x m-b-1 sk-heading\"></i>\n                        <h1 className=\"block-title large\">Account Logout</h1>\n                        <div className=\"description\">You have been logged off your account. It is now safe to leave the computer.</div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n  );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return { errorMessage: state.account.error}\n}\n\nexport default connect(null, { signoutCustomer })(AccountLogout)\n","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\account\\signin.js",["361","362","363","364"],"H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\account\\signup.js",["365","366","367"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport { Link } from 'react-router-dom';\nimport { input, LoadingLarge } from '../library/elements';\nimport { register } from './account_action';\n\nclass Signup extends Component {\n  constructor(props) {\n  \tsuper(props);\n    this.state = { \n      isLoading:false,\n      isPasswordText: false,\n      isPasswordConfirmText: false,\n     };\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n  }\n\n  componentWillMount() {\n    if(this.props.authenticated){\n      this.props.history.push('/otp');\n    }\n  }\n\n  componentWillReceiveProps(){\n    this.state = { isLoading:false };\n  }\n\n  handleFormSubmit(formProps) {\n    this.setState({isLoading: true});\n    var _this = this;\n    this.props.register(formProps, function(err, result) {\n      if(result) {\n        _this.setState({ isLoading: false });\n        _this.props.history.push('/otp');\n      }\n    });\n  }\n\n  renderPasswordMask(getState) {\n    if (this.state[getState] === false) {\n      this.setState({ [getState]: true });\n    } else {\n      this.setState({ [getState]: false });\n    }\n  }\n  renderConfirmPasswordMask(getState) {\n    if (this.state[getState] === false) {\n      this.setState({ [getState]: true });\n    } else {\n      this.setState({ [getState]: false });\n    }\n  }\n  renderAlert() {\n    if(this.props.errorMessage) {\n      return (\n        <div className=\"alert alert-danger\">\n        <strong>Oops! </strong> {this.props.errorMessage}\n        </div>\n      )\n    }\n  }\n\n\n  render() {\n    const { handleSubmit} = this.props;\n    var { isLoading, isPasswordText, isPasswordConfirmText } = this.state;\n\n    return (\n        <div id=\"content-container\" className=\"container cm-frm signup pt-5 pb-5\">\n          { isLoading ? <LoadingLarge /> : ''}\n          <div className=\"row\">\n              <div className=\"col-sm-2 p-0\"></div>\n                <div className=\"col-sm-8 p-0\">\n                    <div className=\"card\">\n                      <div className=\"card-header text-center\">\n                        <h5 className=\"m-0\">CUSTOMER SIGN UP</h5>\n                      </div>\n                      <form onSubmit={handleSubmit(this.handleFormSubmit.bind(this))} className=\"signup-form df-form\">\n                        {this.renderAlert()}\n                        <div className=\"card-block\">\n                          <div className=\"row form-group\">\n                            <div className=\"col-sm-6\">\n                              <Field name=\"firstname\" type=\"text\" component={input} label=\"* First Name\" isBorderError={true} className=\"form-control\"/>\n                            </div>\n                            <div className=\"col-sm-6\">\n                              <Field name=\"lastname\" type=\"text\" component={input} label=\"* Last Name\" isBorderError={true} className=\"form-control\"/>\n                            </div>\n                          </div>\n                          <div className=\"row form-group\">\n                            <div className=\"col-sm-6 mb-3\">\n                              <Field name=\"email\" type=\"text\" component={input} label=\"* Email\" isBorderError={true} className=\"form-control\"/>\n                            </div>\n                              <div className=\"col-sm-6\">\n                                <Field name=\"phone\" type=\"text\" component={input} label=\"* Mobile or Phone\" isBorderError={true} className=\"form-control\"/>\n                              </div>\n                          </div>\n                          <div className=\"row form-group\">\n                            <div className=\"col-sm-12\">\n                              <Field name=\"address\" type=\"text\" component={input} label=\"* Address\" isBorderError={true} className=\"form-control\"/>\n                            </div>\n                          </div>\n                          <div className=\" row mb-3\">\n                          <div className=\"col-sm-6 form-group\">\n                            <div className=\"input-group\">\n                              {\n                                isPasswordText\n                                  ?\n                                  <Field name=\"password\" type=\"password\"  component={input} label=\"* Password\" className=\"form-control\" />\n                                  :\n                                  <Field name=\"password\" type=\"password\" component={input} label=\"* Password\" className=\"form-control\" />\n                              }\n                              <button\n                                type=\"button\"\n                                className=\"btn btn-sm btn-light password-mask shadow-none\"\n                                onClick={() => this.renderPasswordMask('isPasswordText')}\n                              >\n                                {isPasswordText ? <i className=\"fa fa-eye\"></i> : <i className=\"fa fa-eye-slash\"></i>}\n\n                              </button>\n                            </div>\n                          </div>\n                          <div className=\"col-sm-6\">\n                            <div className=\"input-group\">\n                              {\n                                isPasswordConfirmText\n                                  ?\n                                  <Field name=\"confirm_password\"  type=\"text\" component={input} label=\"* Confirm Password\" className=\"form-control\" />\n                                  :\n                                  <Field name=\"confirm_password\"  type=\"password\" component={input} label=\"* Confirm Password\" className=\"form-control\" />\n                              }\n                              <button\n                                type=\"button\"\n                                className=\"btn btn-sm btn-light password-mask shadow-none\"\n                                onClick={() => this.renderConfirmPasswordMask('isPasswordConfirmText')}\n                              >\n                                {isPasswordText ? <i className=\"fa fa-eye\"></i> : <i className=\"fa fa-eye-slash\"></i>}\n                              </button>\n                            </div>\n                          </div>\n                        </div>\n                          <div className=\"form-group\">\n                            <div className=\"col-sm-12 hidden-md-down\">\n                              <button action=\"signup\" type=\"submit\" className=\"btn btn-outline-primary pull-right\">SignUp</button>\n                            </div>\n                            <div className=\"col-sm-12 hidden-md-up p-0\">\n                              <button action=\"signup\" type=\"submit\" className=\"btn btn-outline-primary pull-right btn-block\">SignUp</button>\n                            </div>\n                          </div>\n                          <div className=\"form-group\">\n                            <div className=\"col-sm-12 text-center\">\n\n                            </div>\n                          </div>\n                        </div>\n                      </form>\n                    </div>\n\n                </div>\n                <div className=\"col-sm-2 p-0\"></div>\n          </div>\n        </div>\n  );\n  }\n}\n\nfunction validate(formProps) {\n  const errors = {}\n  if (!formProps.firstname) {\n    errors.firstname = 'Required  First Name';\n  }\n  if (!formProps.lastname) {\n    errors.lastname = 'Required  Last Name';\n  }\n  if (!formProps.address) {\n    errors.address = 'Required  Address';\n  }\n  if (!formProps.email) {\n    errors.email = 'Required Email'\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(formProps.email)) {\n    errors.email = 'Invalid Email Address'\n  }\n  if (!formProps.phone) {\n    errors.phone = 'Required Mobile';\n  } else {\n    var phoneno = /^\\d{10}$/;\n    if (isNaN(formProps.phone)) {\n      errors.phone = 'Mobile number must be numeric only!';\n    } else if(formProps.phone.length < 10){\n      errors.phone = 'Mobile number must be in 10 digit!';\n    } else if(!formProps.phone.match(phoneno)){\n      errors.phone = 'Mobile number must be numeric only!';\n    }\n  }\n  if (!formProps.password) {\n    errors.password = 'Required Password'\n  } else if (formProps.password.length < 6) {\n    errors.password = 'Password must more than 6 characters'\n  }\n  if (!formProps.confirm_password) {\n    errors.confirm_password = 'Required Confirm Password'\n  }\n  if(formProps.password != formProps.confirm_password) {\n      errors.confirm_password = 'Confirm must match to Password'\n  }\n\n  return errors\n}\n\nfunction mapStateToProps(state) {\n  return {\n    authenticated: state.account.authenticated,\n    errorMessage: state.account.error,\n\n  }\n}\n\nSignup = reduxForm({\n  form: 'signup',\n  validate: validate\n})(Signup);\n\nexport default connect(mapStateToProps, { register})(Signup);\n","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\account\\otp_signin.js",["368","369","370","371","372"],"import React,  { Component } from 'react';\nimport { Router, Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport { otplogin } from './account_action';\nimport { modal } from '../library/elements/modal';\nimport { input, LoadingLarge } from '../library/elements';\nimport AccountFrogotPassword from '../account/model_forgotten';\n\nclass AccountOTPLogin extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { isLoading:false, isError: '' };\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n  }\n\n    componentWillMount(){\n      if(this.props.authenticated == true && this.props.account_profile != undefined){\n        // browserHistory.push('/account');\n      }\n    }\n    handleFormSubmit(formProps) {\n      this.setState({ isError: '' });\n      this.setState({ isLoading: true });\n      var _this = this;\n      this.props.otplogin(formProps, function(err, result) {\n        if(!result) {\n          _this.setState({ isLoading: false });\n        } else {\n        //  browserHistory.push('/account');\n          _this.setState({ isLoading: false });\n\n        }\n      });\n    }\n\n  renderAlert() {\n    if(this.props.errorMessage) {\n      this.setState({ isButtonLoading: false });\n      return (\n        <div className=\"alert alert-danger m-b-1\">\n        <strong>Oops! </strong> {this.props.errorMessage}\n        </div>\n      )\n    }\n  }\n\n  addForpgotPasswordModal() {\n  modal.add(AccountFrogotPassword, {\n    title: \"Forgot Password\",\n    size: 'large',\n    closeOnOutsideClick: false,\n    hideCloseButton: false,\n    modalId: 'forgot-password',\n  });\n  }\n  render() {\n\n    const { handleSubmit, authenticated,errorMessage } = this.props;\n    let isLoading = this.state.isLoading;\n    let isError = this.state.isError;\n\n    if(errorMessage){\n      isLoading = false;\n    }\n    return (\n    <div id=\"content-container\" className=\"cm-frm signup pt-5 pb-5\">\n        { isLoading ? <LoadingLarge /> : null }\n        <div className=\"account-banner\">\n\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-sm-3 hidden-lg-down\"></div>\n              <div className=\"col-sm-6\">\n                <div className=\"card\">\n\n                      <div className=\"card-header\"><h5 className=\"m-0\"> Resident Sign In</h5></div>\n                      <div className=\"card-block\">\n                        {\n                          errorMessage\n                          ?\n                          <div className=\"form-group\">\n                            <div className=\"col-sm-12 p-0\">\n                              <div className=\"alert alert-warning\">{errorMessage}</div>\n                            </div>\n                          </div>\n                          :\n                          null\n                        }\n                        <form onSubmit={handleSubmit(this.handleFormSubmit.bind(this))}>\n                          <div className=\"form-group\">\n                            <div className=\"col-sm-12 p-0 position-relative has-icon-left\">\n                              <label><strong>Mobile phone number</strong></label>\n                                <Field name=\"phone\" type=\"text\" icon=\"fa fa-phone\"  component={input}/>\n                            </div>\n                          </div>\n                          <div className=\"form-group\">\n                            <div className=\"col-sm-12 p-0\">\n                              <button\n                                type=\"submit\"\n                                action=\"signin\"\n                                disabled={isLoading}\n                                className=\"btn  btn-block  btn-primary btn-submit\">\n                                  { isLoading ? 'Loading...' : 'Continue'}\n                              </button>\n                            </div>\n                          </div>\n                          <div className=\"form-group row\">\n                            <div className=\"col-sm-12 text-center\">\n                                  <Link className=\"form-link\" to=\"/signup\"><h6>Signup Now</h6></Link>\n                            </div>\n                          </div>\n                        </form>\n\n                  </div>\n                </div>\n                <p className=\"line-on-side text-muted text-center font-small-3 sk-headin mt-4\"><span>or</span></p>\n                <div className=\"form-group row mb-0\">\n                  <div className=\"col-sm-12 text-center\">\n                        <Link className=\"form-link\" to=\"/signin\"><h6>Signin with Password</h6></Link>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col-sm-3 hidden-lg-down\"></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n\n  }\n}\n\nfunction validate(formProps) {\n  const errors = {}\n  if (!formProps.phone) {\n    errors.phone = 'Enter your mobile number'\n  }\n  return errors\n}\n\nAccountOTPLogin = reduxForm({\n  form: 'signin',\n  validate: validate\n})(AccountOTPLogin);\n\nfunction mapStateToProps(state) {\n  return {\n    errorMessage: state.account.error,\n    authenticated: state.account.authenticated\n  }\n}\n\nexport default connect(mapStateToProps, { otplogin })(AccountOTPLogin);\n","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\account\\authentication.js",["373"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nexport default function(ComposedComponent) {\n  class Authentication extends Component {\n    static contextTypes = {\n      router: React.PropTypes.object\n    }\n\n    componentWillMount() {\n      if (!this.props.authenticated) {\n        this.context.router.push('/');\n      }\n    }\n\n    componentWillUpdate(nextProps) {\n      if (!nextProps.authenticated) {\n        this.context.router.push('/');\n      }\n    }\n\n    render() {\n      return <ComposedComponent {...this.props} />\n    }\n  }\n\n  function mapStateToProps(state) {\n    return { authenticated: state.account.authenticated };\n  }\n\n  return connect(mapStateToProps)(Authentication);\n}\n",["374","375"],"H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\common\\home.js",["376","377","378","379"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nvar ReactRotatingText = require(\"react-rotating-text\");\nclass CommonHome extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { isLoading: false };\n  }\n\n  componentWillMount() {\n    this.setState({ isLoading: true });\n    var _this = this;\n  }\n\n  render() {\n    const {} = this.props;\n    const isLoading = this.state.isLoading;\n\n    return (\n      <div className=\"common-home\">\n        <div className=\"first-section\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-sm-12\">\n                <div className=\"first-section-content text-center cm-frm\">\n                  <h2\n                    className=\"wow bounceIn  animated slide-text\"\n                    style={{\n                      visibility: \"visible\",\n                      \"-webkit-animation-delay\": \"0.6s\",\n                      \"-moz-animation-delay\": \"0.6s\",\n                      \"animation-delay\": \"0.6s\",\n                      \"animation-delay\": \"0.6s\",\n                    }}\n                  >\n                    {\" \"}\n                    Mysscrow Help in{\" \"}\n                    <ReactRotatingText\n                      items={[\"Advertising\", \"Services\", \"Marketing\"]}\n                      pause={1500}\n                      className=\"text-warning\"\n                      emptyPause={1000}\n                      typingInterval={100}\n                      deletingInterval={100}\n                    />\n                  </h2>\n                  <div className=\"overlay\"></div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"services-area bg ptb-100 text-center\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-sm-12\">\n                <div className=\"section-title\">\n                  <h3>We provide best services!</h3>\n                  <p className=\"hidden-lg-down\">\n                    We enjoy adapting our strategies to offer every customer the\n                    best solutions that are at the forefront of the industry.\n                  </p>\n                </div>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-lg-4 col-md-6 col-6\">\n                <div className=\"single-services\">\n                  <div className=\"icon\">\n                  <i className=\"icon-logo fa fa-handshake-o\"></i>\n                  </div>\n                  <h3>Kitchen Services</h3>\n                  <p className=\"hidden-lg-down\">\n                    Our new kitchen planner allows you to design your dream\n                    kitchen and arrive at a rough quotation in a matter of\n                    minutes.\n                  </p>\n                </div>\n              </div>\n              <div className=\"col-lg-4 col-md-6 col-6\">\n                <div className=\"single-services\">\n                  <div className=\"icon\">\n                  <i className=\"icon-logo fa fa-handshake-o\"></i>\n                  </div>\n                  <h3>Bathroom Services</h3>\n                  <p className=\"hidden-lg-down\">\n                    Planning your bathroom with our Bathroom Planner design tool\n                    is easy and intuitive.\n                  </p>\n                </div>\n              </div>\n              <div className=\"col-lg-4 col-md-6 col-6\">\n                <div className=\"single-services\">\n                  <div className=\"icon\">\n                  <i className=\"icon-logo fa fa-handshake-o\"></i>\n                  </div>\n                  <h3>Plumbing Services</h3>\n                  <p className=\"hidden-lg-down\">\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed\n                    do eiusmod tempor incididunt\n                  </p>\n                </div>\n              </div>\n              <div className=\"col-lg-4 col-md-6 col-6\">\n                <div className=\"single-services\">\n                  <div className=\"icon\">\n                  <i className=\"icon-logo fa fa-handshake-o\"></i>\n                  </div>\n                  <h3>Electrical Services</h3>\n                  <p className=\"hidden-lg-down\">\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed\n                    do eiusmod tempor incididunt\n                  </p>\n                </div>\n              </div>\n              <div className=\"col-lg-4 col-md-6 col-6\">\n                <div className=\"single-services\">\n                  <div className=\"icon\">\n                  <i className=\"icon-logo fa fa-handshake-o\"></i>\n                  </div>\n                  <h3>Painting Services</h3>\n                  <p className=\"hidden-lg-down\">\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed\n                    do eiusmod tempor incididunt\n                  </p>\n                </div>\n              </div>\n              <div className=\"col-lg-4 col-md-6 col-6\">\n                <div className=\"single-services\">\n                  <div className=\"icon\">\n                  <i className=\"icon-logo fa fa-handshake-o\"></i>\n                  </div>\n                  <h3>Pest Conttrol Services</h3>\n                  <p className=\"hidden-lg-down\">\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed\n                    do eiusmod tempor incididunt\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {};\n}\n\nexport default connect(mapStateToProps, {})(CommonHome);\n","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\account\\layout.js",["380"],"H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\account\\dashboard.js",["381","382"],"\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Loading } from '../library/elements';\nimport AccountOrder from './recent_ticket';\nclass AccountDashboard extends Component {\n\n  constructor() {\n  \tsuper();\n    this.state = { isLoading:false };\n  }\n\n\n  render() {\n\n    const { account_profile } = this.props;\n    const isLoading = this.state.isLoading;\n\n    if(!account_profile) {\n      return (\n        <Loading />\n      );\n    }\n\n    return (\n      <div className=\"account-box\">\n          <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-sm-12\">\n                <AccountOrder/>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    account_profile: state.account.profile,\n  };\n}\n\nexport default connect(mapStateToProps)(AccountDashboard);\n","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\account\\otp.js",["383","384","385","386"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Field, reduxForm } from 'redux-form';\nimport { input, Loading } from '../library/elements';\nimport { loginOTP, resendOTP } from './account_action';\n\nclass AccountOtp extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { isLoading:false, isError: '', currentPage:\"1\" };\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n  }\n\n  componentWillMount(){\n    if(!this.props.login_phone){\n    //  browserHistory.push('/otp_signin');\n    }\n  }\n\n  handleFormSubmit(formProps) {\n    this.setState({ isLoading: true });\n    this.setState({ isError: '' });\n    var _this = this;\n  formProps.phone = this.props.login_phone;\n    this.props.loginOTP(formProps, function(err, result) {\n      if(result.error) {\n        _this.setState({ isLoading: false });\n        _this.setState({ isError: result.error });\n      } else {\n        _this.props.history.push('/');\n      }\n    });\n  }\n\n  resendOTP(){\n    this.setState({ isLoading: true });\n    this.setState({ isError: '' });\n    var _this = this;\n    var phone = this.props.login_phone;\n    this.props.resendOTP(phone, function(err, result) {\n      if(result) {\n        _this.props.reset('accountotp');\n        _this.setState({ isLoading: false });\n      }\n    });\n  }\n\n  renderAlert() {\n    if(this.props.errorMessage) {\n      this.setState({ isButtonLoading: false });\n      return (\n        <div className=\"alert alert-danger m-b-1\">\n        <strong>Oops! </strong> {this.props.errorMessage}\n        </div>\n      )\n    }\n  }\n\n  changeCurrentPage(page){\n    this.setState({currentPage : page});\n  }\n\n  render() {\n\n    const { handleSubmit, authenticated, alert, login_phone } = this.props;\n    let isLoading = this.state.isLoading;\n    let isError = this.state.isError;\n    let currentPage = this.state.currentPage;\n\n    return (\n      <div id=\"content-container\" className=\"cm-frm signup pt-5 pb-5\">\n        { isLoading ? <Loading /> : null }\n        <div className=\"account-banner\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-sm-3 hidden-lg-down\"></div>\n              <div className=\"col-sm-6\">\n                <div className=\"card\">\n\n                  <div className=\"card-header text-center\">\n                    <h5 className=\"pseudo_border m-0\">Login with OTP</h5>\n                  </div>\n                  <form onSubmit={handleSubmit(this.handleFormSubmit.bind(this))}>\n                    <div className=\"card-block\">\n                      {\n                        isError\n                        ?\n                        <div className=\"form-group\">\n                          <div className=\"col-sm-12\">\n                            <div className=\"alert alert-warning\">{isError}</div>\n                          </div>\n                        </div>\n                        :\n                        null\n                      }\n                      {this.renderAlert()}\n                      <p className=\"card-text\">\n                        One Time Passcode (OTP) is a numeric code that is only valid for a one time activation when you signup.\n                        The OTP will be sent via SMS to your mobile  phone number as registered with Mysscrow.\n                        It will expire in 2 minutes.\n                        Please enter the OTP below to verify your mobile\n                      </p>\n                        <label><strong>Enter OTP</strong></label>\n                      <div className=\"form-group row\">\n                        <div className=\"col-sm-12 position-relative has-icon-left\">\n                          <Field name=\"otp\" type=\"text\" icon=\"fa fa-phone\" component={input} label=\"OTP\"/>\n                        </div>\n                      </div>\n                      <div className=\"form-group row\">\n                        <div className=\"col-sm-12 position-relative has-icon-left\">\n                          <Link className=\"form-link\" onClick={() => this.resendOTP()} ><h6>Resend OTP</h6></Link>\n                        </div>\n                      </div>\n                      <div className=\"form-group\">\n                        <div className=\"col-sm-12\">\n                          <button\n                            type=\"submit\"\n                            action=\"accountotp\"\n                            disabled={isLoading}\n                            className=\"btn btn-outline-zoom btn-block\">\n                              <i className=\"fa fa-check-square-o\"></i>  { isLoading ? 'Loading...' : 'Validate OTP'}\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                  </form>\n                </div>\n              </div>\n                <div className=\"col-sm-3 hidden-lg-down\"></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n\n  }\n}\n\nfunction validate(formProps) {\n  const errors = {}\n  if (!formProps.otp) {\n    errors.otp = 'Required OTP';\n  } else {\n    if (isNaN(formProps.otp)) {\n      errors.otp = 'OTP  must be numeric only!';\n    } else if(formProps.otp.length > 6){\n      errors.otp = 'OTP  must be up to 6 digit!';\n    }\n  }\n\n  return errors\n}\n\nAccountOtp = reduxForm({\n  form: 'accountotp',\n  validate: validate\n})(AccountOtp);\n\nfunction mapStateToProps(state) {\n  return {\n    errorMessage: state.account.error,\n    authenticated: state.account.authenticated,\n    login_phone: state.account.login_phone,\n  }\n}\n\nexport default connect(mapStateToProps, { loginOTP, resendOTP })(AccountOtp);\n","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\account\\provider_signin.js",["387","388","389"],"import React, { Component } from \"react\";\nimport cookie from 'react-cookie';\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { input, LoadingLarge } from \"../library/elements\";\nimport { provider_login } from \"./account_action\";\nvar ReactRotatingText = require(\"react-rotating-text\");\n\nclass ProviderAccountLogin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { isLoading: false, isError: \"\" };\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n  }\n  componentWillMount() {\n    if (\n      cookie.load('provider')  ||\n      this.props.provider_profile != undefined\n    ) {\n      this.props.history.push(\"/provider\");\n    }\n  }\n\n  handleFormSubmit(formProps) {\n    //console.log(\"formProps>>>>>>>\", formProps);return false;\n    this.setState({ isError: \"\" });\n    this.setState({ isLoading: true });\n    var _this = this;\n    this.props.provider_login(formProps, function (err, result) {\n      if (!result) {\n        _this.setState({ isLoading: false });\n      } else {\n        _this.props.history.push(\"/provider\");\n        _this.setState({ isLoading: false });\n      }\n    });\n  }\n\n  renderAlert() {\n    if (this.props.errorMessage) {\n      this.setState({ isButtonLoading: false });\n      return (\n        <div className=\"alert alert-danger m-b-1\">\n          <strong>Oops! </strong> {this.props.errorMessage}\n        </div>\n      );\n    }\n  }\n\n  render() {\n    const { handleSubmit, authenticate_provider, errorMessage } = this.props;\n    let isLoading = this.state.isLoading;\n    let isError = this.state.isError;\n\n    if (errorMessage) {\n      isLoading = false;\n    }\n    return (\n      <div id=\"content-container\" className=\"signup\">\n        {isLoading ? <LoadingLarge /> : null}\n        <div id=\"page-login\">\n          <div className=\"alc-bg-login cm-frm\">\n            <div className=\"row\">\n              <div className=\"col-sm-8 hidden-md-down d-none d-md-block\">\n                <div className=\"headings\">\n                  <h1 className=\"alc-heading-xxl mt-3-minus alc-c-white\">\n                    Login Now <br />{\" \"}\n                    <ReactRotatingText\n                      items={[\"Contractor\"]}\n                      pause={1500}\n                      emptyPause={1000}\n                      typingInterval={100}\n                      deletingInterval={100}\n                    />\n                  </h1>\n                  <ul className=\"list-unstyled mt-4 alc-c-white\">\n                    <li className=\"mb-4\">\n                      <i className=\"alc-fa alc-icon-box fa fa-check alc-bg-primary mr-2\"></i>\n                      <span className=\"alc-font-1-3 ms-2\">\n                        Next Generation Service Provider System\n                      </span>\n                    </li>\n                    <li className=\"mb-4\">\n                      <i className=\"alc-fa alc-icon-box fa fa-check alc-bg-primary mr-2\"></i>\n                      <span className=\"alc-font-1-3 ms-2\">\n                        Smart Service Provider Management System\n                      </span>\n                    </li>\n                    <li className=\"mb-4\">\n                      <i className=\"alc-fa alc-icon-box fa fa-check alc-bg-primary mr-2\"></i>\n                      <span className=\"alc-font-1-3 ms-2\">Ready to Change</span>\n                    </li>\n                    <li className=\"mb-4\">\n                      <i className=\"alc-fa alc-icon-box fa fa-check alc-bg-primary mr-2\"></i>\n                      <span className=\"alc-font-1-3 ms-2\">\n                        FREE Sign Up, Get Service\n                      </span>\n                    </li>\n                  </ul>\n                  <Link\n                    to=\"/provider_signup\"\n                    className={\n                      \"btn alc-btn  btn-primary alc-btn-shadow alc-btn-large\"\n                    }\n                  >\n                    Register Now\n                  </Link>\n                </div>\n              </div>\n              <div className=\"col-sm-4\">\n                <div className=\"card alc-card-form\">\n                  <div className=\" p-3 bg-transparent\">\n                    {\" \"}\n                    <h3 className=\"alc-card-form-title m-0\">\n                      Contractor Signin\n                    </h3>\n                  </div>\n                  <div className=\"card-block\">\n                    {errorMessage ? (\n                      <div className=\"form-group\">\n                        <div className=\"col-sm-12\">\n                          <div className=\"alert alert-warning p-3\">\n                            {errorMessage}\n                          </div>\n                        </div>\n                      </div>\n                    ) : null}\n                    <form className=\"cm-frm\"\n                      onSubmit={handleSubmit(this.handleFormSubmit.bind(this))}\n                    >\n                      <div className=\"form-group\">\n                        <div className=\"col-sm-12 p-0 position-relative has-icon-left\">\n                          <Field\n                            name=\"email\"\n                            type=\"text\"\n                            component={input}\n                            label=\"Email/Phone\"\n                          />\n                        </div>\n                      </div>\n                      <div className=\"form-group\">\n                        <div className=\"col-sm-12 p-0 position-relative has-icon-left\">\n                          <Field\n                            name=\"password\"\n                            type=\"password\"\n                            component={input}\n                            label=\"Password\"\n                          />\n                        </div>\n                      </div>\n                      <div className=\"form-group\">\n                        <div className=\"col-sm-12 p-0\">\n                          <button\n                            type=\"submit\"\n                            action=\"signin\"\n                            disabled={isLoading}\n                            className=\"btn  btn-block  btn-primary btn-submit\"\n                          >\n                            {isLoading ? \"Loading...\" : \"Sign In\"}\n                          </button>\n                        </div>\n                      </div>\n                    </form>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction validate(formProps) {\n  const errors = {};\n  if (!formProps.email) {\n    errors.email = \"Required Email/Phone\";\n  }\n  if (!formProps.password) {\n    errors.password = \"Required Password\";\n  }\n  return errors;\n}\n\nProviderAccountLogin = reduxForm({\n  form: \"provider_signin\",\n  validate: validate,\n})(ProviderAccountLogin);\n\nfunction mapStateToProps(state) {\n  return {\n    errorMessage: state.account.error,\n    authenticate_provider: state.account.authenticate_provider,\n  };\n}\n\nexport default connect(mapStateToProps, { provider_login })(\n  ProviderAccountLogin\n);\n","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\account\\ticket_add.js",["390","391","392"],"import React,  { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Field, reduxForm, FieldArray } from 'redux-form';\nimport { modal } from '../library/elements/modal';\n\nimport { validationNull, getServices, addTicket, nullCustomService, removeCustomService } from './account_action';\nimport { Loading, lib, InputImage } from '../library/elements';\n\n\nimport ModalAddTicketService from './modal_add_ticket_service';\n\nclass AccountTicketAdd extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading:false,\n    };\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.renderCustomService = this.renderCustomService.bind(this);\n  }\n\n  componentWillMount() {\n    console.log(\"-------AccountTicketAdd\")\n    this.props.getServices();\n  }\n\n  renderServices(services){\n    if(services) {\n      return services.map((service) => {\n        return(\n          <option value={service.service_id} key={\"service.\"+service.service_id}>{service.name}</option>\n        );\n      });\n    } else {\n      return (\n        <option value=\"0\">Loading...</option>\n      )\n    }\n  }\n\n  handleFormSubmit(formProps){\n    //console.log(\"formProps>>>>>>>\", formProps);\n    this.setState({ isLoading: true });\n    var _this = this;\n    var custom_services = this.props.custom_services;\n    /*for(var i in custom_services){\n      if(formProps['custom_service'][i] != undefined && formProps['custom_service'][i]['image']){\n        custom_services[i]['image'] = formProps['custom_service'][i]['image'];\n      }\n    }*/\n    //console.log(\"custom_services>>>>>>>\", custom_services);return false;\n\n    //console.log(\"formProps>>>>>>\", formProps);return false;\n    var data = new FormData();\n    var images = formProps['custom_service'];\n    //console.log(\"images>>>>>>\",images);\n    for(var mi in images){\n      //console.log(\"images[mi]['image']>>>>>>>\", images[mi]['image']);\n      for(var i in images[mi]['image']){\n        //console.log(\"images[mi]['image'][i][['image']]>>>>>>>\", images[mi]['image'][i][['image']]);\n        //data.append('ticket', images[mi]['image'][i]['image'][0], 'test');\n        if(images[mi]['image'][i][['image']] !== undefined){\n          data.append('custom_service['+mi+']', images[mi]['image'][i]['image'][0]);\n        }\n      }\n    }\n    data.append('custom_service', JSON.stringify(custom_services));\n    this.props.addTicket(data, function(err, result) {\n      if(result) {\n        _this.props.nullCustomService();\n        _this.setState({ isLoading: false });\n        // browserHistory.push(\"/account/ticket\");\n      }\n    });\n  }\n\n  renderRemoveCustomService(index){\n    this.props.removeCustomService(index, function(err, result) {\n      if(result) {\n        this.setState({isLoading: false});\n      }\n    });\n  }\n\n  renderCustomService(addMoreImage){\n    if(this.props.custom_services.length > 0){\n      return this.props.custom_services.map((custom_service, index) => {\n        return (\n          <div className=\"card card-add-service mt-2 mb-2\" key={\"service.card.\"+index}>\n            <div className=\"card-header\">\n              <strong>Service #{index+1}</strong>\n              <button\n                type=\"button\"\n                className=\"btn btn-sm btn-danger pull-right\"\n                onClick={()=>this.renderRemoveCustomService(index) }\n              >\n                Remove\n              </button>\n            </div>\n\n            <div className=\"cp-1 mt-3\">\n                <strong><span className=\"badge badge-dark\">{custom_service.service.name}</span> :  <span className=\"btn-outine\">{custom_service.title}</span></strong>\n                  <h5 className=\"card-title\">\n\n                  </h5>\n                  <div className=\"card-comment mt-2\">\n                      <p className=\"card-subtitle  text-muted\">\n                        {custom_service.description}\n                      </p>\n                 </div>\n            </div>\n              <div className=\"cp-1\">\n                  <div className=\"card-header bg-wihte mb-1\">\n                      <strong> Images  </strong>\n                  </div>\n                  <div className=\"cp-1\">\n                    <div className=\"card-stripe\">\n                      <FieldArray name={\"custom_service[\"+index+\"][image]\"} component={addMoreImage} />\n                    </div>\n                  </div>\n                </div>\n            </div>\n        )\n      });\n    } else {\n      return (\n        <div className=\"mt-3 mb-3 card-step\">\n          <div className=\"row\">\n            <div className=\"col-sm-3\"></div>\n            <div className=\"col-sm-6 mobile-center\">\n              <h4>Step 1 : Add Your Multiple Services</h4>\n              <h4>Step 2 : Add Related Images</h4>\n              <h4>Step 3 : Create Ticket</h4>\n            </div>\n            <div className=\"col-sm-3\"></div>\n          </div>\n        </div>\n      )\n    }\n  }\n\n  renderModalAddService(){\n    modal.add(ModalAddTicketService, {\n      title: 'Add Your Service',\n      size: 'large',\n      closeOnOutsideClick: false,\n      hideCloseButton: false,\n    });\n  }\n\n  render() {\n    const { handleSubmit, services, custom_services  } = this.props;\n    var { isLoading } = this.state;\n\n    if(!services){\n      return(\n        <div className=\"task-add-undefined\"><Loading /></div>\n      );\n    }\n\n    const addMoreImage = ({ fields, meta: { touched, error } }) => (\n      <ul className=\"card-stripe-ul\">\n        {fields.map((item, index) =>\n          <li key={\"add_image_\"+index} className=\"card-stripe-ul-li\">\n            <span className=\"badge badge-danger remove-image\"\n              onClick={() => fields.remove(index)}\n              >\n              <i className=\"fa fa-close\"></i>\n            </span>\n            <Field name={`${item}.image`} type=\"text\" component={InputImage} label=\"Image\" className=\"form-control\"/>\n          </li>\n        )}\n        <li className=\"card-stripe-ul-li add_image\" onClick={() => fields.push({})}><i className=\"fa fa-plus-circle fa-5x\"></i></li>\n      </ul>\n    )\n\n    return (\n      <div id=\"task-box\" className=\"container mb-3 mt-3\">\n        <div className=\"card\">\n        {isLoading ? <Loading /> : null  }\n        <div className=\"card-header bg-wihte\">\n          <strong>All Services</strong>\n        </div>\n        <form onSubmit={handleSubmit(this.handleFormSubmit.bind(this))}>\n          { this.renderCustomService(addMoreImage)}\n          <div className=\"row \">\n              <div className=\"col-sm-3\"></div>\n            <div className=\"col-sm-3\">\n              <button type=\"button\" className=\"custom-merchant-strip btn btn-primary btn-block mb-2\" onClick={() => this.renderModalAddService()} >Add Service </button>\n            </div>\n            {\n              (custom_services.length > 0)\n              ?\n              <div className=\"col-sm-3\">\n                <button\n                  type=\"submit\"\n                  action=\"addTask\"\n                  disabled={isLoading}\n                  className=\"btn btn-block btn-success\">\n                    { isLoading ? 'Loading...' : 'Add Ticket'}\n                </button>\n              </div>\n              :\n              null\n            }\n              <div className=\"col-sm-3\"></div>\n          </div>\n        </form>\n      </div>\n      </div>\n    );\n  }\n}\n\nfunction validate(formProps) {\n  const errors = {}\n  if (!formProps.question) {\n    errors.question = 'Required Question';\n  }\n  if (formProps.status === undefined ) {\n    errors.status = 'Required';\n  }\n  if (!formProps.service_id) {\n    errors.service_id = 'Service Required';\n  }\n  return errors;\n}\n\nAccountTicketAdd = reduxForm({\n  form: 'addTask',\n  enableReinitialize: true,\n  validate: validate,\n})(AccountTicketAdd);\n\nfunction mapStateToProps(state) {\n  //console.log(\"state>>>>>>\", state.account);\n  return {\n    services: state.account.services,\n    custom_services: state.account.custom_service,\n    services: state.account.services,\n  }\n}\nexport default connect(mapStateToProps, { validationNull, getServices, addTicket, nullCustomService, removeCustomService })(AccountTicketAdd);\n","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\account\\ticket.js",["393","394","395","396","397","398","399","400","401","402","403","404"],"H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\account\\past_ticket.js",["405","406","407","408","409","410"],"import React, { Component } from 'react';\nimport Pagination from \"react-js-pagination\";\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { setFilters } from '../common/common_action';\nimport { Loading } from '../library/elements';\nimport { getFilterTicketStatus, getTickets, getTotalTickets } from './account_action';\n\nconst dateFormat = require('dateformat');\n\n\nclass AccountPastTicket extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentPage: 1,\n      isLoading:false,\n      sizePerPage: 10,\n\n    };\n\n    this.handlePageChange = this.handlePageChange.bind(this);\n    this.renderTickets = this.renderTickets.bind(this);\n  }\n\n  componentWillMount() {\n    this.setState({isLoading: true});\n    var _this = this;\n    var page  = this.state.currentPage;\n\n    this.props.setFilters(\n      'ticket',\n      {\n        start: ((page - 1) * this.state.sizePerPage),\n        limit: this.state.sizePerPage,\n        filter_ticket_status:4,\n\n      }\n    );\n\n    this.props.getFilterTicketStatus();\n    this.props.getTotalTickets();\n    this.props.getTickets(function(err, result) {\n      if(result){\n        _this.setState({isLoading: false});\n      }\n    });\n  }\n\n\n\n  handlePageChange(pageNumber) {\n    var _this = this;\n    var startLimit = (pageNumber - 1) * this.state.sizePerPage;\n\n    if(pageNumber == 1) {\n      startLimit = 0;\n    }\n\n    this.setState({ isLoading: true, currentPage: pageNumber });\n\n    this.props.setFilters(\n      'ticket',\n      {\n        filter_ticket_status:4,\n        start: startLimit,\n        limit: this.state.sizePerPage,\n      }\n    );\n\n    this.props.getTickets(function(err, result) {\n      _this.setState({ isLoading: false });\n    });\n  }\n\n  filterData() {\n    var _this = this;\n    this.setState({ isLoading: true, currentPage: 1 });\n    var page  = 1;\n    this.props.setFilters(\n      'ticket',\n      {\n        start: ((page - 1) * this.state.sizePerPage),\n        limit: this.state.sizePerPage,\n          filter_ticket_status:4,\n      }\n    );\n\n    this.props.getFilterTicketStatus();\n    this.props.getTotalTickets();\n    this.props.getTickets(function(err, result) {\n      if(result){\n        _this.setState({isLoading: false});\n      }\n    });\n  }\n\n  renderTicketService(services){\n    if(services){\n      return services.map((service ,index) => {\n        return (\n              <button type=\"button\" className=\"btn-outine btn-outine mr-1 mt-1\" key={\"service-list-\" + index} >{(service.name)}</button>\n\n        );\n      });\n    }\n  }\n\n\n  renderTickets(tickets) {\n    return tickets.map((ticket)=> {\n        var ticket_link = \"/account/ticket/info/\"+ticket.ticket_id;\n      return(\n        <div className=\"col-sm-6\" key={'ticket_'+ticket.ticket_id}>\n          <Link className=\"ticket-link\" to = {ticket_link}>\n            <div className=\"card-ticket\">\n              <div className=\"row\">\n                <div className=\"col-sm-3 col-3\">\n                  <div className=\"colored-side\" style={{\"backgroundColor\":ticket.color}}></div>\n                  <h3 className=\"ticket-id\">{ticket.ticket_id}</h3>\n                  <div className=\"ticket-divider hidden-md-down\"></div>\n                      <div className=\"ticket-date\">\n                      {dateFormat(ticket.date_added, \"dd-mm-yyyy\")}\n                      <p className=\"m-0\"> {dateFormat(ticket.date_added, \"h:MM TT\")}</p>\n                    </div>\n                </div>\n                <div className=\"col-sm-9 col-9\">\n                  <div className=\" row product-row-1 ticket-from\">\n                          <div className=\"col-lg-9 col-md-9 col-sm-9 col-xs-9 col-9 text-left name\">\n                            {\n                            ticket.project\n                            ?\n                            <p className=\"m-0\"><span className=\"btn-outine\">{ticket.project}</span></p>\n                            :\n                            <p className=\"m-0\"><span className=\"btn-outine\">no Project </span></p>\n                          }\n                          </div>\n                          <div className=\"col-lg-3 col-md-3 col-sm-3 col-xs-3 col-3 price  text-right diate pull-right\">\n                            <Link className=\"btn-Status btn btn-success btn-sm pull-right \" style={{\"backgroundColor\":ticket.color}}>{ticket.ticket_status}</Link>\n                          </div>\n                  </div>\n                  <hr/>\n                    <div className=\" row product-row-1 ticket-from\">\n                            <div className=\"col-lg-9 col-md-9 col-sm-9 col-xs-9 col-12 text-left ticket-service\">\n                              {\n                              ticket.location\n\n                                ?\n                                <p className=\"m-0\"><span className=\"ticket-title\">{ticket.location}</span></p>\n                                :\n                                <p className=\"m-0\"><span className=\"ticket-title\">no location available</span></p>\n                              }\n                                {this.renderTicketService(ticket.services)}\n                            </div>\n\n                    </div>\n                </div>\n              </div>\n            </div>\n        </Link>\n      </div>\n      );\n    });\n  }\n\n  renderMobileTickets(tickets) {\n    return tickets.map((ticket)=> {\n        var ticket_link = \"/account/ticket/info/\"+ticket.ticket_id;\n      return(\n        <div className=\"col-sm-6\" key={'ticket_'+ticket.ticket_id}>\n          <Link className=\"ticket-link\" to = {ticket_link}>\n            <div className=\"card-ticket\">\n              <div className=\"row\">\n                <div className=\"col-sm-12 col-12\">\n                  <div className=\" row product-row-1 ticket-from\">\n                          <div className=\"col-lg-9 col-md-9 col-sm-9 col-xs-9 col-9 text-left name\">\n\n                            {\n                            ticket.project\n                            ?\n                            <p className=\"m-0\">\n                                <span className=\"m-ticket-id\">{ticket.ticket_id}</span>\n                                <small className=\"m-ticket-date\"> / <i className=\"fa fa-calendar\"></i> {dateFormat(ticket.date_added, \"dd-mm-yyyy\")} </small>\n                                <span className=\"btn-outine\"> {ticket.project}</span></p>\n                            :\n                            <p className=\"m-0\">\n                              <span className=\"m-ticket-id\">{ticket.ticket_id}</span>\n                              <small className=\"m-ticket-date\"> / <i className=\"fa fa-calendar\"></i> {dateFormat(ticket.date_added, \"dd-mm-yyyy\")} </small>\n                              <span className=\"btn-outine\"> no Project </span></p>\n                          }\n                          </div>\n                          <div className=\"col-lg-3 col-md-3 col-sm-3 col-xs-3 col-3 price  text-right diate pull-right\">\n                            <Link className=\"btn-Status btn btn-success btn-sm pull-right \" style={{\"backgroundColor\":ticket.color}}>{ticket.ticket_status}</Link>\n                          </div>\n                  </div>\n                  <hr/>\n                    <div className=\" row product-row-1 ticket-from\">\n                            <div className=\"col-lg-9 col-md-9 col-sm-9 col-xs-9 col-12 text-left ticket-service\">\n                              {\n                              ticket.location\n\n                                ?\n                                <p className=\"mt-1 mb-0 m-ticket-location\"><span className=\"ticket-title\">{ticket.location}</span></p>\n                                :\n                                <p className=\"mt-1 mb-0\"><span className=\"ticket-title\">no location available</span></p>\n                              }\n                              <hr/>\n\n                                {\n\n                                  ticket.services != undefined && ticket.services.length > 0\n                                  ?\n\n                                  <div className=\"service-list\">\n\n                                      {this.renderTicketService(ticket.services)}\n                                  </div>\n\n                                  :\n                                  <p className=\"mt-1 mb-0\"><span className=\"ticket-title btn-outine\">no service available</span></p>\n                                }\n                            </div>\n\n                    </div>\n                </div>\n              </div>\n            </div>\n        </Link>\n      </div>\n      );\n    });\n  }\n\n\n  render() {\n\n    const { ticket_list, ticket_total, filter_ticket_status } = this.props;\n\n    const { isLoading, currentPage, sizePerPage } = this.state;\n\n    if(ticket_list == undefined || ticket_total == undefined || filter_ticket_status == undefined ) {\n      return(\n        <div className=\"ticket-undefined\"><Loading /></div>\n      );\n    }\n\n\n\n    return(\n        <div className=\"ticket-list\">\n        { isLoading ? <Loading /> : null }\n          <div className=\"container\">\n            {\n              ticket_list != undefined && ticket_list.length > 0\n              ?\n              <div>\n                <div className=\"row data-list hidden-md-down\">\n                  {this.renderTickets(ticket_list)}\n                </div>\n                <div className=\"row data-list hidden-md-up\">\n                  {this.renderMobileTickets(ticket_list)}\n                </div>\n                  </div>\n              :\n                <div className=\"row\">\n                    <div className=\"col-sm-12\">\n                      <div className=\"text-center mt-2 mb-2\">\n                            <div className=\"card\">\n                                <div className=\"card-body p-2\">\n                                  <div className=\"no-result\"><h5>No Active Ticket found!</h5></div>\n                                </div>\n                            </div>\n                      </div>\n                    </div>\n                  </div>\n            }\n        <div className=\"row \">\n            <div className=\"col-sm-12\">\n              {\n                ticket_total > sizePerPage\n                ?\n                    <div className=\"card-pagination\">\n                      <div className=\"row\">\n                        <div className=\"col-sm-12 text-right\">\n                          <Pagination\n                            pageRangeDisplayed={5}\n                            activePage={currentPage}\n                            itemsCountPerPage={sizePerPage}\n                            totalItemsCount={ticket_total}\n                            onChange={this.handlePageChange}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                :\n                null\n              }\n            </div>\n          </div>\n\n      </div>\n        </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    ticket_list: state.account.ticket_list,\n    ticket_total: state.account.ticket_total,\n    filter_ticket_status: state.account.filter_ticket_status,\n  }\n}\nexport default connect(mapStateToProps, { getTickets, getTotalTickets, setFilters, getFilterTicketStatus })(AccountPastTicket);\n","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\catalog\\catalog_reducer.js",["411"],"import {\n  GET_PAGES,\n  GET_PAGE_INFO\n} from './catalog_action';\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case GET_PAGES:\n        return { ...state, pages: action.payload.data }\n    case GET_PAGE_INFO:\n        return { ...state, pageinfo: action.payload.data }\n    default:\n      return state;\n  }\n}\n","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\account\\provider_authentication.js",["412"],"\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nexport default function(ComposedComponent) {\n  class ProviderAuthentication extends Component {\n    static contextTypes = {\n      router: React.PropTypes.object\n    }\n\n    componentWillMount() {\n      if (!this.props.authenticate_provider) {\n        this.context.router.push('/provider_signin');\n      }\n    }\n\n    componentWillUpdate(nextProps) {\n      if (!nextProps.authenticate_provider) {\n        this.context.router.push('/provider_signin');\n      }\n    }\n\n    render() {\n      return <ComposedComponent {...this.props} />\n    }\n  }\n\n  function mapStateToProps(state) {\n    return { authenticate_provider: state.account.authenticate_provider };\n  }\n\n  return connect(mapStateToProps)(ProviderAuthentication);\n}\n","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\account\\provider_layout.js",["413","414"],"H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\catalog\\page_info.js",["415","416","417"],"import React, { Component, PropTypes } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport { getPageInfo } from './catalog_action';\nimport {  Loading ,lib } from '../library/elements';\n\nclass CatalogPageInformation extends Component {\n  constructor() {\n  \tsuper();\n    this.state = { isLoading:false };\n    this.componentWillMount = this.componentWillMount.bind(this);\n    this.componentWillReceiveProps = this.componentWillReceiveProps.bind(this);\n  }\n  componentWillMount() {\n    this.setState({isLoading: true});\n    var _this = this;\n    var pageData = {};\n    pageData.keyword = this.props.params.keyword;\n    pageData.page_id = this.props.params.page_id;\n    this.props.getPageInfo(pageData, function(err, result) {\n      if(result) {\n        _this.setState({isLoading: false});\n      }\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if(nextProps.params.page_id !== this.props.params.page_id  || nextProps.params.keyword !== this.props.params.keyword){\n      this.setState({ isLoading: true });\n      var _this = this;\n      var _nextProps = nextProps;\n      var pageData = {};\n      pageData.keyword = nextProps.params.keyword;\n      pageData.page_id = nextProps.params.page_id;\n      this.props.getPageInfo(pageData, function(err, result) {\n         if(result) {\n           _this.setState({isLoading: false});\n         }\n      });\n     }\n  }\n\n  render() {\n    const { pageinfo } = this.props;\n    const isLoading = this.state.isLoading;\n\n    if(!pageinfo) {\n      return (\n        <div className=\"footer\"><Loading/></div>\n      );\n    }\n    return (\n        <div className=\"page-info\">\n        { isLoading ? <Loading /> : null }\n        <div className=\"container\">\n          <div className=\"row\">\n  \t\t\t\t  <div id=\"content\" className=\"col-sm-12\">\n              <div className=\"card-page-content mt-3 mb-3\">\n            \t\t<div className=\"card-page-description\">\n                  <div className=\"card page p-3 text-center\">\n                    <h2>{pageinfo.title}</h2>\n                    <div className=\"card-block p-0\">\n                    {lib.Decodetohtml(pageinfo.description)}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n\n\n//export default CommonFooter;\nfunction mapStateToProps(state) {\n  return {\n    pageinfo: state.catalog.pageinfo,\n  }\n}\nexport default connect(mapStateToProps,{getPageInfo})(CatalogPageInformation);\n","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\provider\\logout.js",["418","419"],"import React,  { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Router, Link } from 'react-router-dom';\n\nimport { providerlogout } from '../account/account_action';\n\nclass ProviderAccountLogout extends Component {\n\n  componentWillMount() {\n    this.props.providerlogout();\n  }\n  render() {\n    return (\n      <div id=\"logout\">\n          <div className=\"container mb-3 mt-3\">\n            <div className=\"row\">\n              <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                  <div className=\"card-block\">\n                    <div className=\"well text-muted text-center cart-empty sk-heading\">\n                      <i className=\"fa fa-shopping-basket fa-5x m-b-1 sk-heading\"></i>\n                        <h1 className=\"block-title large\">Account Logout</h1>\n                        <div className=\"description\">You have been logged off your account. It is now safe to leave the computer.</div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n  );\n  }\n}\n\nexport default connect(null, { providerlogout })(ProviderAccountLogout)\n","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\provider\\ticket.js",["420","421","422","423","424","425","426","427","428","429","430","431"],"H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\provider\\provider_reducer.js",["432","433"],"import update from 'react-addons-update';\nimport {\n  FETCH_PROVIDER_TICKET_TOTAL,\n  FETCH_PROVIDER_TICKET_LIST,\n  FETCH_STATUSWISE_TICKETS,\n  FETCH_PRIORITY_STATUS,\n  FETCH_TICKET_INFO,\n  GET_SERVICE_STATUS,\n  VALIDATION_ERROR\n} from './provider_action';\n\nconst INITIAL_STATE =  {\n  custom_service: [],\n};\nexport default function(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case FETCH_PROVIDER_TICKET_LIST:\n      return { ...state, provider_ticket_list: action.payload.data }\n    case FETCH_PROVIDER_TICKET_TOTAL:\n      return { ...state, provider_ticket_total: action.payload.data.total }\n      case FETCH_PRIORITY_STATUS:\n        return { ...state, ticket_priority_status: action.payload.data }\n    case FETCH_STATUSWISE_TICKETS:\n        return { ...state, filter_ticket_status: action.payload.data }\n    case FETCH_TICKET_INFO:\n      return { ...state, ticket_info: action.payload.data }\n    case GET_SERVICE_STATUS:\n      return { ...state, service_status: action.payload.data }\n    case VALIDATION_ERROR:\n      return { ...state, error: action.payload }\n    default:\n      return state;\n  }\n}\n","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\provider\\past_ticket.js",["434","435","436","437","438","439","440","441","442","443"],"import $ from 'jquery';\nimport React, { Component } from 'react';\nimport Pagination from \"react-js-pagination\";\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { setFilters } from '../common/common_action';\nimport { Loading } from '../library/elements';\nimport { getTicketPriorityStatus, getTickets, getTicketStatus, getTotalTickets } from './provider_action';\nconst dateFormat = require('dateformat');\n\nclass AccountTicket extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentPage: 1,\n      isLoading:false,\n      sizePerPage: 10,\n      currentTicketStatus:''\n\n    };\n\n    this.handlePageChange = this.handlePageChange.bind(this);\n    this.refresh = this.refresh.bind(this);\n    this.renderTickets = this.renderTickets.bind(this);\n  }\n\n  componentWillMount() {\n    this.setState({isLoading: true});\n    var _this = this;\n    var page  = this.state.currentPage;\n\n    this.props.setFilters(\n      'ticket',\n      {\n        start: ((page - 1) * this.state.sizePerPage),\n        limit: this.state.sizePerPage,\n        filter_ticket_status:4,\n      }\n    );\n\n    this.props.getTicketStatus();\n    this.props.getTicketPriorityStatus();\n    this.props.getTotalTickets();\n    this.props.getTickets(function(err, result) {\n      if(result){\n        _this.setState({isLoading: false});\n      }\n    });\n  }\n\n  refresh() {\n    this.setState({isLoading: true, currentPage: 1 });\n    var _this = this;\n    var page  = 1;\n\n    $('#search-text').val('');\n\n    this.props.setFilters(\n      'ticket',\n      {\n        start: ((page - 1) * this.state.sizePerPage),\n        limit: this.state.sizePerPage,\n        filter_ticket_status:4,\n      }\n    );\n\n    this.props.getTicketStatus();\n    this.props.getTicketPriorityStatus();\n    this.props.getTotalTickets();\n    this.props.getTickets(function(err, result) {\n      if(result){\n        _this.setState({isLoading: false});\n      }\n    });\n  }\n\n  handlePageChange(pageNumber) {\n    var _this = this;\n    var startLimit = (pageNumber - 1) * this.state.sizePerPage;\n\n    if(pageNumber == 1) {\n      startLimit = 0;\n    }\n\n    this.setState({ isLoading: true, currentPage: pageNumber });\n\n    this.props.setFilters(\n      'ticket',\n      {\n        filter_ticket_status:4,\n        start: startLimit,\n        limit: this.state.sizePerPage,\n      }\n    );\n\n    this.props.getTickets(function(err, result) {\n      _this.setState({ isLoading: false });\n    });\n  }\n\n\n  filterData() {\n    var _this = this;\n    this.setState({ isLoading: true, currentPage: 1 });\n    var page  = 1;\n    this.props.setFilters(\n      'ticket',\n      {\n        start: ((page - 1) * this.state.sizePerPage),\n        limit: this.state.sizePerPage,\n          filter_ticket_status:4,\n      }\n    );\n\n    this.props.getTicketStatus();\n    this.props.getTicketPriorityStatus();\n    this.props.getTotalTickets();\n    this.props.getTickets(function(err, result) {\n      if(result){\n        _this.setState({isLoading: false});\n      }\n    });\n  }\n\n\n\n\n  renderTickets(tickets) {\n    return tickets.map((ticket)=> {\n        var ticket_link = \"/provider/ticket_service/info/\"+ticket.ticket_service_id;\n      return(\n          <div className=\"col-sm-6\" key={'ticket_'+ticket.ticket_service_id}>\n          <Link className=\"ticket-link\" to = {ticket_link}>\n            <div className=\"card-ticket\">\n              <div className=\"row\">\n                <div className=\"col-sm-3 col-3\">\n                <div className=\"colored-side\" style={{\"backgroundColor\":ticket.service_status_color}}></div>\n                  <h3 className=\"ticket-id\">{ticket.ticket_id}</h3>\n                  <div className=\"ticket-divider hidden-md-down\"></div>\n                      <div className=\"ticket-date\">\n                      {dateFormat(ticket.date_added, \"dd-mm-yyyy\")}\n                      <p className=\"m-0\"> {dateFormat(ticket.date_added, \"h:MM TT\")}</p>\n                    </div>\n                </div>\n                <div className=\"col-sm-9 col-9\">\n                  <div className=\" row product-row-1 ticket-from\">\n                          <div className=\"col-lg-9 col-md-9 col-sm-9 col-xs-9 col-9 text-left name\">\n                            {\n                            ticket.service_name\n                            ?\n                            <p className=\"m-0\"><span className=\"btn-outine\">{ticket.service_name}</span></p>\n                            :\n                            <p className=\"m-0\"><span className=\"btn-outine\">no Service </span></p>\n                          }\n                          </div>\n\n                          <div className=\"col-lg-3 col-md-3 col-sm-3 col-xs-3 col-3 price\">\n                            <div className=\"pull-right btn-status \">\n                              {\n                                ticket.priority_name\n                                ?\n                                <span className=\"btn-Status btn btn-success btn-sm pull-right mr-1\" style={{\"backgroundColor\":ticket.priority_color}}>{ticket.priority_name}</span>\n\n                                :\n\n                                null\n                              }\n                              <span className=\"btn-Status btn btn-success btn-sm pull-right \" style={{\"backgroundColor\":ticket.service_status_color}}>{ticket.service_status_name}</span>\n                            </div>\n                          </div>\n                  </div>\n                  <hr/>\n                    <div className=\" row product-row-1 ticket-from\">\n                            <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 col-12 text-left ticket-service\">\n                              {\n                              ticket.project_name\n                              ?\n                              <p className=\"m-0\"><span className=\"btn-outine\">{ticket.project_name}</span></p>\n                              :\n                              <p className=\"m-0\"><span className=\"btn-outine\">no project </span></p>\n                            }\n\n                            {\n                            ticket.project_location\n\n                              ?\n                              <p className=\"m-0\"><i className=\"fa fa-map-marker fa-lg mr-1\"></i><span className=\"ticket-title\">{ticket.project_location}</span></p>\n                              :\n                              <p className=\"m-0\"><span className=\"ticket-title\">no location available</span></p>\n                            }\n                            </div>\n\n                    </div>\n                </div>\n              </div>\n            </div>\n        </Link>\n      </div>\n      );\n    });\n  }\n\n  renderMobileTickets(tickets) {\n    return tickets.map((ticket)=> {\n        var ticket_link = \"/provider/ticket_service/info/\"+ticket.ticket_service_id;\n      return(\n          <div className=\"col-sm-6\" key={'ticket_'+ticket.ticket_service_id}>\n          <Link className=\"ticket-link\" to = {ticket_link}>\n            <div className=\"card-ticket\">\n              <div className=\"row\">\n                <div className=\"col-sm-12 col-12\">\n                  <div className=\" row product-row-1 ticket-from\">\n                          <div className=\"col-lg-9 col-md-9 col-sm-9 col-xs-9 col-9 text-left name\">\n\n                            {\n                            ticket.service_name\n                            ?\n                            <p className=\"m-0\">\n                                <span className=\"m-ticket-id\">{ticket.ticket_id}</span>\n                                <small className=\"m-ticket-date\"> / <i className=\"fa fa-calendar\"></i> {dateFormat(ticket.date_added, \"dd-mm-yyyy\")} </small>\n                                <span className=\"btn-outine\"> {ticket.service_name}</span></p>\n                            :\n                            <p className=\"m-0\">\n                              <span className=\"m-ticket-id\">{ticket.ticket_id}</span>\n                              <small className=\"m-ticket-date\"> / <i className=\"fa fa-calendar\"></i> {dateFormat(ticket.date_added, \"dd-mm-yyyy\")} </small>\n                              <span className=\"btn-outine\"> no service </span></p>\n                          }\n\n                          </div>\n\n                          <div className=\"col-lg-3 col-md-3 col-sm-3 col-xs-3 col-3 price  text-right diate pull-right\">\n                            <div className=\"pull-right btn-status \">\n                              {\n                                ticket.priority_name\n                                ?\n                                <span className=\"btn-Status btn btn-success btn-sm pull-right mr-1\" style={{\"backgroundColor\":ticket.priority_color}}>{ticket.priority_name}</span>\n\n                                :\n\n                                null\n                              }\n                              <span className=\"btn-Status btn btn-success btn-sm pull-right \" style={{\"backgroundColor\":ticket.service_status_color}}>{ticket.service_status_name}</span>\n                            </div>\n                          </div>\n                  </div>\n                  <hr/>\n                    <div className=\" row product-row-1 ticket-from\">\n                            <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 col-12 text-left ticket-service\">\n                              {\n                              ticket.project_name\n                              ?\n                              <p className=\"m-0\"><span className=\"btn-outine\">{ticket.project_name}</span></p>\n                              :\n                              <p className=\"m-0\"><span className=\"btn-outine\">no project </span></p>\n                            }\n                            {\n                            ticket.project_location\n\n                              ?\n                              <p className=\"m-0\"><i className=\"fa fa-map-marker fa-lg mr-1\"></i><span className=\"ticket-title\">{ticket.project_location}</span></p>\n                              :\n                              <p className=\"m-0\"><span className=\"ticket-title\">no location available</span></p>\n                            }\n                            </div>\n\n                    </div>\n                </div>\n              </div>\n            </div>\n        </Link>\n      </div>\n      );\n    });\n  }\n\n  renderClickTicketPriorityFilter(name, value) {\n    this.setState({\n      isLoading: true,\n      currentPage: 1,\n      currentTicketStatus: ''\n    });\n\n    var filter_data = {};\n    var page = 1;\n    filter_data = {\n      start: ((page - 1) * this.state.sizePerPage),\n      limit: this.state.sizePerPage,\n        filter_ticket_status:4,\n    };\n    filter_data[name] = value;\n    this.props.setFilters('ticket', filter_data);\n    var _this = this;\n    this.props.getTicketStatus();\n    this.props.getTicketPriorityStatus();\n    this.props.getTotalTickets();\n    this.props.getTickets(function(err, result) {\n      if(result){\n        _this.setState({isLoading: false});\n      }\n    });\n  }\n\n\n\n  applyCategorySortBy(name, value) {\n    this.setState({\n      isLoading: true,\n      currentPage: 1,\n      currentTicketStatus: value\n    });\n\n    var filter_data = {};\n    var page = 1;\n    filter_data = {\n      start: ((page - 1) * this.state.sizePerPage),\n      limit: this.state.sizePerPage,\n        filter_ticket_status:4,\n    };\n    filter_data[name] = value;\n    this.props.setFilters('ticket', filter_data);\n    var _this = this;\n\n    this.props.getTicketStatus();\n    this.props.getTicketPriorityStatus();\n    this.props.getTotalTickets();\n    this.props.getTickets(function(err, result) {\n      if(result){\n        _this.setState({isLoading: false});\n      }\n    });\n  }\n\n     renderPriorityStatus(statues, currentTicketStatus) {\n          if(statues !== undefined) {\n            return statues.map((status)=>{\n                return(\n                    <option   key={\"tickets.priority.status.\"+status.priority_id} value={status.priority_id}>{status.name}</option>\n                );\n            });\n          }\n        }\n     renderSortbyPriorityStatus(statues, currentTicketStatus){\n             return (\n               <div className=\"category-sortby\">\n                 <div className=\"select-style\">\n                 <select onChange={ (e) => this.applyCategorySortBy('ticket_priority_status', e.target.value)}>\n                      <option value=\"\">--Select Priority Status--</option>\n                   {this.renderPriorityStatus(statues, currentTicketStatus)}\n                   </select>\n                 </div>\n               </div>\n             )\n       }\n  render() {\n\n    const { ticket_list, ticket_total, filter_ticket_status ,ticket_priority_status } = this.props;\n\n    const { isLoading, currentTicketPriorityFilterStatus,currentTicketStatus, currentPage, sizePerPage } = this.state;\n\n    if(ticket_list == undefined || ticket_total == undefined || filter_ticket_status == undefined ) {\n      return(\n        <div className=\"ticket-undefined\"><Loading /></div>\n      );\n    }\n    var topclassName ='col-sm-12';\n    var btnfull ='btn btn-primary btn-block btn-add-ticket mt-3 mb-3 hidden-md-down';\n    if(filter_ticket_status != undefined && filter_ticket_status.length > 0) {\n      topclassName ='col-sm-6';\n      btnfull ='btn btn-primary pull-left btn-add-ticket mt-3 mb-3 hidden-md-down';\n    }\n\n\n    return(\n        <div className=\"ticket-list m-common\">\n        { isLoading ? <Loading /> : null }\n\n          <div className=\"container\">\n                <div className=\"card-header bg-white col-sm-12 pl-0 pr-0\">\n                <strong>Past Ticket List</strong>\n                    <button className=\"btn btn-info btn-sm pull-right\" onClick={() => this.refresh()}>\n                             <i className=\"fa fa-refresh\"></i><span> Refresh</span>\n                     </button>\n                </div>\n            <div className=\"row pt-2 pb-0\">\n            <div className=\"col-sm-12 col-sm-12  text-right pull-right\">\n                    {\n              ticket_priority_status != undefined && ticket_priority_status.length > 0\n              ?\n                <div>\n                  {this.renderSortbyPriorityStatus(ticket_priority_status, currentTicketStatus)}\n                </div>\n              :\n                null\n            }\n            </div>\n            </div>\n\n\n\n\n        {\n          ticket_list != undefined && ticket_list.length > 0\n          ?\n          <div>\n            <div className=\"row data-list hidden-md-down\">\n              {this.renderTickets(ticket_list)}\n            </div>\n            <div className=\"row data-list hidden-md-up\">\n              {this.renderMobileTickets(ticket_list)}\n            </div>\n          </div>\n          :\n            <div className=\"row\">\n                <div className=\"col-sm-12\">\n                  <div className=\"text-center mt-2 mb-2\">\n                        <div className=\"card\">\n                            <div className=\"card-body p-2\">\n                              <div className=\"no-result\"><h5>No Past Ticket found!</h5></div>\n                            </div>\n                        </div>\n                  </div>\n                </div>\n              </div>\n        }\n\n          <div className=\"row \">\n              <div className=\"col-sm-12\">\n                {\n                  ticket_total > sizePerPage\n                  ?\n                      <div className=\"card-pagination\">\n                        <div className=\"row\">\n                          <div className=\"col-sm-12 text-right\">\n                            <Pagination\n                              pageRangeDisplayed={5}\n                              activePage={currentPage}\n                              itemsCountPerPage={sizePerPage}\n                              totalItemsCount={ticket_total}\n                              onChange={this.handlePageChange}\n                            />\n                          </div>\n                        </div>\n                      </div>\n                  :\n                  null\n                }\n              </div>\n            </div>\n\n      </div>\n        </div>\n    );\n  }\n\n}\nfunction mapStateToProps(state) {\n  return {\n    ticket_list: state.provider.provider_ticket_list,\n    ticket_total: state.provider.provider_ticket_total,\n    filter_ticket_status: state.provider.filter_ticket_status,\n    ticket_priority_status: state.provider.ticket_priority_status,\n  }\n}\nexport default connect(mapStateToProps, { getTickets, getTotalTickets, setFilters, getTicketStatus ,getTicketPriorityStatus })(AccountTicket);\n","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\account\\ticket_info.js",["444","445"],"H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\provider\\dashboard.js",["446","447"],"\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Loading } from '../library/elements';\nimport ProviderTicket from './recent_ticket';\nclass ProviderAccountDashboard extends Component {\n\n  constructor() {\n  \tsuper();\n    this.state = { isLoading:false };\n  }\n\n  componentWillMount() {\n  }\n  render() {\n\n    const { provider_profile } = this.props;\n    const isLoading = this.state.isLoading;\n\n    if(!provider_profile) {\n      return (\n        <Loading />\n      );\n    }\n\n    return (\n      <div id=\"provider-content\">\n        <div className=\"container dashboard-page\">\n          <div className=\"account-box\">\n              <div className=\"container\">\n              <div className=\"row\">\n                <div className=\"col-sm-12 p-0\">\n                    <ProviderTicket/>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    provider_profile: state.account.provider_profile,\n  };\n}\n\nexport default connect(mapStateToProps)(ProviderAccountDashboard);\n","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\provider\\ticket_info.js",["448","449","450","451","452","453","454","455","456","457","458"],"import React, { Component } from 'react';\nimport Lightbox from 'react-images';\nimport { connect } from 'react-redux';\nimport { modal } from '../library/elements/modal';\nimport { Link } from 'react-router-dom';\nimport { Field, FieldArray, reduxForm } from 'redux-form';\nimport { IMAGE_URL } from '../../system/config';\nimport { nullCustomService, removeCustomService } from '../account/account_action';\nimport { InputImage, lib, Loading } from '../library/elements';\nimport ModalAddTicketService from './modal_add_ticket_service';\nimport ModalAddTicketTime from './modal_add_ticket_timing';\nimport ModalViewTicketHistory from './modal_view_ticket_history';\nimport { getTicket } from './provider_action';\n\n\n\nconst dateFormat = require('dateformat');\nclass AccountTicketAdd extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading:false,\n      photoLightboxIndex: 0,\n      isLightboxOpen: false,\n    };\n      this.handleFormSubmit = this.handleFormSubmit.bind(this);\n      this.renderCustomService = this.renderCustomService.bind(this);\n  }\n\n  componentWillMount() {\n    this.setState({isLoading: true});\n    var filter = {}\n    filter.ticket_service_id = this.props.match.params.ticket_service_id;\n    var self = this;\n    this.props.getTicket(filter, function(err, result) {\n      if(result) {\n        self.setState({isLoading: false});\n       }\n    });\n  }\n\n  handleFormSubmit(formProps){\n    var _this = this;\n    var custom_services = this.props.custom_services;\n    var data = new FormData();\n    var images = formProps['custom_service'];\n    for(var mi in images){\n      for(var i in images[mi]['image']){\n        if(images[mi]['image'][i][['image']] !== undefined){\n          data.append('custom_service['+mi+']', images[mi]['image'][i]['image'][0]);\n        }\n      }\n    }\n    data.append('custom_service', JSON.stringify(custom_services));\n\n    // this.props.addTicketHistory(data, function(err, result) {\n    //   if(result) {\n    //     _this.props.nullCustomService();\n    //     _this.setState({ isLoading: false });\n    //     // browserHistory.push(\"/account/ticket\");\n    //   }\n    // });\n  }\n\n  renderCustomerImages(customerimages, photoLightboxIndex, isLightboxOpen){\n        const images = [];\n\n        var images_data = customerimages.map((image, index) => {\n          var thumb = \"\";\n          if(image.image){\n            thumb =IMAGE_URL+image.image;\n          }\n          images.push(thumb);\n          return(\n\n              <li className=\"card-stripe-ul-li\" key={image.ticket_service_image_id+\".\"+index}>\n                  <Link className=\"icon zoom\" title=\"Click to view\" onClick={() => this.setState({ isLightboxOpen: true, photoLightboxIndex: index })} >\n                    <div className=\"fileUpload btn btn-outline-default p-0\">\n                      <img src={thumb} className=\"\" width='100' height='100' />\n                    </div>\n                  </Link>\n            </li>\n          );\n        });\n        return (\n            <div className=\"panel-body\">\n\n              { isLightboxOpen && (\n\n                <Lightbox\n                images={[{ src: images[photoLightboxIndex] }]}\n                isOpen={this.state.isLightboxOpen}\n                onClose={() => this.setState({ isLightboxOpen: false })}\n                />\n              )}\n              <ul className=\"thumbnails unstyled p-0\" id=\"main-image\">\n                    {images_data}\n              </ul>\n          </div>\n        );\n\n    }\n\n  renderRemoveCustomService(index){\n    this.props.removeCustomService(index, function(err, result) {\n      if(result) {\n        this.setState({isLoading: false});\n      }\n    });\n  }\n  renderCustomService(addMoreImage){\n    if(this.props.custom_service && this.props.custom_services.length > 0){\n      return this.props.custom_services.map((custom_service, index) => {\n        return (\n          <div className=\"card\" key={\"service.card.\"+index}>\n            <div className=\"card-header\">\n              Service #{index+1}\n            </div>\n            <div className=\"card-block\">\n              <h5 className=\"card-title mb-3\">{custom_service.service.name} : {custom_service.comment}</h5>\n              <h6 className=\"card-subtitle mb-2 text-muted\">\n                {custom_service.comment}\n              </h6>\n            </div>\n            <div className=\"image-block p-3 bg-light\">\n              Images\n            </div>\n            <div className=\"card-block\">\n              <div className=\"card-stripe\">\n                <FieldArray name={\"custom_service[\"+index+\"][image]\"} component={addMoreImage} />\n              </div>\n            </div>\n          </div>\n        )\n      });\n    } else {\n      return (\n        <div className=\"m-t-2\">\n\n        </div>\n      )\n    }\n  }\n  renderHistories(histories){\n    if(histories && histories.length > 0){\n      return histories.map((history)=>{\n        return(\n          <tr key={'order_history_'+history.ticket_service_history_id}>\n\n            <td  className=\"text-center\">{lib.dateFormat(history.date_added ,\"dd-mm-yyyy :h:MM TT\")}</td>\n              <td className=\"text-center\"> {lib.toHtml(history.comment)}</td>\n            <td  className=\"text-center\">{history.status}</td>\n              <td>\n                  <button type=\"button\" className=\"btn btn-outline-primary btn-sm pull-right\" onClick={() => this.renderModalViewTicketHistory('View History',history)} >View History</button>\n              </td>\n          </tr>\n        );\n      });\n    } else {\n      return (\n        <tr>\n          <td className=\"text-center\" colSpan='4'>No result found.</td>\n        </tr>\n      )\n    }\n  }\n\n  renderMaterials(materials){\n    if(materials && materials.length > 0){\n      return materials.map((material)=>{\n        return(\n          <tr key={'material_'+material.ticket_service_material_id}>\n            <td  className=\"text-left\">{material.material_name}</td>\n          </tr>\n        );\n      });\n    } else {\n      return (\n        <tr>\n          <td className=\"text-center\" colSpan='4'>No Material found.</td>\n        </tr>\n      )\n    }\n  }\n\n  renderModalViewTicketHistory(title,history){\n      modal.add(ModalViewTicketHistory, {\n        title: title,\n        size: 'large',\n        closeOnOutsideClick: false,\n        hideCloseButton: false,\n        history:history\n      });\n    }\n  renderModalAddService(title,ticket_id,service_id ,ticket_service_id){\n      modal.add(ModalAddTicketService, {\n        title: title,\n        size: 'large',\n        closeOnOutsideClick: false,\n        hideCloseButton: false,\n        ticket_id:ticket_id,\n        service_id:service_id,\n        ticket_service_id:ticket_service_id,\n      });\n    }\n    // Time\n    renderModalAddTime(title,ticket_id,service_id ,ticket_service_id){\n        modal.add(ModalAddTicketTime, {\n          title: title,\n          size: 'large',\n          closeOnOutsideClick: false,\n          hideCloseButton: false,\n          ticket_id:ticket_id,\n          service_id:service_id,\n          ticket_service_id:ticket_service_id,\n        });\n  }\n  render() {\n        const { handleSubmit, ticket, custom_services } = this.props;\n    var { isLoading ,photoLightboxIndex, isLightboxOpen } = this.state;\n\n    if(!ticket){\n      return(\n      <Loading />\n      );\n    }\n    var service_class = \"col-sm-12\";\n    if(ticket?.info?.customer_image != undefined){\n      var service_class = \"col-sm-6\";\n    }\n    const addMoreImage = ({ fields, meta: { touched, error } }) => (\n      <ul className=\"appointment_date-stripe-ul\">\n        {fields.map((item, index) =>\n          <li key={\"add_image_\"+index} className=\"card-stripe-ul-li\">\n            <span className=\"badge badge-danger remove-image\"\n              onClick={() => fields.remove(index)}\n              >\n              <i className=\"fa fa-close\"></i>\n            </span>\n            <Field name={`${item}.image`} type=\"text\" component={InputImage} label=\"Image\" className=\"form-control\"/>\n          </li>\n        )}\n        <li className=\"card-stripe-ul-li add_image\" onClick={() => fields.push({})}><i className=\"fa fa-plus-circle fa-5x\"></i></li>\n      </ul>\n    )\n\n\n    return (\n      <div id=\"ticket-info-card\" className=\" mb-3 mt-3\">\n        { isLoading ? <Loading /> : null  }\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-sm-12\">\n            <div className=\"card card-ticket-info mb-3\">\n              <div className=\"card-header\"><i className=\"fa fa-life-ring mr-1\"></i><strong>Ticket Information</strong> </div>\n                <div className=\"p-2\">\n                <div className=\"row\">\n\n                  <div className=\"col-lg-6 col-md-6 col-sm-12 col-xs-12\">\n                    <ul className=\"list-unstyled\">\n                      <li className=\"list-item\"><h6><span>Service ID</span><p className=\"card-text\">{ticket?.info?.ticket_service_id}</p></h6></li>\n                      <li className=\"list-item\"><h6><span>Ticket ID</span><p className=\"card-text\">{ticket?.info?.ticket_id}</p></h6></li>\n                        <li className=\"list-item\"><h6><span>Project</span><p className=\"card-text\">{ticket?.info?.project_name}</p></h6></li>\n                        <li className=\"list-item\"><h6><span>Location</span></h6><p className=\"card-text location-card\">{ticket?.info?.location}</p></li>\n                        <li className=\"list-item\"><h6><span>Address</span><p className=\"card-text\">{ticket?.info?.address}</p></h6></li>\n                        <li className=\"list-item\"><h6><span>Status</span><p className=\"card-text\">  <Link className=\"btn-Status btn btn-success btn-sm\" style={{\"backgroundColor\":ticket?.info?.ticket_status_color}}>{ticket?.info?.ticket_status}</Link></p></h6></li>\n                        <li className=\"list-item\"><h6><span>Date Added</span><p className=\"card-text\">{lib.dateFormat(ticket?.info?.date_added ,\"dd-mm-yyyy :h:MM TT\")}</p></h6></li>\n                      </ul>\n\n                  </div>\n                    <div className=\"col-lg-6 col-md-6 col-sm-12 col-xs-12 left-side-border\">\n                      <ul className=\"list-unstyled\">\n                        <li className=\"list-item\"><h6><span>Customer Name</span><p className=\"card-text\">{ticket?.info?.customer_name}</p></h6></li>\n                          <li className=\"list-item\"><h6><span>Email</span><p className=\"card-text\">{ticket?.info?.customer_email}</p></h6></li>\n                          <li className=\"list-item\"><h6><span>Phone</span><p className=\"card-text\">{ticket?.info?.customer_phone}</p></h6></li>\n                        </ul>\n                    </div>\n                </div>\n                </div>\n              </div>\n          </div>\n      </div>\n    {/* <div className=\"card mb-3\">\n          <div className=\"card-header\">\n          <i className=\"fa fa-cogs mr-1\"></i> <strong>Service Detail</strong>\n            {\n              ticket?.info?.ticket_status !='Finished'\n\n            ?\n              <button type=\"button\" className=\"btn btn-primary btn-sm pull-right\" onClick={() => this.renderModalAddTime('Ticket Timing',ticket?.info?.ticket_id,ticket?.info?.service_id ,ticket?.info?.ticket_service_id)} ><i className=\"fa fa-plus\"></i>Update Timing</button>\n            :\n              null\n            }\n\n          </div>\n              <div className=\"row\">\n                  <div className=\"col-sm-12 mb-2\">\n                    {\n                      ticket?.info?.date_time !=\"0000-00-00 00:00:00\"\n                      ?\n                      <div className=\"card-ticket-time text-center mt-2\">\n                      <b>Approx Date & Time for Solve Ticket : </b>{dateFormat(ticket?.info?.date_time,  \"dd-mm-yyyy :h:MM TT\")}<i className=\"ml-1 fa fa-clock-o fa-lg hidden-md-down\"></i>\n                      </div>\n                      :\n                      <div className=\"card-ticket-time text-center mt-2\">\n                        <b>Please Update Ticket Timing by using above link</b>\n                      </div>\n                    }\n                </div>\n              <div className={service_class}>\n                      {\n                        ticket?.info?.description\n                        ?\n                        <div className=\"card-comment\">\n                        <p className=\"card-subtitle  text-muted\">\n                          {ticket?.info?.description}\n                        </p>\n                      </div>\n                        :\n                        null\n                      }\n                </div>\n                <div className={service_class}>\n                  {\n                    ticket?.info?.customer_image\n                    ?\n                    <div>\n                      <div className=\"image-block p-3\">\n                        Customer  Images\n                      </div>\n                      <div className=\"row\">\n                        <div className=\"card-stripe\">\n                          <ul className=\"card-stripe-ul\">\n                            {this.renderCustomerImages(ticket?.info?.customer_image,photoLightboxIndex, isLightboxOpen)}\n                          </ul>\n                        </div>\n                      </div>\n                    </div>\n                    :\n                    null\n                  }\n                </div>\n            </div>\n        </div> */}\n\n        {/* <div className=\"row\">\n          <div className=\"col-sm-12\">\n            <div className=\"card df-table mb-3\">\n              <div className=\"card-header\">\n                <strong>Service Materials</strong>\n              </div>\n              <div className=\"fcard-body fcard-padding\">\n                <table className=\"table table-hover table-bordered table-striped df-table ticket-history mb-0\">\n                  <thead>\n                    <tr>\n                      <th  className=\"text-left\">Material Name</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                      { this.renderMaterials(ticket?.info?.materials) }\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div> */}\n\n        <div className=\"row\">\n          <div className=\"col-sm-12\">\n            <div className=\"card df-table mb-3\">\n              <div className=\"card-header\">\n                <strong>Service History</strong>\n                      <button type=\"button\" className=\"btn btn-outline-primary btn-sm pull-right\" onClick={() => this.renderModalAddService('Add History',ticket?.info?.ticket_id,ticket?.info?.service_id ,ticket?.info?.ticket_service_id)} ><i className=\"fa fa-plus\"></i>Add History</button>\n              </div>\n              <div className=\"fcard-body fcard-padding\">\n                <table className=\"table table-hover table-bordered table-striped df-table ticket-history hidden-md-down\">\n                  <thead>\n                    <tr>\n                      <th  className=\"text-center\">Date Added</th>\n                      <th  className=\"text-center\">Comment</th>\n                      <th className=\"text-center\">Status</th>\n                      <th  className=\"text-center\">Action</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                      { this.renderHistories(ticket?.info?.histories) }\n                  </tbody>\n                </table>\n                <table className=\"table table-hover table-bordered table-striped df-table ticket-history hidden-md-up table-responsive\">\n                  <thead>\n                    <tr>\n                      <th  className=\"text-center\">Date Added</th>\n                      <th  className=\"text-center\">Comment</th>\n                      <th className=\"text-center\">Status</th>\n                      <th  className=\"text-center\">Action</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                      { this.renderHistories(ticket?.info?.histories) }\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        </div>\n    </div>\n    );\n  }\n}\nAccountTicketAdd = reduxForm({\n  form: 'addTask',\n  enableReinitialize: true,\n})(AccountTicketAdd);\n\nfunction mapStateToProps(state) {\n  console.log(\"----ticket\",state.provider.ticket_info);\n  return {\n    ticket: state.provider.ticket_info,\n    custom_services: state.account.custom_service,\n  }\n}\nexport default connect(mapStateToProps, { getTicket ,nullCustomService, removeCustomService })(AccountTicketAdd);\n","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\library\\elements\\loading_text.js",["459"],"import React, { Component } from 'react';\n\nclass LoadingText extends Component {\n\n  render() {\n    if(this.props.text){\n      var text = this.props.text;\n    } else {\n      var text = \"Loading...\";\n    }\n    return (\n      <div id=\"overlay\" className=\"display-block\">\n        <div className=\"overlay-block\">\n           <div className=\"loader1\">{text}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LoadingText;\n","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\library\\elements\\input.js",["460","461","462"],"import React, { Component } from 'react';\n//import { Field, reduxForm } from 'redux-form';\n\nclass Input extends Component {\n\n  render() {\n    //console.log(\"input props found>>>>>>>>>\", this.props);\n    const { input, icon, label, is_label, isRequired, disabled, type, meta } = this.props;\n\n    var reqClassName = '';\n    if(isRequired){\n      var reqClassName = 'required';\n    }\n\n    var inputLabel = '';\n    if(is_label) {\n      inputLabel = <label className={\"control-label \"+reqClassName}>{label}</label>;\n    }\n    //var is_disabled = {};\n    /*if(disabled) {\n      is_disabled = disabled=\"1\";\n    }*/\n    if(type == \"checkbox\"){\n      return (\n        <div className=\"checkbox\">\n          <label>\n            <input {...input} type={type} /> {label}\n          </label>\n          {meta.touched && ((meta.error && <div className=\"error\">{meta.error}</div>) || (meta.warning && <div className=\"error\">{meta.warning}</div>))}\n        </div>\n      )\n    }\n    if(icon){\n      return (\n        <>\n          {inputLabel}\n          <div className=\"input-group\">\n            <span className=\"input-group-addon sk-btnbox mr-0\"><i className={icon}></i></span>\n            <input {...input} placeholder={label} type={type} className=\"form-control\" />\n          </div>\n          {meta.touched && ((meta.error && <span className=\"error\">{meta.error}</span>) || (meta.warning && <span className=\"error\">{meta.warning}</span>))}\n        </>\n      )\n    } else {\n      return (\n        <>\n          {inputLabel}\n          <input {...input} placeholder={label} type={type} className=\"form-control\" />\n          {meta.touched && ((meta.error && <span className=\"error\">{meta.error}</span>) || (meta.warning && <span className=\"error\">{meta.warning}</span>))}\n        </>\n      )\n    }\n  }\n}\n\nexport default Input;\n","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\library\\elements\\loading_large.js",[],"H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\library\\elements\\alert_top.js",[],"H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\library\\elements\\no_result.js",[],"H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\library\\elements\\textarea.js",["463","464"],"import React, { Component } from 'react';\n\nclass textarea extends Component {\n\n\n  render() {\n    //console.log(this.props);\n    const { input, icon, label, is_label, type, meta } = this.props;\n    var inputLabel = '';\n    if(is_label) {\n      inputLabel = <label>{label}</label>;\n    }\n    return (\n      <div>\n        {inputLabel}\n        <textarea {...input} placeholder={!is_label ? label : null } className=\"form-control\" rows=\"5\" />\n        {meta.touched && ((meta.error && <span className=\"error\">{meta.error}</span>) || (meta.warning && <span className=\"error\">{meta.warning}</span>))}\n      </div>\n    )\n  }\n}\n\nexport default textarea;\n","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\library\\elements\\loading.js",[],"H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\library\\elements\\image.js",["465","466","467","468"],"import React, { Component } from 'react';\n\nclass Image extends Component {\n\n  render() {\n    const { input, disabled, type, meta } = this.props;\n    //console.log(\"input>>>>>>>>\", input.value.dataUrl);\n\n    return (\n      <div className=\"fileUpload btn btn-outline-default p-0\">\n        {\n          input.value.dataUrl\n          ?\n          <img src={input.value.dataUrl ? input.value.dataUrl : input.value} className=\"\" width='100' height='100' />\n          :\n          <span><i className=\"fa fa-camera\"></i></span>\n        }\n\n        <input type=\"file\"\n          name=\"image\"\n          className=\"m-l-20\"\n          onChange={(e)=> {\n            var files = e.target.files;\n            let reader = new FileReader();\n            let file = e.target.files[0];\n            reader.onload = function (e) {\n              var picFile = e.target;\n              files.dataUrl = picFile.result;\n              input.onChange(files);\n            }\n            reader.readAsDataURL(file);\n          }}\n        />\n      </div>\n    )\n  }\n}\n\nexport default Image;\n/*<Field name=\"image\" component={ image =>{\n  var showImage = null;\n  if(image.input.value && image.input.value !== ''){\n    showImage = (\n      <div className=\"pro-image\">\n        <img onError={this.addDefaultSrc} src={image.input.value.dataUrl?image.input.value.dataUrl:image.input.value} className='m-l-10' width='100' height='100' />\n          <div className=\"fileUpload btn btn-outline-default\">\n            <span>Upload Profile Image</span>\n            <input type=\"file\"\n             name=\"image\"\n             className=\"ml-2\"\n             onChange={(e)=> {\n              var files = e.target.files;\n              let reader = new FileReader();\n              let file = e.target.files[0];\n              reader.onload = function (e) {\n                var picFile = e.target;\n                files.dataUrl = picFile.result;\n                image.input.onChange(files);\n              }\n            reader.readAsDataURL(file);\n          }}/>\n      </div>\n    </div>\n    )\n  }\n  return (\n    <div>\n    {\n      showImage !== null\n      ?\n      showImage\n      :\n      <div className=\"fileUpload btn btn-outline-default\">\n        <span>Upload Profile Image</span>\n        <input type=\"file\"\n         name=\"image\"\n         className=\"m-l-20\"\n         onChange={(e)=> {\n          var files = e.target.files;\n          let reader = new FileReader();\n          let file = e.target.files[0];\n          reader.onload = function (e) {\n            var picFile = e.target;\n            files.dataUrl = picFile.result;\n            image.input.onChange(files);\n          }\n        reader.readAsDataURL(file);\n      }}/> </div>}\n\n  </div>)}\n} />*/\n","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\library\\elements\\breadcrumbs.js",["469","470"],"import React, { Component, PropTypes } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nclass Breadcrumbs extends Component {\n\n  renderBreadcrumb(breadcrumbs){\n    return breadcrumbs.map((breadcrumb) => {      \n      return(\n        <li key={\"breadcrumb.\"+breadcrumb.value}>\n          <Link to={breadcrumb.value}>{breadcrumb.text}</Link>\n        </li>\n      );\n    });\n  }\n\n  render() {\n    const { breadcrumbs } = this.props;\n    if(!breadcrumbs){\n      return <div className=\"loading\">Loading</div>\n    }\n    return (\n      <ul className=\"breadcrumb\">\n        <li><Link to={\"/\"}><i className=\"fa fa-home\"></i></Link></li>\n        {this.renderBreadcrumb(breadcrumbs)}\n      </ul>\n    );\n  }\n}\n\nexport default Breadcrumbs;\n","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\library\\elements\\library.js",["471","472","473","474","475","476","477","478","479","480","481","482","483","484","485","486","487","488","489","490","491","492","493","494","495","496","497","498","499","500","501","502","503","504","505","506","507","508","509","510"],"import React, { Component, PropTypes } from 'react';\nimport { Link } from 'react-router-dom';\nimport $ from 'jquery'; \nexport function dateFormat(date){\n  date = new Date(date).toUTCString();\n  date = date.split(' ').slice(1, 4).join('-')\n  return date;\n}\n\nexport function totalFormat(value){\n  value = parseFloat(value);\n  if(isNaN(value)){\n    return <span>Rs 0</span>;\n  }\n  value = value.toFixed(3).replace(/(\\d)(?=(\\d{3})+\\.)/g, \"$1,\");\n  return <span>Rs {value}</span>;\n}\n\nexport function amountFormat(value){\n  value = parseFloat(value);\n  if(isNaN(value)){\n    return <span>Rs 0</span>;\n  }\n  value = value.toFixed(3).replace(/(\\d)(?=(\\d{3})+\\.)/g, \"$1,\");\n  return <span>Rs {value}</span>;\n}\nexport function getTimeAgo(getDate) {\n\n    var templates = {\n        prefix: \"\",\n        suffix: \" ago\",\n        seconds: \"Updated less than a minute\",\n        minute: \"Updated a minute\",\n        minutes: \"%d minutes\",\n        hour: \"Updated an hour\",\n        hours: \"Updated %d hours\",\n        day: \"Updated a day\",\n        days: \"Updated %d days\",\n        month: \"Updated a month\",\n        months: \"Updated %d months\",\n        year: \"Updated a year\",\n        years: \"Updated %d years\"\n    };\n    var template = function(t, n) {\n      return templates[t] && templates[t].replace(/%d/i, Math.abs(Math.round(n)));\n    };\n\n    var timer = function(time) {\n        if (!time)\n            return;\n        time = time.replace(/\\.\\d+/, \"\"); // remove milliseconds\n        time = time.replace(/-/, \"/\").replace(/-/, \"/\");\n        time = time.replace(/T/, \" \").replace(/Z/, \" UTC\");\n        time = time.replace(/([\\+\\-]\\d\\d)\\:?(\\d\\d)/, \" $1$2\"); // -04:00 -> -0400\n        time = new Date(time * 1000 || time);\n\n        var now = new Date();\n        var seconds = ((now.getTime() - time) * .001) >> 0;\n        var minutes = seconds / 60;\n        var hours = minutes / 60;\n        var days = hours / 24;\n        var years = days / 365;\n\n    return templates.prefix + (\n      seconds < 45 && template('seconds', seconds) ||\n      seconds < 90 && template('minute', 1) ||\n      minutes < 45 && template('minutes', minutes) ||\n      minutes < 90 && template('hour', 1) ||\n      hours < 24 && template('hours', hours) ||\n      hours < 42 && template('day', 1) ||\n      days < 30 && template('days', days) ||\n      days < 45 && template('month', 1) ||\n      days < 365 && template('months', days / 30) ||\n      years < 1.5 && template('year', 1) ||\n      template('years', years)\n      ) + templates.suffix;\n    };\n\n    return timer(getDate);\n\n}\nexport function htmlDecode(str){\n  if(str && typeof str === 'string') {\n    var element = document.createElement('div');\n    // strip script/html tags\n    str = str.replace(/<script[^>]*>([\\S\\s]*?)<\\/script>/gmi, '');\n    str = str.replace(/<\\/?\\w(?:[^\"'>]|\"[^\"]*\"|'[^']*')*>/gmi, '');\n    element.innerHTML = str;\n    str = element.textContent;\n    element.textContent = '';\n  }\n  return str;\n}\nexport function Decodetohtml(str){\n  var str_html = str;\n  return <div dangerouslySetInnerHTML = {{__html : str_html }}/>;\n}\nexport function ucwords(str){\n  if(str && typeof str === 'string') {\n    str = str.toLowerCase().replace(/\\b[a-z]/g, function(letter) {\n      return letter.toUpperCase();\n    });\n  }\n  return str;\n}\n\nexport function toHtml(str){\n  var str_html = $(\"<div/>\").html(str).text();\n  return <div dangerouslySetInnerHTML = {{__html : str_html }}/>;\n}\n\nexport function focusDiv(get_ref) {\n  window.location.hash = get_ref;\n}\n\nexport function strtotime(date){\n  /*import strtotime from 'locutus/php/datetime/strtotime';\n  return strtotime(date);*/\n  //require('locutus/php/datetime/strtotime');\n  return date;\n}\n\nexport function imageExists(url, callback) {\n  var img = new Image();\n  img.onload = function() { callback(true); };\n  img.onerror = function() { callback(false); };\n  img.src = url;\n}\n\nexport function onlyTimeFormat(str){\n  var open = str.split(\":\");\n  var hours = open[0];\n  var minutes = open[1];\n  var ampm = hours >= 12 ? 'PM' : 'AM';\n  hours = hours % 12;\n  hours = hours ? hours : 12;\n  var strTime = hours + ':' + minutes + ' ' + ampm;\n  return strTime;\n}\n\n//make list\n//https://jsfiddle.net/justindevs/wgk63o1y/\nexport function getTimeIntervals(time1, time2, interval) {\n  time1 = parseIn(time1);\n  time2 = parseIn(time2);\n\n  var arr = [];\n  while(time1 < time2){\n    arr.push(time1.toTimeString().substring(0,5));\n    time1.setMinutes(time1.getMinutes() + interval);\n  }\n  return arr;\n}\n\n//Parse In\nexport function parseIn(date_time){\n  var d = new Date();\n  d.setHours(date_time.substring(11,13));\n  d.setMinutes(date_time.substring(14,16));\n\n  return d;\n}\n\nexport function setCityURL(city_name, path){\n  var pathname = \"/admin/\"+path.replace(\":city\", city_name.toLowerCase());\n // browserHistory.push(pathname);\n}\n\nexport function changeURL(city_name, keyword){\n  var pathname = \"/admin/\"+city_name.toLowerCase()+\"/\"+keyword;\n  //browserHistory.push(pathname);\n}\n\n//title, summary, details, severity, dismissible, autoDismiss, appendToId\nexport function createAlert(alert_data) {\n  console.log(\"----alert_data\",alert_data);\n  //https://codepen.io/codysechelski/pen/dYVwjb?q=alert&limit=all&type=type-pens\n  if(alert_data.type == undefined || !alert_data.type){\n    alert_data.class = 'success';\n  } else {\n    alert_data.class = alert_data.type;\n  }\n  if(alert_data.dismissible == undefined){\n    alert_data.dismissible = true;\n  }\n  if(alert_data.autoDismiss == undefined){\n    alert_data.autoDismiss = true;\n  }\n\n\n  var iconMap = {\n    info: \"fa fa-info-circle\",\n    success: \"fa fa-thumbs-up\",\n    warning: \"fa fa-exclamation-triangle\",\n    danger: \"fa ffa fa-exclamation-circle\"\n  };\n\n  var iconAdded = false;\n\n  var alertClasses = [\"alert\", \"animated\", \"flipInX\"];\n  alertClasses.push(\"alert-\" + alert_data.class.toLowerCase());\n\n\n  if (alert_data.dismissible != undefined && alert_data.dismissible) {\n    alertClasses.push(\"alert-dismissible\");\n  }\n\n  var msgIcon = $(\"<i />\", {\n    \"class\": iconMap[alert_data.class] // you need to quote \"class\" since it's a reserved keyword\n  });\n\n  var msg = $(\"<div />\", {\n    \"class\": alertClasses.join(\" \") // you need to quote \"class\" since it's a reserved keyword\n  });\n  if (alert_data.title) {\n    var msgTitle = $(\"<h4 />\", {\n      html: alert_data.title\n    }).appendTo(msg);\n\n    if(!iconAdded){\n      msgTitle.prepend(msgIcon);\n      iconAdded = true;\n    }\n  } else {\n    var msgTitle = $(\"<h4 />\", {\n      html: 'Success'\n    }).appendTo(msg);\n\n    if(!iconAdded){\n      msgTitle.prepend(msgIcon);\n      iconAdded = true;\n    }\n  }\n\n  if (alert_data.sub_title != undefined && alert_data.sub_title) {\n    var msgSummary = $(\"<strong />\", {\n      html: alert_data.sub_title\n    }).appendTo(msg);\n\n    if(!iconAdded){\n      msgSummary.prepend(msgIcon);\n      iconAdded = true;\n    }\n  }\n\n  if (alert_data.message) {\n    var msgDetails = $(\"<p />\", {\n      html: alert_data.message\n    }).appendTo(msg);\n\n    if(!iconAdded){\n      msgDetails.prepend(msgIcon);\n      iconAdded = true;\n    }\n  }\n\n\n  if (alert_data.dismissible) {\n    var msgClose = $(\"<span />\", {\n      \"class\": \"close\", // you need to quote \"class\" since it's a reserved keyword\n      \"data-dismiss\": \"alert\",\n      html: \"<i class='fa fa-times-circle'></i>\"\n    }).appendTo(msg);\n  }\n\n  //$('#' + appendToId).prepend(msg);\n  $('#pageMessages').prepend(msg);\n  if (alert_data.play_sound != undefined && alert_data.play_sound == true) {\n    document.getElementById('sound').play();\n  }\n  if(alert_data.autoDismiss){\n    setTimeout(function(){\n      msg.addClass(\"flipOutX\");\n      setTimeout(function(){\n        msg.remove();\n      },1000);\n    }, 5000);\n  }\n}\n\nexport function getFullYear() {\n  var d = new Date();\n  return d.getFullYear();\n}\n\nexport function formatDateForDifference(date) {\n  var d = new Date(date), month = '' + (d.getMonth() + 1), day = '' + d.getDate(), year = d.getFullYear();\n  //console.log(month+\"::\"+day+\"::\"+year);\n  if (month.length < 2) month = '0' + month;\n  if (day.length < 2) day = '0' + day;\n  return [year, month, day].join('-');\n}\n\nexport function wildcardMatch(sSource, sMatch) {\n  var wildcardRight = false;\n  if (sMatch.charAt(sMatch.length - 1) == \"*\"){\n    wildcardRight = true;\n    sMatch = sMatch.substring(0, sMatch.length - 1);\n  }\n\n  if (wildcardRight){\n    return (sSource.indexOf(sMatch) == 0);\n  } else {\n    return sSource == sMatch;\n  }\n}\n\nexport function getTodayString(option) {\n  var d = new Date();\n  var weekday = new Array(7);\n  weekday[0]=  \"sunday\";\n  weekday[1] = \"monday\";\n  weekday[2] = \"tuesday\";\n  weekday[3] = \"wednesday\";\n  weekday[4] = \"thursday\";\n  weekday[5] = \"friday\";\n  weekday[6] = \"saturday\";\n  return weekday[d.getDay()];\n}\n","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\library\\elements\\modal\\container\\redux_modal.js",[],"H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\library\\elements\\modal\\container\\emitter.js",[],"H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\library\\elements\\modal\\container\\modal_reducer.js",[],"H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\account\\model_forgotten.js",["511","512","513","514","515","516","517","518"],"\nimport { input, textarea, Loading ,lib } from '../library/elements';\nimport { modal } from '../library/elements/modal';\nimport React,  { Component, PropTypes } from 'react';\nimport { connect } from 'react-redux';\nimport { Field,reduxForm } from 'redux-form'\nimport { Link } from 'react-router-dom';\nimport { forgotPassword } from '../account/account_action';\nimport { Button } from 'react-bootstrap';\nclass ModalAccountFrogotPassword extends Component {\n\n  constructor(props) {\n    super(props);\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.removeModal = this.handleFormSubmit.bind(this);\n   this.state = { isButtonLoading:false };\n  }\n\n\n  handleFormSubmit(formProps) {\n  this.state = { isButtonLoading:true };\n    var _this = this;\n    this.props.forgotPassword(formProps, function(err, result) {\n      if(result) {\n        _this.setState({ isLoading: false });\n        _this.props.removeModal();\n        // browserHistory.push('/signin');\n      }\n    });\n  }\n  renderAlert() {\n    if(this.props.errorMessage) {\n      return (\n        <div className=\"alert alert-danger\">\n        <strong>Oops! </strong> {this.props.errorMessage}\n        </div>\n      )\n    }\n  }\n  goSignup() {\n  this.props.removeModal();\n  // browserHistory.push('/signup');\n}\n  render() {\n    const { handleSubmit ,submitting ,errorMessage } = this.props;\n        var isButtonLoading = this.state.isButtonLoading;\n\n\n        if(errorMessage){\n          isButtonLoading = false;\n        }\n    return (\n      <div className=\"account-forgotten model-card cm-frm\">\n      <div className=\"account-banner\">\n        <div className=\"cp-1\">\n          <div className=\"row\">\n            <div className=\"col-sm-12\">\n              <div className=\"well\">\n                <form onSubmit={handleSubmit(this.handleFormSubmit.bind(this))}>\n                  {this.renderAlert()}\n                  <div className=\"form-group row\">\n                    <div className=\"col-sm-12\">\n                      <h6>Enter your email address to receive  a new password</h6>\n                    </div>\n                    <div className=\"col-sm-12 position-relative has-icon-left\">\n                      <Field name=\"email\" type=\"text\" icon=\"fa fa-envelope-o\" component={input} label=\"Email\"/>\n                    </div>\n                  </div>\n                  <div className=\"form-group row\">\n                    <div className=\"col-sm-12\">\n                      <button action=\"forgotpassword\" className=\"btn btn-primary btn-block\" disabled={isButtonLoading}>\n                        <i className=\"fa fa-paper-plane\"></i> {isButtonLoading ? 'Loading...' : 'Send'}\n                      </button>\n                    </div>\n                  </div>\n                  <div className=\"form-group row\">\n                    <div className=\"col-sm-12 text-center\">\n                      New to Mysscrow? <Link className=\"form-link\" onClick={() => this.goSignup()} to=\"/signup\">Register Now</Link>\n                    </div>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n   </div>\n  );\n  }\n}\n\nfunction validate(formProps) {\n  const errors = {}\n\n  if (!formProps.email) {\n    errors.email = 'Required Email'\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(formProps.email)) {\n    errors.email = 'Invalid Email Address'\n  }\n\n  return errors\n}\n\nfunction mapStateToProps(state) {\n  return {\n    errorMessage: state.account.error,\n  }\n}\n\nModalAccountFrogotPassword = reduxForm({\n  form: 'forgotpassword',\n  validate: validate\n})(ModalAccountFrogotPassword);\n\nexport default connect(mapStateToProps, {forgotPassword})(ModalAccountFrogotPassword);\n","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\account\\titlebox.js",["519","520","521","522","523","524","525"],"import React, { Component, PropTypes } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { modal } from '../library/elements/modal';\nimport { Loading, lib } from '../library/elements';\nimport UpdateProfile from '../account/modal_edit_profile';\nimport { IMAGE_URL } from '../../system/config'\nclass TitLeBox extends Component {\n\n  componentWillMount(){\n    var pathFound = false;\n  }\n  addEditProfileModal() {\n  modal.add(UpdateProfile, {\n    title: \"Edit Profile\",\n    size: 'large',\n    closeOnOutsideClick: false,\n    hideCloseButton: false,\n    modalId: 'edit-profile',\n  });\n}\n\n  render() {\n    const { account_profile } = this.props;\n    if(!account_profile) {\n      return (\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-sm-5\"></div>\n            <div className=\"col-sm-1\">\n              <Loading />\n            </div>\n            <div className=\"col-sm-5\"></div>\n          </div>\n        </div>\n      );\n    }\n    var currentLink = this.props.location.pathname;\n\n    var image;\n\n    if(account_profile.customer_image != undefined && account_profile.customer_image != null && account_profile.customer_image != \"\") {\n      image = IMAGE_URL + \"/\" + account_profile.customer_image;\n    } else {\n      image =  'https://www.w3schools.com/howto/img_avatar.png';\n    }\n\n    return (\n      <div className=\"uinfo\">\n        <div className=\"title-block text-center\">\n          <img className=\"img-thumbnail img-raised rounded-circle\" src={image} width=\"100px\" />\n          <h4 className=\"sk-heading mt-2\">\n          { lib.ucwords(account_profile.firstname+\" \"+account_profile.lastname) }\n            <button onClick={() => this.addEditProfileModal()} className=\"ml-2 btn btn-edit-profile btn-primary\">\n              <i className=\"fa fa-pencil\"></i>\n            </button>\n            {}\n          </h4>\n        </div>\n        <nav className=\"nav justify-content-center header-navigation\">\n          <Link className={\"sk-heading nav-link \"+ (currentLink == \"/account\" ? \"active\" : null) } to=\"/account\"><i className=\" hidden-md-down fa fa-desktop\"></i> Dashboard</Link>\n          <Link className={\"sk-heading nav-link \"+ ((currentLink == \"/account/ticket\") || (currentLink.indexOf(\"/account/ticket\") >= 0)  ? \"active\" : null) } to=\"/account/ticket\"><i className=\"hidden-md-down fa fa-ticket\"></i> Active Tickets</Link>\n          <Link className={\"sk-heading nav-link\"} to=\"/logout\"><i className=\"fa fa-power-off\"></i> Logout</Link>\n        </nav>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n      account_profile: state.account.profile,\n  };\n}\n\nexport default connect(mapStateToProps)(TitLeBox);\n","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\account\\modal_add_ticket_service.js",["526","527","528","529","530","531"],"import React,  { Component, PropTypes } from 'react';\nimport { connect } from 'react-redux';\nimport { Field,reduxForm } from 'redux-form'\nimport { Link } from 'react-router-dom';\nimport { modal } from '../library/elements/modal';\n\n\nimport { validationNull, getServices, addCustomService } from './account_action';\nimport { input, Loading, textarea  } from '../library/elements';\n\n\nclass ModalAddTicketService extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { isLoading:false };\n  }\n\n  componentWillMount() {\n\n    this.props.getServices();\n  }\n\n  handleForm(formProps) {\n    var service =  this.props.services.find((service) => {\n      if(service.service_id == formProps.service_id){\n        return service;\n      }\n    });\n    formProps.service = service;\n    //console.log(\"formProps>>>>>>\", formProps);return false;\n    this.setState({isLoading: true});\n    var _this = this;\n    this.props.addCustomService(formProps, function(err, result) {\n      if(result) {\n        _this.setState({isLoading: false});\n        _this.props.removeModal();\n      }\n    });\n  }\n\n  closeModal(){\n    this.props.removeModal();\n  }\n\n  renderServices(services){\n    if(services) {\n      return services.map((service) => {\n        return(\n          <option value={service.service_id} key={\"service.\"+service.service_id}>{service.name}</option>\n        );\n      });\n    } else {\n      return (\n        <option value=\"0\">Loading...</option>\n      )\n    }\n  }\n\n  render() {\n    const { handleSubmit, errorMessage, services } = this.props;\n    var isLoading = this.state.isLoading;\n\n    if(errorMessage){\n      isLoading = false;\n    }\n    if(!services){\n      return (\n        <div className=\"p-1\">\n          <Loading />\n        </div>\n      )\n    }\n    return (\n      <div className=\"cp-1\">\n        {isLoading ? <Loading /> : null  }\n        <form onSubmit={handleSubmit(this.handleForm.bind(this))}>\n          <fieldset className=\"form-group row\">\n            <div className=\"col-sm-12\">\n              <Field name=\"title\" type=\"text\" component={input} isRequired={true}  label=\"Title\"/>\n            </div>\n          </fieldset>\n          <fieldset className=\"form-group row\">\n            <div className=\"col-sm-12\">\n              <Field name=\"description\" type=\"text\" component={textarea} isRequired={true} label=\"Description\"/>\n            </div>\n          </fieldset>\n          <fieldset className=\"form-group row\">\n            <div className=\"col-sm-12\">\n              <label className=\"control-label required\">Select Service</label>\n              <Field name=\"service_id\" component={ service_id =>\n                <div>\n                  <select\n                    name=\"service_id\"\n                    className=\"form-control\"\n                    value={service_id.input.value}\n                    onChange={(event) => {\n                      service_id.input.onChange(event.target.value);\n                    }}\n                  >\n                  <option value=\"\">-- Select --</option>\n                  {this.renderServices(services)}\n                  </select>\n                  {service_id.meta.touched && ((service_id.meta.error && <div className=\"error\">{service_id.meta.error}</div>) || (service_id.meta.warning && <div className=\"error\">{service_id.meta.warning}</div>))}\n                </div>\n              } />\n            </div>\n          </fieldset>\n          <div className=\"form-group row\">\n            <div className=\"col-sm-8\">\n              <button\n                type=\"submit\"\n                action=\"formaddticketservice\"\n                disabled={isLoading}\n                className=\"btn btn-primary btn-block mb-2\">\n                  { isLoading ? 'Loading...' : 'Save'}\n              </button>\n            </div>\n            <div className=\"col-sm-4\">\n              <button className=\"btn btn-danger btn-block\" onClick={() => this.closeModal()}>Cancel</button>\n            </div>\n\n          </div>\n        </form>\n      </div>\n   );\n  }\n}\n\nfunction validate(formProps) {\n  const errors = {}\n\n  if (!formProps.title) {\n    errors.title = 'Required';\n  }\n\n  if(!formProps.description){\n    errors.description = 'Required';\n  }\n\n  if (!formProps.service_id) {\n    errors.service_id = 'Required';\n  }\n\n  return errors;\n}\n\nModalAddTicketService = reduxForm({\n  form: 'formaddticketservice',\n  enableReinitialize: true,\n  validate: validate\n})(ModalAddTicketService);\n\nfunction mapStateToProps(state, ownProps) {\n\n  return {\n    errorMessage: state.catalog.error,\n    services: state.account.services,\n  }\n}\nexport default connect(mapStateToProps, { getServices, addCustomService })(ModalAddTicketService);\n","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\account\\recent_ticket.js",["532","533","534","535"],"H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\catalog\\catalog_action.js",["536"],"import axios from 'axios';\nimport { API_URL } from '../../system/config';\nimport cookie from 'react-cookie';\n\nexport const GET_PAGES = 'GET_PAGES';\nexport const GET_PAGE_INFO = 'GET_PAGE_INFO';\n\n\n// Footer Pages\n  export function getPages(callback){\n    return function(dispatch) {\n      axios({\n        method: 'get',\n        url: `${API_URL}/catalog/page`,\n      })\n      .then(response => {\n        dispatch( { type: GET_PAGES, payload: response} );\n        if(callback){\n          callback(null, response);\n        }\n      })\n      .catch(response => {\n        //console.log(\"catch>>>>>\", response);\n      });\n    }\n  }\n  export function getPageInfo(pageData, callback) {\n    return function(dispatch) {\n      axios({\n        method: 'post',\n        url: `${API_URL}/catalog/page/info`,\n        data: {\n          props: pageData,\n        },\n      })\n      .then(response => {\n        dispatch( { type: GET_PAGE_INFO, payload: response } );\n        callback(null, response);\n      })\n      .catch(response => {\n        //console.log(\"catch>>>>>\", response);\n      });\n    }\n  }\n","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\provider\\titlebox.js",["537","538","539","540"],"H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\provider\\provider_action.js",["541","542","543","544","545","546","547","548","549","550","551","552","553"],"import axios from 'axios';\nimport cookie from 'react-cookie';\nimport * as config from '../../system/config';\nimport { lib } from '../library/elements';\n\n\nvar accountAction = require('../account/account_action');\n\nexport const FETCH_PROVIDER_TICKET_LIST = 'FETCH_PROVIDER_TICKET_LIST';\nexport const FETCH_PROVIDER_TICKET_TOTAL = 'FETCH_PROVIDER_TICKET_TOTAL';\nexport const FETCH_STATUSWISE_TICKETS = 'FETCH_STATUSWISE_TICKETS';\nexport const FETCH_PRIORITY_STATUS = 'FETCH_PRIORITY_STATUS';\nexport const VALIDATION_ERROR = 'VALIDATION_ERROR';\nexport const FETCH_TICKET_INFO = 'FETCH_TICKET_INFO';\nexport const GET_SERVICE_STATUS = 'GET_SERVICE_STATUS';\n\n\nexport function getRecentProviderTickets(filterdata,callback) {\n  return function(dispatch) {\n    axios({\n      method: 'post',\n      url: `${config.API_URL}/provider/recent/ticket`,\n      headers: {\n       provider: cookie.load('provider'),\n      },\n      data: {\n        props: filterdata,\n      },\n    })\n    .then(response => {\n      dispatch( { type: FETCH_PROVIDER_TICKET_LIST, payload: response } );\n      callback(null, response);\n    })\n    .catch(response => {\n    });\n  }\n}\n\n/* Ticket Related changes start */\nexport function getTickets(callback) {\n  return function(dispatch, getState) {\n    const state = getState();\n    var filters_state = state.common.list_filters;\n    var filter_data = {};\n    if(filters_state != undefined && filters_state.ticket != undefined){\n      var filter_data = filters_state.ticket;\n    }\n    axios({\n      method: 'post',\n      url: `${config.API_URL}/provider/ticket/list`,\n      headers: {\n       provider: cookie.load('provider'),\n      },\n      data: {\n        filter: filter_data,\n      },\n    })\n    .then(response => {\n      dispatch( { type: FETCH_PROVIDER_TICKET_LIST, payload: response } );\n\n      callback(null, response);\n    })\n    .catch(response => {\n      callback(true, null);\n    });\n  }\n}\n\nexport function getTotalTickets() {\n  return function(dispatch, getState) {\n    const state = getState();\n    var filters_state = state.common.list_filters;\n    var filter_data = {};\n    if(filters_state != undefined && filters_state.ticket != undefined){\n      var filter_data = filters_state.ticket;\n    }\n    axios({\n      method: 'post',\n      url: `${config.API_URL}/provider/ticket/total`,\n      headers: {\n       provider: cookie.load('provider'),\n      },\n      data: {\n        filter: filter_data,\n      },\n    })\n    .then(response => {\n      dispatch( { type: FETCH_PROVIDER_TICKET_TOTAL, payload: response } );\n    })\n    .catch(response => {\n    });\n  }\n}\n\n\n\nexport function getTicketStatus() {\n  return function(dispatch, getState) {\n    const state = getState();\n    var filters_state = state.common.list_filters;\n    var filter_data = {};\n    if(filters_state != undefined && filters_state.ticket != undefined){\n      var filter_data = filters_state.ticket;\n    }\n\n    axios({\n      method: 'post',\n      url: `${config.API_URL}/provider/ticket/status_wise_tickets`,\n      headers: {\n       provider: cookie.load('provider'),\n      },\n      data: {\n        filter: filter_data,\n      }\n    })\n    .then(response => {\n      dispatch( { type: FETCH_STATUSWISE_TICKETS, payload: response } );\n    })\n    .catch(response => {\n    });\n  }\n}\nexport function getTicketPriorityStatus() {\n  return function(dispatch, getState) {\n    const state = getState();\n    var filters_state = state.common.list_filters;\n    var filter_data = {};\n    if(filters_state != undefined && filters_state.ticket != undefined){\n      var filter_data = filters_state.ticket;\n    }\n\n    axios({\n      method: 'post',\n      url: `${config.API_URL}/provider/ticket/priority_wise_tickets`,\n      headers: {\n       provider: cookie.load('provider'),\n      },\n      data: {\n        filter: filter_data,\n      }\n    })\n    .then(response => {\n      dispatch( { type: FETCH_PRIORITY_STATUS, payload: response } );\n    })\n    .catch(response => {\n    });\n  }\n}\n\n\nexport function getTicket(filter, callback) {\n  return function(dispatch) {\n    axios({\n      method: 'post',\n      url: `${config.API_URL}/provider/ticket/info`,\n      headers: {\n        provider: cookie.load('provider')\n      },\n      data: {\n        option: filter,\n      },\n    })\n    .then(response => {\n\n      dispatch( { type: FETCH_TICKET_INFO, payload: response } );\n      callback(null, response);\n    })\n    .catch(response => {\n    });\n  }\n}\n//20-02-2019 close\n\nexport function getServiceStatus(){\n  return function(dispatch) {\n    axios.get(`${config.API_URL}/service/status`)\n    .then(response => {\n      dispatch( { type: GET_SERVICE_STATUS, payload: response} );\n    })\n    .catch(response => {\n    });\n  }\n}\n\nexport function addServiceHistory(formData,ticket_service_id, callback) {\n  var filter = {}\n  filter.ticket_service_id = ticket_service_id;\n  return function(dispatch) {\n    axios.post(`${config.API_URL}/provider/account/ticket/history/add`, formData, {\n      headers: { provider: cookie.load('provider'), folder: 'ticket' }\n    })\n    .then(response => {\n      if(!response.data.error && response.data){\n        lib.createAlert({message : 'History has been added!'});\n        dispatch(getTicket(filter,callback));\n        callback(null, response);\n      } else {\n        dispatch(validation(response.data.error));\n      }\n    })\n    .catch(response => {\n    });\n  }\n}\nexport function addTicketTiming(formData, callback) {\n  var filter = {}\n  filter.ticket_service_id = formData.ticket_service_id;\n  return function(dispatch) {\n    axios({\n      method: 'post',\n      url: `${config.API_URL}/provider/ticket/timing/add`,\n      headers: {\n        provider: cookie.load('provider')\n      },\n      data: {\n        props: formData\n      },\n    })\n    .then(response => {\n      if(!response.data.error && response.data) {\n        lib.createAlert({message : 'Ticket Time successfully!'});\n        dispatch(getTicket(filter,callback));\n        callback(null, response);\n      } else {\n        dispatch(validation(response.data.error));\n        callback(true, null);\n      }\n    })\n    .catch(response => {\n      dispatch(validation('Bad request.'));\n      callback(true, null);\n    });\n  }\n}\nexport function validation(error) {\n  return {\n    type: VALIDATION_ERROR,\n    payload: error\n  }\n}\n\nexport function validationNull() {\n  return {\n    type: VALIDATION_ERROR,\n    payload: null\n  }\n}\n","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\provider\\recent_ticket.js",["554","555"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Loading } from '../library/elements';\nimport { getRecentProviderTickets } from './provider_action';\nconst dateFormat = require('dateformat');\nclass ProviderTicket extends Component {\n\n  constructor() {\n  \tsuper();\n    this.handlePageChange = this.handlePageChange.bind(this);\n    this.state = { isLoading:false };\n  }\n\n  componentWillMount() {\n    var _this = this;\n    var filterdata = {\n     startlimit: 0,\n     endlimit: 10,\n    };\n    this.setState({isLoading: true});\n    this.props.getRecentProviderTickets(filterdata, function(err,result) {\n      if(result) {\n        _this.setState({isLoading: false});\n      }\n    });\n  }\n  handlePageChange(pageNumber) {\n    this.setState({isLoading: true});\n    var _this = this;\n    var filterdata = {\n     startlimit: ((pageNumber - 1) * 10 ),\n     endlimit: 10\n    };\n\n    //console.log(filterdata);\n    this.props.getRecentProviderTickets(filterdata, function(err, result) {\n      if(result) {\n        _this.setState({activePage: pageNumber});\n        _this.setState({isLoading: false});\n      }\n    });\n  }\n  renderTicketService(services){\n    if(services){\n      return services.map((service) => {\n        return (\n              <button type=\"button\" className=\"btn-outine mr-1\" key={\"ticket.service.\"+service.service_id} >{(service.name)}</button>\n\n        );\n      });\n    }\n  }\n\n  renderRecentMobileTickets(tickets) {\n    return tickets.map((ticket)=> {\n        var ticket_link = \"/provider/ticket_service/info/\"+ticket.ticket_service_id;\n      return(\n          <div className=\"col-sm-6\" key={'ticket_'+ticket.ticket_service_id}>\n          <Link className=\"ticket-link\" to = {ticket_link}>\n            <div className=\"card-ticket\">\n              <div className=\"row\">\n                <div className=\"col-sm-12 col-12\">\n                  <div className=\" row product-row-1 ticket-from\">\n                          <div className=\"col-lg-9 col-md-9 col-sm-9 col-xs-9 col-9 text-left name\">\n\n                            {\n                            ticket.service_name\n                            ?\n                            <p className=\"m-0\">\n                                <span className=\"m-ticket-id\">{ticket.ticket_id}</span>\n                                <small className=\"m-ticket-date\"> / <i className=\"fa fa-calendar\"></i> {dateFormat(ticket.date_added, \"dd-mm-yyyy\")} </small>\n                                <span className=\"btn-outine\"> {ticket.service_name}</span></p>\n                            :\n                            <p className=\"m-0\">\n                              <span className=\"m-ticket-id\">{ticket.ticket_id}</span>\n                              <small className=\"m-ticket-date\"> / <i className=\"fa fa-calendar\"></i> {dateFormat(ticket.date_added, \"dd-mm-yyyy\")} </small>\n                              <span className=\"btn-outine\"> no service </span></p>\n                          }\n\n                          </div>\n\n                          <div className=\"col-lg-3 col-md-3 col-sm-3 col-xs-3 col-3 price  text-right diate pull-right\">\n                            <div className=\"pull-right btn-status \">\n                              {\n                                ticket.priority_name\n                                ?\n                                <span className=\"btn-Status btn btn-success btn-sm pull-right mr-1\" style={{\"backgroundColor\":ticket.priority_color}}>{ticket.priority_name}</span>\n\n                                :\n\n                                null\n                              }\n                              <span className=\"btn-Status btn btn-success btn-sm pull-right \" style={{\"backgroundColor\":ticket.service_status_color}}>{ticket.service_status_name}</span>\n                            </div>\n                          </div>\n                  </div>\n                  <hr/>\n                    <div className=\" row product-row-1 ticket-from\">\n                            <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 col-12 text-left ticket-service\">\n                              {\n                              ticket.project_name\n                              ?\n                              <p className=\"m-0\"><span className=\"btn-outine\">{ticket.project_name}</span></p>\n                              :\n                              <p className=\"m-0\"><span className=\"btn-outine\">no project </span></p>\n                            }\n                            {\n                            ticket.project_location\n\n                              ?\n                              <p className=\"m-0\"><i className=\"fa fa-map-marker fa-lg mr-1\"></i><span className=\"ticket-title\">{ticket.project_location}</span></p>\n                              :\n                              <p className=\"m-0\"><span className=\"ticket-title\">no location available</span></p>\n                            }\n                            </div>\n\n                    </div>\n                </div>\n              </div>\n            </div>\n        </Link>\n      </div>\n      );\n    });\n  }\n  renderRecentTickets(tickets){\n    if(tickets.length){\n      return tickets.map((ticket) => {\n        var ticket_link = \"/provider/ticket_service/info/\"+ticket.ticket_service_id;\n\n        return (\n            <div className=\"col-sm-6\" key={'ticket_'+ticket.ticket_service_id}>\n              <Link className=\"ticket-link\" to = {ticket_link}>\n                <div className=\"card-ticket\">\n                  <div className=\"row\">\n                    <div className=\"col-sm-3 col-3\">\n                    <div className=\"colored-side\" style={{\"backgroundColor\":ticket.service_status_color}}></div>\n                      <h3 className=\"ticket-id\">{ticket.ticket_id}</h3>\n                      <div className=\"ticket-divider hidden-md-down\"></div>\n                          <div className=\"ticket-date\">\n                          {dateFormat(ticket.date_added, \"dd-mm-yyyy\")}\n                          <p className=\"m-0\"> {dateFormat(ticket.date_added, \"h:MM TT\")}</p>\n                        </div>\n                    </div>\n                    <div className=\"col-sm-9 col-9\">\n                      <div className=\" row product-row-1 ticket-from\">\n                              <div className=\"col-lg-9 col-md-9 col-sm-9 col-xs-9 col-9 text-left name\">\n                                {\n                                ticket.service_name\n                                ?\n                                <p className=\"m-0\"><span className=\"btn-outine\">{ticket.service_name}</span></p>\n                                :\n                                <p className=\"m-0\"><span className=\"btn-outine\">no Service </span></p>\n                              }\n\n\n                              </div>\n                              <div className=\"col-lg-3 col-md-3 col-sm-3 col-xs-3 col-3 price  text-right diate pull-right\">\n                                <Link className=\"btn-Status btn btn-success btn-sm pull-right \" style={{\"backgroundColor\":ticket.service_status_color}}>{ticket.service_status_name}</Link>\n                              </div>\n                      </div>\n                      <hr/>\n                        <div className=\" row product-row-1 ticket-from\">\n                                <div className=\"col-lg-9 col-md-9 col-sm-9 col-xs-9 col-12 text-left ticket-service\">\n                                  {\n                                  ticket.project_name\n                                  ?\n                                  <p className=\"m-0\"><span className=\"btn-outine\"><i className=\"fa fa-building-o fa-lg mr-1\"></i>{ticket.project_name}</span></p>\n                                  :\n                                  <p className=\"m-0\"><span className=\"btn-outine\">no project </span></p>\n                                }\n                                  {\n                                  ticket.project_location\n\n                                    ?\n                                    <p className=\"m-0\"><i className=\"fa fa-map-marker fa-lg mr-1\"></i><span className=\"ticket-title\">{ticket.project_location}</span></p>\n                                    :\n                                    <p className=\"m-0\"><span className=\"ticket-title\">no location available</span></p>\n                                  }\n                                </div>\n\n                        </div>\n                    </div>\n                  </div>\n                </div>\n            </Link>\n          </div>\n        );\n      });\n    }else{\n      return(\n        <div className=\"text-center col-sm-12\">\n            <div id=\"content\">\n              <div className=\"card\">\n                  <div className=\"card-body p-2\">\n                    <div className=\"no-result\"><h5>No Recent Tickets found!</h5></div>\n                  </div>\n              </div>\n          </div>\n        </div>\n      );\n    }\n  }\n\n  render() {\n    const { provider_ticket_list ,settings} = this.props;\n    var isLoading = this.state.isLoading;\n\n    if(provider_ticket_list == undefined){\n      return(\n        <div className=\"provider-ticket-undefined\"><Loading /></div>\n      );\n    }\n\n\n    return (\n        <div className=\"ticket-list\">\n        {isLoading ? <Loading /> : null  }\n          <div className=\"row mt-3 mb-3\">\n              <div className=\"col-sm-12\">\n                <div className=\"row data-list hidden-md-down\">\n                  {this.renderRecentTickets(provider_ticket_list)}\n                </div>\n                <div className=\"row data-list hidden-md-up\">\n                  {this.renderRecentMobileTickets(provider_ticket_list)}\n                </div>\n              </div>\n          </div>\n        </div>\n   );\n  }\n}\n\nfunction mapStateToProps(state) {\n\n  return {\n    authenticate_provider: state.account.authenticate_provider,\n    provider_ticket_list: state.provider.provider_ticket_list\n}\n}\n\nexport default connect(mapStateToProps, { getRecentProviderTickets })(ProviderTicket);\n","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\provider\\modal_add_ticket_timing.js",["556","557","558"],"import { format } from \"date-fns\";\nimport moment from 'moment';\nimport React, { Component } from 'react';\nimport DatePicker from 'react-datepicker';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport { lib } from '../library/elements';\nimport { addTicketTiming } from './provider_action';\nconst required = value => value ? undefined : 'Required';\nclass ModalAddTicketTime extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n      startDate: new Date()\n    };\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(date) {\n    this.setState({\n      startDate: date\n    });\n  }\n\n  handleFormSubmit(formProps) {\n    var momentToDate = moment(formProps.appointment_date, \"YYYY-MM-DD HH:mm\");\n    formProps.appointment_date = format(momentToDate._d, 'YYYY-MM-DD HH:mm');\n    formProps.service_id = this.props.service_id;\n    formProps.ticket_id = this.props.ticket_id;\n    formProps.ticket_service_id = this.props.ticket_service_id;\n\n    this.setState({ isLoading: false });\n    var _this = this;\n    this.props.addTicketTiming(formProps, function(err, result) {\n      _this.setState({ isLoading: false });\n      _this.props.reset('form_appointment');\n      _this.props.removeModal();\n    });\n  }\n  closeModal(){\n    this.props.removeModal();\n  }\n  dateChange(e) {\n    this.setState({isChangeDate: true});\n    this.setState({isChangeTime: true});\n    this.setState({datePickerDate: e._d});\n    var momentToDate = moment(e, \"YYYY-MM-DD HH:mm\");\n    this.setState({startDate: momentToDate._d});\n    this.setState({startTime: momentToDate._d});\n  }\n\n  renderTimes(times) {\n    return times.map((day_time) => {\n      var OpenstrTime = day_time.open;\n      var CloasestrTime = day_time.close;\n      var open_close = OpenstrTime+' - '+CloasestrTime+' ';\n      return open_close;\n    });\n  }\n\n  rendorTiming(timing) {\n    if(timing){\n      return timing.map((day_time) => {\n        var day = Object.keys(day_time)[0];\n        var open_close = this.renderTimes(day_time[day]);\n\n        day =  day.replace(/(^([a-zA-Z\\p{M}]))|([ -][a-zA-Z\\p{M}])/g,\n        function($1){\n          return $1.toUpperCase();\n        });\n\n        if(day == lib.getTodayString({})){\n          return (\n            <div key={\"time.\"+day}>\n              <div className=\"btn btn-xs btn-outline-success\" >{day} : {open_close} <i className=\"fa fa-check\"></i></div>\n            </div>\n          )\n        } else {\n          return (\n            <div key={\"vendor.time.\"+day}>\n              <div className=\"btn btn-xs btn-outline-secondary\" >{day} : {open_close}</div>\n            </div>\n          )\n        }\n      });\n    }\n  }\n\n  getTimeStops(start, end, interval){\n    var startTime = moment(start, 'HH:mm');\n    var endTime = moment(end, 'HH:mm');\n\n    if( endTime.isBefore(startTime) ){\n      endTime.add(1, 'day');\n    }\n\n    var timeStops = [];\n    //moment(todayDate+' '+timings[ti]['close'])\n    while(startTime <= endTime){\n      //timeStops.push(new moment(startTime).format('HH:mm'));\n      timeStops.push(moment(moment().format(\"YYYY-MM-DD\")+' '+new moment(startTime).format('HH:mm')));\n      startTime.add(interval, 'minutes');\n    }\n    return timeStops;\n  }\n\n\n  render() {\n    const { handleSubmit, setting  } = this.props;\n    let { isLoading } = this.state;\n\n    return (\n      <div className=\"ticket-timing cm-frm\">\n              <div className=\"card-ticket-timing\">\n                  <form className=\"\" onSubmit={handleSubmit(this.handleFormSubmit.bind(this))}>\n                    <div className=\"form-group\">\n                      <label className=\"control-label\">Select Date & Time\n                      </label>\n                      <Field name={`appointment_date`}\n                        component={ appointment_date => {\n                        return(\n                          <div className=\"dt-picker\">\n                            <DatePicker\n                              selected={!appointment_date.input.value ? null : moment(appointment_date.input.value)}\n                              onChange={(event) => {\n                                appointment_date.input.onChange(event);\n                              }}\n                              withPortal\n                              minDate={moment()}\n                              showTimeSelect\n                              placeholderText=\"Choose an available date and time\"\n                              timeFormat=\"hh:mm A\"\n                              dateFormat=\"DD-MM-YYYY hh:mm a\"\n                            />\n                          </div>\n                        )\n                      }} className=\"form-control\" />\n                    </div>\n                    <div className=\"card-footerr sk-form\">\n                      <div className=\"row\">\n                        <div className=\"col-sm-12\">\n                          <button\n                            className=\"btn btn-primary btn-block\"\n                            type=\"submit\"\n                            action=\"form_tickettime\"\n                            disabled={isLoading}>\n                            {isLoading ? 'Loading...' : 'Save'}\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                  </form>\n              </div>\n      </div>\n    );\n  }\n}\n\nfunction validate(formProps) {\n  const errors = {}\n  //console.log(\"formProps>>>>>\", formProps);\n  if(!formProps.appointment_date || formProps.appointment_date == null){\n    errors.appointment_date = \"Please select appointment date\"\n  }\n  return errors;\n}\n\nModalAddTicketTime = reduxForm({\n  form: 'form_tickettime',\n  validate: validate\n})(ModalAddTicketTime);\n\nfunction mapStateToProps(state) {\n  return {\n    setting: state.common.settings,\n  }\n}\n\nexport default connect(mapStateToProps ,{ addTicketTiming })(ModalAddTicketTime);\n","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\provider\\modal_view_ticket_history.js",["559","560","561","562","563","564","565","566","567","568"],"H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\provider\\modal_add_ticket_service.js",["569","570","571","572","573","574","575"],"import React,  { Component, PropTypes } from 'react';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm, FieldArray } from 'redux-form';\nimport { Link } from 'react-router-dom';\nimport { modal } from '../library/elements/modal';\n\nimport { addCustomService } from '../account/account_action';\nimport { validationNull, getServiceStatus, addServiceHistory } from './provider_action';\nimport { input, Loading, textarea ,InputImage } from '../library/elements';\n\n\nclass ModalAddTicketService extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { isLoading:false };\n    this.handleForm = this.handleForm.bind(this);\n  }\n\n  componentWillMount() {\n\n    this.props.getServiceStatus();\n  }\n\n  handleForm(formProps) {\n    var service =  this.props.services.find((service) => {\n      if(service.service_status_id == formProps.service_status_id){\n        return service;\n      }\n    });\n    var data = new FormData();\n    var images = formProps.image;\n    delete formProps.image;\n    for(var mi in images){\n      if(images[mi]['image'] !== undefined){\n        data.append('history_image', images[mi]['image'][0]);\n      }\n    }\n    formProps.service = service;\n    formProps.service_id = this.props.service_id;\n    formProps.ticket_id = this.props.ticket_id;\n    for (var key in formProps) {\n      data.append(key, JSON.stringify(formProps[key]));\n    }\n    this.setState({isLoading: true});\n    var _this = this;\n    this.props.addServiceHistory(data,this.props.ticket_service_id, function(err, result) {\n      if(result) {\n        _this.setState({isLoading: false});\n        _this.props.removeModal();\n      }\n    });\n  }\n\n  closeModal(){\n    this.props.removeModal();\n  }\n\n  renderServiceStatus(services){\n    if(services) {\n      return services.map((status) => {\n        return(\n          <option value={status.service_status_id} key={\"service.\"+status.service_status_id}>{status.name}</option>\n        );\n      });\n    } else {\n      return (\n        <option value=\"0\">Loading...</option>\n      )\n    }\n  }\n\n\n\n  render() {\n    const { handleSubmit, errorMessage, services  } = this.props;\n    var isLoading = this.state.isLoading;\n\n    if(errorMessage){\n      isLoading = false;\n    }\n    if(!services){\n      return (\n        <div className=\"p-1\">\n          <Loading />\n        </div>\n      )\n    }\n    const addMoreImage = ({ fields, meta: { touched, error } }) => (\n      <ul className=\"card-stripe-ul\">\n        {fields.map((item, index) =>\n          <li key={\"add_image_\"+index} className=\"card-stripe-ul-li\">\n            <span className=\"badge badge-danger remove-image\"\n              onClick={() => fields.remove(index)}\n              >\n              <i className=\"fa fa-close\"></i>\n            </span>\n            <Field name={`${item}.image`} type=\"text\" component={InputImage} label=\"Image\" className=\"form-control\"/>\n          </li>\n        )}\n        <li className=\"card-stripe-ul-li add_image\" onClick={() => fields.push({})}><i className=\"fa fa-plus-circle fa-5x\"></i></li>\n      </ul>\n    )\n    return (\n      <div className=\"cp-1\">\n        {isLoading ? <Loading /> : null  }\n        <form onSubmit={handleSubmit(this.handleForm.bind(this))}>\n          <fieldset className=\"form-group row\">\n            <div className=\"col-sm-12\">\n              <label className=\"control-label required\">Select Status</label>\n              <Field name=\"service_status_id\" component={ service_status_id =>\n                <div>\n                  <select\n                    name=\"service_status_id\"\n                    className=\"form-control\"\n                    value={service_status_id.input.value}\n                    onChange={(event) => {\n                      service_status_id.input.onChange(event.target.value);\n                    }}\n                  >\n                  <option value=\"\">-- Select --</option>\n                  {this.renderServiceStatus(services)}\n                  </select>\n                  {service_status_id.meta.touched && ((service_status_id.meta.error && <div className=\"error\">{service_status_id.meta.error}</div>) || (service_status_id.meta.warning && <div className=\"error\">{service_status_id.meta.warning}</div>))}\n                </div>\n              } />\n            </div>\n          </fieldset>\n          <fieldset className=\"form-group row\">\n            <div className=\"col-sm-12\">\n              <Field name=\"comment\" type=\"text\" component={textarea} isRequired={true} is_label={true} label=\"Comment\"/>\n            </div>\n          </fieldset>\n          <fieldset className=\"form-group row\">\n            <div className=\"cp-1\">\n              <div className=\"card-stripe\">\n                <FieldArray  name=\"image\" component={addMoreImage} />\n              </div>\n            </div>\n          </fieldset>\n          <div className=\"form-group row\">\n\n            <div className=\"col-sm-8\">\n              <button\n                type=\"submit\"\n                action=\"formaddticketservice\"\n                disabled={isLoading}\n                className=\"btn btn-primary btn-block mb-2\">\n                  { isLoading ? 'Loading...' : 'Save'}\n              </button>\n            </div>\n            <div className=\"col-sm-4\">\n              <button className=\"btn btn-danger btn-block\" onClick={() => this.closeModal()}>Cancel</button>\n            </div>\n          </div>\n        </form>\n      </div>\n   );\n  }\n}\n\nfunction validate(formProps) {\n  const errors = {}\n\n  if(!formProps.comment){\n    errors.comment = 'Required';\n  }\n\n  if (!formProps.service_status_id) {\n    errors.service_status_id = 'Required';\n  }\n\n  return errors;\n}\n\nModalAddTicketService = reduxForm({\n  form: 'formaddticketservice',\n  enableReinitialize: true,\n  validate: validate\n})(ModalAddTicketService);\n\nfunction mapStateToProps(state, ownProps) {\n\n  return {\n    errorMessage: state.provider.error,\n    services: state.provider.service_status,\n  }\n}\nexport default connect(mapStateToProps, { getServiceStatus, addServiceHistory ,addCustomService })(ModalAddTicketService);\n","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\library\\elements\\modal\\container\\modal_action.js",[],"H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\library\\elements\\modal\\container\\modal.js",[],"H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\account\\modal_edit_profile.js",["576","577","578","579","580","581","582","583","584","585"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport { getProjects, updateCustomerProfile } from '../account/account_action';\nimport { input } from '../library/elements';\nimport { IMAGE_URL }  from '../../system/config'\nclass UpdateProfile extends Component {\n\n  constructor(props) {\n    super(props);\n    this.handleProfileSubmit = this.handleProfileSubmit.bind(this);\n    this.removeModal = this.handleProfileSubmit.bind(this);\n    this.state = {\n      isLoading:false,\n      isPasswordText: false,\n      isPasswordConfirmText: false\n    };\n  }\ncomponentWillMount(){\n    this.props.getProjects();\n}\n  handleProfileSubmit(formProps) {\n    this.state = { isLoading:true };\n    const data = new FormData();\n    var keyName;\n    var i = 0;\n    var image = formProps.image;\n    delete formProps.image;\n    if(image){\n      data.append('file', image[0]);\n    }\n    for (var key in formProps) {\n      data.append(key, JSON.stringify(formProps[key]));\n    }\n    var _this = this;\n    this.props.updateCustomerProfile(data, function(err, result) {\n      if(result) {\n        _this.props.removeModal();\n      }\n    });\n  }\n  closeModal(){\n    this.props.removeModal();\n  }\n\n\n\n  addDefaultSrc(ev){\n    return ev.target.src = IMAGE_URL+'/'+'profile/User-default-image-boy.png';\n  }\n\n  renderPasswordMask(getState){\n    if(this.state[getState] == false){\n      this.setState({[getState] : true});\n    } else {\n      this.setState({[getState] : false});\n    }\n  }\n  renderConfirmPasswordMask(getState){\n    if(this.state[getState] == false){\n      this.setState({[getState] : true});\n    } else {\n      this.setState({[getState] : false});\n    }\n  }\n  renderProject(projects){\n    if(projects) {\n      return projects.map((project) => {\n        return(\n          <option value={project.project_id} key={\"project.\"+project.project_id}>{project.name}</option>\n        );\n      });\n    } else {\n      return (\n        <option value=\"0\">Loading...</option>\n      )\n    }\n  }\n  render() {\n    const { handleSubmit, errorMessage ,projects } = this.props;\n    var { isLoading, isPasswordText, isPasswordConfirmText  } = this.state;\n\n    if(errorMessage){\n      isLoading = false;\n    }\n\n    return (\n      <div className=\"profile-modal model-card\">\n        <form onSubmit={handleSubmit(this.handleProfileSubmit.bind(this))} className=\"df-form\">\n          {\n            errorMessage\n            ?\n            <fieldset className=\"form-group\">\n              <div className=\"col-sm-12 card-body\">\n                <div className=\"alert alert-danger\">\n                  { errorMessage }\n                </div>\n              </div>\n            </fieldset>\n            :\n            null\n          }\n\n          <div className=\"cp-1\">\n            <div className=\"form-group row\">\n              <div className=\"col-sm-12 text-center\">\n                <Field name=\"image\" component={ image =>{\n                  var showImage = null;\n                  if(image.input.value && image.input.value !== ''){\n                    showImage = (\n                      <div className=\"pro-image\">\n                        <img onError={this.addDefaultSrc} src={image.input.value.dataUrl?image.input.value.dataUrl:image.input.value} className='m-l-10' width='100' height='100' />\n                          <div className=\"fileUpload md-btn btn btn-primary\">\n                            <span>Upload Profile Image</span>\n                            <input type=\"file\"\n                             name=\"image\"\n                             className=\"ml-2\"\n                             onChange={(e)=> {\n                              var files = e.target.files;\n                              let reader = new FileReader();\n                              let file = e.target.files[0];\n                              reader.onload = function (e) {\n                                var picFile = e.target;\n                                files.dataUrl = picFile.result;\n                                image.input.onChange(files);\n                              }\n                            reader.readAsDataURL(file);\n                          }}/>\n                      </div>\n                    </div>\n                    )\n                  }\n                  return (\n                    <div>\n                    {\n                      showImage !== null\n                      ?\n                      showImage\n                      :\n                      <div className=\"fileUpload md-btn btn btn-primary\">\n                        <span>Upload Profile Image</span>\n                        <input type=\"file\"\n                         name=\"image\"\n                         className=\"m-l-20\"\n                         onChange={(e)=> {\n                          var files = e.target.files;\n                          let reader = new FileReader();\n                          let file = e.target.files[0];\n                          reader.onload = function (e) {\n                            var picFile = e.target;\n                            files.dataUrl = picFile.result;\n                            image.input.onChange(files);\n                          }\n                        reader.readAsDataURL(file);\n                      }}/> </div>}\n\n                  </div>)}\n                } />\n              </div>\n            </div>\n            <div className=\"form-group row\">\n              <div className=\"col-sm-6\">\n                <Field name=\"firstname\" type=\"text\" component={input}  label=\"First Name\" className=\"form-control\"/>\n              </div>\n              <div className=\"col-sm-6\">\n                <Field name=\"lastname\" type=\"text\" component={input}  label=\"Last Name\" className=\"form-control\"/>\n              </div>\n            </div>\n            <div className=\"form-group row\">\n              <div className=\"col-sm-6 mb-3\">\n                <Field name=\"email\" type=\"text\" component={input}  label=\"Email\" className=\"form-control\"/>\n              </div>\n              <div className=\"col-sm-6\">\n                <Field name=\"phone\" type=\"text\" component={input}  label=\"Mobile or Phone\" className=\"form-control\"/>\n              </div>\n            </div>\n\n            <div className=\"form-group row\">\n              <div className=\"col-sm-12\">\n                  {\n                    isPasswordText\n                    ?\n                    <Field name=\"password\" type=\"text\" component={input} label=\"* Password\" className=\"form-control\"/>\n                    :\n                    <Field name=\"password\" type=\"password\" component={input} label=\"* Password\" className=\"form-control\"/>\n                  }\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-sm btn-secondary password-mask\"\n                    onClick={() => this.renderPasswordMask('isPasswordText')}\n                  >\n                  { isPasswordText ? 'Hide' : 'Show' }\n                  </button>\n              </div>\n\n            </div>\n          \n\n            <div className=\"form-group row\">\n              <div className=\"col-sm-9\">\n                <button action=\"updateprofile\" type=\"submit\" disabled={isLoading} className=\"md-btn btn btn btn-primary btn-block mb-2\">\n                  <i className=\"fa fa-pencil-circle\"></i> {isLoading ? 'Loading...' : 'Update'}\n                </button>\n              </div>\n              <div className=\"col-sm-3\">\n                <button onClick={() => this.closeModal()} type=\"button\" className=\"md-btn btn btn-danger btn-block\">Cancel</button>\n              </div>\n\n            </div>\n\n          </div>\n        </form>\n      </div>\n  );\n  }\n}\n\nfunction validate(formProps) {\n  const errors = {}\n  if (!formProps.firstname) {\n    errors.firstname = 'Required First Name';\n  }\n  if (!formProps.lastname) {\n    errors.lastname = 'Required Last Name';\n  }\n  if (!formProps.email) {\n    errors.email = 'Required Email'\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(formProps.email)) {\n    errors.email = 'Invalid Email Address'\n  }\n\n  if (!formProps.telephone) {\n    errors.telephone = 'Required Mobile';\n  } else {\n    if (isNaN(formProps.telephone)) {\n      errors.telephone = 'Mobile number must be numeric only!';\n    } else if(formProps.telephone.length > 10){\n      errors.telephone = 'Mobile number must be up to 10 digit!';\n    }\n  }\n\n  if((formProps.password && formProps.confirm_password) && (formProps.password != formProps.confirm_password)) {\n      errors.confirm_password = 'Confirm must match to Password'\n  }\n\n\n  return errors;\n}\n\nfunction mapStateToProps(state) {\n  var iniCus={};\n  if(state.account.profile){\n    iniCus = state.account.profile;\n    iniCus.image = IMAGE_URL+ state.account.profile.customer_image;\n\n  }\n  return {\n    initialValues: iniCus,\n    errorMessage: state.account.error,\n    projects: state.account.projects\n  }\n}\n\nUpdateProfile = reduxForm({\n  form: 'updateprofile',\n  validate: validate\n})(UpdateProfile);\n\nexport default connect(mapStateToProps, {updateCustomerProfile ,getProjects })(UpdateProfile);\n","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\provider\\modal_edit_provider_profile.js",["586","587","588","589","590","591"],"H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\account\\provider_signup.js",["592","593","594"],"import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport { input,LoadingLarge } from '../library/elements';\nimport { contractorRegister } from './account_action';\nvar ReactRotatingText = require(\"react-rotating-text\");\nclass ProviderSignup extends Component {\n  constructor(props) {\n  \tsuper(props);\n    this.state = { \n      isLoading:false,\n      isPasswordText: false,\n      isPasswordConfirmText: false,\n     };\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n  }\n\n  componentWillMount() {\n    if(this.props.authenticated){\n      this.props.history.push('/provider_otp');\n    }\n  }\n\n  componentWillReceiveProps(){\n    this.state = { isLoading:false };\n  }\n\n  handleFormSubmit(formProps) {\n    this.setState({isLoading: true});\n    var _this = this;\n    this.props.contractorRegister(formProps, function(err, result) {\n      if(result) {\n        _this.setState({ isLoading: false });\n        _this.props.history.push('/provider_otp');\n      }\n    });\n  }\n\n  renderPasswordMask(getState) {\n    if (this.state[getState] === false) {\n      this.setState({ [getState]: true });\n    } else {\n      this.setState({ [getState]: false });\n    }\n  }\n  renderConfirmPasswordMask(getState) {\n    if (this.state[getState] === false) {\n      this.setState({ [getState]: true });\n    } else {\n      this.setState({ [getState]: false });\n    }\n  }\n  renderAlert() {\n    if(this.props.errorMessage) {\n      return (\n        <div className=\"alert alert-danger p-3\">\n        <strong>Oops! </strong> {this.props.errorMessage}\n        </div>\n      )\n    }\n  }\n\n\n  render() {\n    const { handleSubmit} = this.props;\n    var { isLoading, isPasswordText, isPasswordConfirmText } = this.state;\n\n    return (\n      <div id=\"content-container\" className=\"signup\">\n      {isLoading ? <LoadingLarge /> : null}\n      <div id=\"page-login\">\n        <div className=\"alc-bg-login cm-frm\">\n          <div className=\"row\">\n            <div className=\"col-sm-6 hidden-md-down d-none d-md-block\">\n              <div className=\"headings\">\n                <h1 className=\"alc-heading-xxl mt-3-minus alc-c-white\">\n                  Register Now <br />{\" \"}\n                  <ReactRotatingText\n                    items={[\"Contractor\"]}\n                    pause={1500}\n                    emptyPause={1000}\n                    typingInterval={100}\n                    deletingInterval={100}\n                  />\n                </h1>\n                <ul className=\"list-unstyled mt-4 alc-c-white \">\n                  <li className=\"mb-4\">\n                    <i className=\"alc-fa alc-icon-box fa fa-check alc-bg-primary mr-2\"></i>\n                    <span className=\"alc-font-1-3 ms-2\">\n                      Next Generation Service Provider System\n                    </span>\n                  </li>\n                  <li className=\"mb-4\">\n                    <i className=\"alc-fa alc-icon-box fa fa-check alc-bg-primary mr-2\"></i>\n                    <span className=\"alc-font-1-3 ms-2\">\n                      Smart Service Provider Management System\n                    </span>\n                  </li>\n                  <li className=\"mb-4\">\n                    <i className=\"alc-fa alc-icon-box fa fa-check alc-bg-primary mr-2\"></i>\n                    <span className=\"alc-font-1-3 ms-2\">Ready to Change</span>\n                  </li>\n                  <li className=\"mb-4\">\n                    <i className=\"alc-fa alc-icon-box fa fa-check alc-bg-primary mr-2\"></i>\n                    <span className=\"alc-font-1-3 ms-2\">\n                      FREE Sign Up, Get Service\n                    </span>\n                  </li>\n                </ul>\n                <Link\n                  to=\"/provider_signin\"\n                  className={\n                    \"btn alc-btn  btn-primary alc-btn-shadow alc-btn-large\"\n                  }\n                >\n                  Login Now\n                </Link>\n              </div>\n            </div>\n            <div className=\"col-sm-6\">\n              <div className=\"card alc-card-form\">\n                <div className=\" p-3 bg-transparent\">\n                  {\" \"}\n                  <h3 className=\"alc-card-form-title m-0\">Contractor Sign Up</h3>\n                </div>\n                <div className=\"card-body\">\n                 \n                <form className=\"cm-frm\" onSubmit={handleSubmit(this.handleFormSubmit.bind(this))} className=\"signup-form df-form\">\n                        {this.renderAlert()}\n                        <div className=\"card-block\">\n                          <div className=\"row form-group\">\n                            <div className=\"col-sm-6\">\n                              <Field name=\"firstname\" type=\"text\" component={input} label=\"* First Name\" isBorderError={true} className=\"form-control\"/>\n                            </div>\n                            <div className=\"col-sm-6\">\n                              <Field name=\"lastname\" type=\"text\" component={input} label=\"* Last Name\" isBorderError={true} className=\"form-control\"/>\n                            </div>\n                          </div>\n                          <div className=\"row form-group\">\n                            <div className=\"col-sm-6 mb-3\">\n                              <Field name=\"email\" type=\"text\" component={input} label=\"* Email\" isBorderError={true} className=\"form-control\"/>\n                            </div>\n                              <div className=\"col-sm-6\">\n                                <Field name=\"phone\" type=\"text\" component={input} label=\"* Mobile or Phone\" isBorderError={true} className=\"form-control\"/>\n                              </div>\n                          </div>\n                          <div className=\"row form-group\">\n                            <div className=\"col-sm-12\">\n                              <Field name=\"address\" type=\"text\" component={input} label=\"* Address\" isBorderError={true} className=\"form-control\"/>\n                            </div>\n                          </div>\n                          <div className=\" row mb-3\">\n                          <div className=\"col-sm-6 form-group\">\n                            <div className=\"input-group\">\n                              {\n                                isPasswordText\n                                  ?\n                                  <Field name=\"password\" type=\"password\"  component={input} label=\"* Password\" className=\"form-control\" />\n                                  :\n                                  <Field name=\"password\" type=\"password\" component={input} label=\"* Password\" className=\"form-control\" />\n                              }\n                              <button\n                                type=\"button\"\n                                className=\"btn btn-sm btn-light password-mask shadow-none\"\n                                onClick={() => this.renderPasswordMask('isPasswordText')}\n                              >\n                                {isPasswordText ? <i className=\"fa fa-eye\"></i> : <i className=\"fa fa-eye-slash\"></i>}\n\n                              </button>\n                            </div>\n                          </div>\n                          <div className=\"col-sm-6\">\n                            <div className=\"input-group\">\n                              {\n                                isPasswordConfirmText\n                                  ?\n                                  <Field name=\"confirm_password\"  type=\"text\" component={input} label=\"* Confirm Password\" className=\"form-control\" />\n                                  :\n                                  <Field name=\"confirm_password\"  type=\"password\" component={input} label=\"* Confirm Password\" className=\"form-control\" />\n                              }\n                              <button\n                                type=\"button\"\n                                className=\"btn btn-sm btn-light password-mask shadow-none\"\n                                onClick={() => this.renderConfirmPasswordMask('isPasswordConfirmText')}\n                              >\n                                {isPasswordText ? <i className=\"fa fa-eye\"></i> : <i className=\"fa fa-eye-slash\"></i>}\n                              </button>\n                            </div>\n                          </div>\n                        </div>\n                          <div className=\"form-group\">\n                            <div className=\"col-sm-12 hidden-md-down\">\n                              <button action=\"signup\" type=\"submit\" className=\"btn btn-primary pull-right\">SignUp</button>\n                            </div>\n                            <div className=\"col-sm-12 hidden-md-up p-0\">\n                              <button action=\"signup\" type=\"submit\" className=\"btn btn-primary pull-right btn-block\">SignUp</button>\n                            </div>\n                          </div>\n                          <div className=\"form-group\">\n                            <div className=\"col-sm-12 text-center\">\n\n                            </div>\n                          </div>\n                        </div>\n                      </form>\n                 \n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      </div>\n  );\n  }\n}\n\nfunction validate(formProps) {\n  const errors = {}\n  if (!formProps.firstname) {\n    errors.firstname = 'Required  First Name';\n  }\n  if (!formProps.lastname) {\n    errors.lastname = 'Required  Last Name';\n  }\n  if (!formProps.address) {\n    errors.address = 'Required  Address';\n  }\n  if (!formProps.email) {\n    errors.email = 'Required Email'\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(formProps.email)) {\n    errors.email = 'Invalid Email Address'\n  }\n  if (!formProps.phone) {\n    errors.phone = 'Required Mobile';\n  } else {\n    var phoneno = /^\\d{10}$/;\n    if (isNaN(formProps.phone)) {\n      errors.phone = 'Mobile number must be numeric only!';\n    } else if(formProps.phone.length < 10){\n      errors.phone = 'Mobile number must be in 10 digit!';\n    } else if(!formProps.phone.match(phoneno)){\n      errors.phone = 'Mobile number must be numeric only!';\n    }\n  }\n  if (!formProps.password) {\n    errors.password = 'Required Password'\n  } else if (formProps.password.length < 6) {\n    errors.password = 'Password must more than 6 characters'\n  }\n  if (!formProps.confirm_password) {\n    errors.confirm_password = 'Required Confirm Password'\n  }\n  if(formProps.password != formProps.confirm_password) {\n      errors.confirm_password = 'Confirm must match to Password'\n  }\n\n  return errors\n}\n\nfunction mapStateToProps(state) {\n  return {\n    authenticated: state.account.authenticated,\n    errorMessage: state.account.error,\n\n  }\n}\n\nProviderSignup = reduxForm({\n  form: 'provider_signup',\n  validate: validate\n})(ProviderSignup);\n\nexport default connect(mapStateToProps, { contractorRegister})(ProviderSignup);\n","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\account\\provider_otp.js",["595","596","597","598"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Field, reduxForm } from 'redux-form';\nimport { input, Loading } from '../library/elements';\nimport { contractorLoginOTP, resendContractorOTP } from './account_action';\n\nclass ProviderOtp extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { isLoading:false, isError: '', currentPage:\"1\" };\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n  }\n\n  componentWillMount(){\n    if(!this.props.contractor_login_phone){\n    this.props.history.push('/provider_signin');\n    }\n  }\n\n  handleFormSubmit(formProps) {\n    this.setState({ isLoading: true });\n    this.setState({ isError: '' });\n    var _this = this;\n  formProps.phone = this.props.contractor_login_phone;\n    this.props.contractorLoginOTP(formProps, function(err, result) {\n      if(result.error) {\n        _this.setState({ isLoading: false });\n        _this.setState({ isError: result.error });\n      } else {\n        _this.props.history.push('/provider');\n      }\n    });\n  }\n\n  resendContractorOTP(){\n    this.setState({ isLoading: true });\n    this.setState({ isError: '' });\n    var _this = this;\n    var phone = this.props.contractor_login_phone;\n    this.props.resendContractorOTP(phone, function(err, result) {\n      if(result) {\n        _this.props.reset('accountotp');\n        _this.setState({ isLoading: false });\n      }\n    });\n  }\n\n  renderAlert() {\n    if(this.props.errorMessage) {\n      this.setState({ isButtonLoading: false });\n      return (\n        <div className=\"alert alert-danger m-b-1\">\n        <strong>Oops! </strong> {this.props.errorMessage}\n        </div>\n      )\n    }\n  }\n\n  changeCurrentPage(page){\n    this.setState({currentPage : page});\n  }\n\n  render() {\n\n    const { handleSubmit, authenticated, alert, login_phone } = this.props;\n    let isLoading = this.state.isLoading;\n    let isError = this.state.isError;\n    let currentPage = this.state.currentPage;\n\n    return (\n      <div id=\"content-container\" className=\"cm-frm signup pt-5 pb-5\">\n        { isLoading ? <Loading /> : null }\n        <div className=\"account-banner\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-sm-3 hidden-lg-down\"></div>\n              <div className=\"col-sm-6\">\n                <div className=\"card\">\n\n                  <div className=\"card-header text-center\">\n                    <h5 className=\"pseudo_border m-0\">Login with OTP</h5>\n                  </div>\n                  <form onSubmit={handleSubmit(this.handleFormSubmit.bind(this))}>\n                    <div className=\"card-block\">\n                      {\n                        isError\n                        ?\n                        <div className=\"form-group\">\n                          <div className=\"col-sm-12\">\n                            <div className=\"alert alert-warning\">{isError}</div>\n                          </div>\n                        </div>\n                        :\n                        null\n                      }\n                      {this.renderAlert()}\n                      <p className=\"card-text\">\n                        One Time Passcode (OTP) is a numeric code that is only valid for a one time activation when you signup.\n                        The OTP will be sent via SMS to your mobile  phone number as registered with Mysscrow.\n                        It will expire in 2 minutes.\n                        Please enter the OTP below to verify your mobile\n                      </p>\n                        <label><strong>Enter OTP</strong></label>\n                      <div className=\"form-group row\">\n                        <div className=\"col-sm-12 position-relative has-icon-left\">\n                          <Field name=\"otp\" type=\"text\" icon=\"fa fa-phone\" component={input} label=\"OTP\"/>\n                        </div>\n                      </div>\n                      <div className=\"form-group row\">\n                        <div className=\"col-sm-12 position-relative has-icon-left\">\n                          <Link className=\"form-link\" onClick={() => this.resendContractorOTP()} ><h6>Resend OTP</h6></Link>\n                        </div>\n                      </div>\n                      <div className=\"form-group\">\n                        <div className=\"col-sm-12\">\n                          <button\n                            type=\"submit\"\n                            action=\"accountotp\"\n                            disabled={isLoading}\n                            className=\"btn btn-outline-zoom btn-block\">\n                              <i className=\"fa fa-check-square-o\"></i>  { isLoading ? 'Loading...' : 'Validate OTP'}\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                  </form>\n                </div>\n              </div>\n                <div className=\"col-sm-3 hidden-lg-down\"></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n\n  }\n}\n\nfunction validate(formProps) {\n  const errors = {}\n  if (!formProps.otp) {\n    errors.otp = 'Required OTP';\n  } else {\n    if (isNaN(formProps.otp)) {\n      errors.otp = 'OTP  must be numeric only!';\n    } else if(formProps.otp.length > 6){\n      errors.otp = 'OTP  must be up to 6 digit!';\n    }\n  }\n\n  return errors\n}\n\nProviderOtp = reduxForm({\n  form: 'providerotp',\n  validate: validate\n})(ProviderOtp);\n\nfunction mapStateToProps(state) {\n  return {\n    errorMessage: state.account.error,\n    authenticated: state.account.authenticated,\n    contractor_login_phone: state.account.contractor_login_phone,\n  }\n}\n\nexport default connect(mapStateToProps, { contractorLoginOTP, resendContractorOTP })(ProviderOtp);\n",{"ruleId":"599","replacedBy":"600"},{"ruleId":"601","replacedBy":"602"},{"ruleId":"603","severity":1,"message":"604","line":5,"column":5,"nodeType":"605","messageId":"606","endLine":5,"endColumn":17},{"ruleId":"607","severity":1,"message":"608","line":46,"column":19,"nodeType":"609","messageId":"610","endLine":46,"endColumn":21},{"ruleId":"607","severity":1,"message":"608","line":46,"column":55,"nodeType":"609","messageId":"610","endLine":46,"endColumn":57},{"ruleId":"607","severity":1,"message":"608","line":122,"column":19,"nodeType":"609","messageId":"610","endLine":122,"endColumn":21},{"ruleId":"607","severity":1,"message":"608","line":122,"column":55,"nodeType":"609","messageId":"610","endLine":122,"endColumn":57},{"ruleId":"607","severity":1,"message":"611","line":232,"column":32,"nodeType":"609","messageId":"610","endLine":232,"endColumn":34},{"ruleId":"607","severity":1,"message":"608","line":279,"column":19,"nodeType":"609","messageId":"610","endLine":279,"endColumn":21},{"ruleId":"607","severity":1,"message":"608","line":279,"column":49,"nodeType":"609","messageId":"610","endLine":279,"endColumn":51},{"ruleId":"607","severity":1,"message":"608","line":279,"column":91,"nodeType":"609","messageId":"610","endLine":279,"endColumn":93},{"ruleId":"607","severity":1,"message":"608","line":286,"column":19,"nodeType":"609","messageId":"610","endLine":286,"endColumn":21},{"ruleId":"607","severity":1,"message":"608","line":286,"column":49,"nodeType":"609","messageId":"610","endLine":286,"endColumn":51},{"ruleId":"607","severity":1,"message":"611","line":286,"column":79,"nodeType":"609","messageId":"610","endLine":286,"endColumn":81},{"ruleId":"607","severity":1,"message":"608","line":355,"column":26,"nodeType":"609","messageId":"610","endLine":355,"endColumn":28},{"ruleId":"607","severity":1,"message":"608","line":385,"column":19,"nodeType":"609","messageId":"610","endLine":385,"endColumn":21},{"ruleId":"607","severity":1,"message":"608","line":385,"column":49,"nodeType":"609","messageId":"610","endLine":385,"endColumn":51},{"ruleId":"607","severity":1,"message":"608","line":385,"column":99,"nodeType":"609","messageId":"610","endLine":385,"endColumn":101},{"ruleId":"607","severity":1,"message":"608","line":393,"column":19,"nodeType":"609","messageId":"610","endLine":393,"endColumn":21},{"ruleId":"607","severity":1,"message":"608","line":393,"column":49,"nodeType":"609","messageId":"610","endLine":393,"endColumn":51},{"ruleId":"607","severity":1,"message":"611","line":393,"column":79,"nodeType":"609","messageId":"610","endLine":393,"endColumn":81},{"ruleId":"607","severity":1,"message":"608","line":484,"column":22,"nodeType":"609","messageId":"610","endLine":484,"endColumn":24},{"ruleId":"607","severity":1,"message":"608","line":484,"column":59,"nodeType":"609","messageId":"610","endLine":484,"endColumn":61},{"ruleId":"612","severity":1,"message":"613","line":485,"column":11,"nodeType":"605","messageId":"614","endLine":485,"endColumn":22},{"ruleId":"607","severity":1,"message":"608","line":513,"column":22,"nodeType":"609","messageId":"610","endLine":513,"endColumn":24},{"ruleId":"607","severity":1,"message":"608","line":513,"column":59,"nodeType":"609","messageId":"610","endLine":513,"endColumn":61},{"ruleId":"612","severity":1,"message":"613","line":514,"column":11,"nodeType":"605","messageId":"614","endLine":514,"endColumn":22},{"ruleId":"607","severity":1,"message":"608","line":542,"column":22,"nodeType":"609","messageId":"610","endLine":542,"endColumn":24},{"ruleId":"607","severity":1,"message":"608","line":542,"column":59,"nodeType":"609","messageId":"610","endLine":542,"endColumn":61},{"ruleId":"612","severity":1,"message":"613","line":543,"column":11,"nodeType":"605","messageId":"614","endLine":543,"endColumn":22},{"ruleId":"603","severity":1,"message":"615","line":140,"column":7,"nodeType":"605","messageId":"606","endLine":140,"endColumn":20},{"ruleId":"603","severity":1,"message":"616","line":141,"column":7,"nodeType":"605","messageId":"606","endLine":141,"endColumn":28},{"ruleId":"603","severity":1,"message":"617","line":142,"column":7,"nodeType":"605","messageId":"606","endLine":142,"endColumn":22},{"ruleId":"603","severity":1,"message":"618","line":143,"column":7,"nodeType":"605","messageId":"606","endLine":143,"endColumn":23},{"ruleId":"603","severity":1,"message":"619","line":9,"column":9,"nodeType":"605","messageId":"606","endLine":9,"endColumn":14},{"ruleId":"620","severity":1,"message":"621","line":26,"column":9,"nodeType":"622","messageId":"610","endLine":26,"endColumn":13},{"ruleId":"603","severity":1,"message":"623","line":1,"column":8,"nodeType":"605","messageId":"606","endLine":1,"endColumn":13},{"ruleId":"603","severity":1,"message":"624","line":2,"column":8,"nodeType":"605","messageId":"606","endLine":2,"endColumn":14},{"ruleId":"603","severity":1,"message":"625","line":3,"column":10,"nodeType":"605","messageId":"606","endLine":3,"endColumn":17},{"ruleId":"603","severity":1,"message":"626","line":3,"column":18,"nodeType":"605","messageId":"606","endLine":3,"endColumn":28},{"ruleId":"607","severity":1,"message":"608","line":29,"column":22,"nodeType":"609","messageId":"610","endLine":29,"endColumn":24},{"ruleId":"607","severity":1,"message":"608","line":29,"column":59,"nodeType":"609","messageId":"610","endLine":29,"endColumn":61},{"ruleId":"607","severity":1,"message":"608","line":30,"column":15,"nodeType":"609","messageId":"610","endLine":30,"endColumn":17},{"ruleId":"607","severity":1,"message":"611","line":30,"column":36,"nodeType":"609","messageId":"610","endLine":30,"endColumn":38},{"ruleId":"627","severity":1,"message":"628","line":10,"column":1,"nodeType":"629","endLine":23,"endColumn":2},{"ruleId":"627","severity":1,"message":"628","line":31,"column":1,"nodeType":"629","endLine":80,"endColumn":2},{"ruleId":"603","severity":1,"message":"630","line":32,"column":10,"nodeType":"605","messageId":"606","endLine":32,"endColumn":25},{"ruleId":"603","severity":1,"message":"631","line":2,"column":10,"nodeType":"605","messageId":"606","endLine":2,"endColumn":16},{"ruleId":"607","severity":1,"message":"608","line":19,"column":65,"nodeType":"609","messageId":"610","endLine":19,"endColumn":67},{"ruleId":"603","severity":1,"message":"615","line":62,"column":27,"nodeType":"605","messageId":"606","endLine":62,"endColumn":40},{"ruleId":"603","severity":1,"message":"632","line":64,"column":9,"nodeType":"605","messageId":"606","endLine":64,"endColumn":16},{"ruleId":"603","severity":1,"message":"633","line":4,"column":10,"nodeType":"605","messageId":"606","endLine":4,"endColumn":14},{"ruleId":"634","severity":1,"message":"635","line":26,"column":5,"nodeType":"636","endLine":26,"endColumn":9},{"ruleId":"607","severity":1,"message":"608","line":203,"column":25,"nodeType":"609","messageId":"610","endLine":203,"endColumn":27},{"ruleId":"603","severity":1,"message":"631","line":2,"column":10,"nodeType":"605","messageId":"606","endLine":2,"endColumn":16},{"ruleId":"607","severity":1,"message":"611","line":19,"column":35,"nodeType":"609","messageId":"610","endLine":19,"endColumn":37},{"ruleId":"607","severity":1,"message":"608","line":19,"column":73,"nodeType":"609","messageId":"610","endLine":19,"endColumn":75},{"ruleId":"603","severity":1,"message":"615","line":60,"column":27,"nodeType":"605","messageId":"606","endLine":60,"endColumn":40},{"ruleId":"603","severity":1,"message":"632","line":62,"column":9,"nodeType":"605","messageId":"606","endLine":62,"endColumn":16},{"ruleId":"627","severity":1,"message":"628","line":4,"column":1,"nodeType":"629","endLine":32,"endColumn":2},{"ruleId":"599","replacedBy":"637"},{"ruleId":"601","replacedBy":"638"},{"ruleId":"603","severity":1,"message":"619","line":12,"column":9,"nodeType":"605","messageId":"606","endLine":12,"endColumn":14},{"ruleId":"620","severity":1,"message":"621","line":16,"column":11,"nodeType":"622","messageId":"610","endLine":16,"endColumn":13},{"ruleId":"603","severity":1,"message":"639","line":17,"column":11,"nodeType":"605","messageId":"606","endLine":17,"endColumn":20},{"ruleId":"640","severity":1,"message":"641","line":33,"column":23,"nodeType":"642","messageId":"610","endLine":33,"endColumn":40},{"ruleId":"603","severity":1,"message":"617","line":12,"column":13,"nodeType":"605","messageId":"606","endLine":12,"endColumn":28},{"ruleId":"603","severity":1,"message":"633","line":4,"column":10,"nodeType":"605","messageId":"606","endLine":4,"endColumn":14},{"ruleId":"603","severity":1,"message":"639","line":18,"column":11,"nodeType":"605","messageId":"606","endLine":18,"endColumn":20},{"ruleId":"603","severity":1,"message":"615","line":67,"column":27,"nodeType":"605","messageId":"606","endLine":67,"endColumn":40},{"ruleId":"603","severity":1,"message":"643","line":67,"column":42,"nodeType":"605","messageId":"606","endLine":67,"endColumn":47},{"ruleId":"603","severity":1,"message":"644","line":67,"column":49,"nodeType":"605","messageId":"606","endLine":67,"endColumn":60},{"ruleId":"603","severity":1,"message":"645","line":70,"column":9,"nodeType":"605","messageId":"606","endLine":70,"endColumn":20},{"ruleId":"607","severity":1,"message":"608","line":19,"column":35,"nodeType":"609","messageId":"610","endLine":19,"endColumn":37},{"ruleId":"603","severity":1,"message":"616","line":52,"column":27,"nodeType":"605","messageId":"606","endLine":52,"endColumn":48},{"ruleId":"603","severity":1,"message":"632","line":54,"column":9,"nodeType":"605","messageId":"606","endLine":54,"endColumn":16},{"ruleId":"603","severity":1,"message":"633","line":3,"column":10,"nodeType":"605","messageId":"606","endLine":3,"endColumn":14},{"ruleId":"603","severity":1,"message":"646","line":8,"column":19,"nodeType":"605","messageId":"606","endLine":8,"endColumn":22},{"ruleId":"640","severity":1,"message":"647","line":242,"column":5,"nodeType":"642","messageId":"610","endLine":242,"endColumn":13},{"ruleId":"607","severity":1,"message":"611","line":84,"column":20,"nodeType":"609","messageId":"610","endLine":84,"endColumn":22},{"ruleId":"607","severity":1,"message":"608","line":194,"column":40,"nodeType":"609","messageId":"610","endLine":194,"endColumn":42},{"ruleId":"607","severity":1,"message":"608","line":247,"column":40,"nodeType":"609","messageId":"610","endLine":247,"endColumn":42},{"ruleId":"607","severity":1,"message":"611","line":347,"column":37,"nodeType":"609","messageId":"610","endLine":347,"endColumn":39},{"ruleId":"603","severity":1,"message":"648","line":389,"column":7,"nodeType":"605","messageId":"606","endLine":389,"endColumn":40},{"ruleId":"603","severity":1,"message":"649","line":391,"column":7,"nodeType":"605","messageId":"606","endLine":391,"endColumn":18},{"ruleId":"607","severity":1,"message":"611","line":397,"column":19,"nodeType":"609","messageId":"610","endLine":397,"endColumn":21},{"ruleId":"607","severity":1,"message":"611","line":398,"column":20,"nodeType":"609","messageId":"610","endLine":398,"endColumn":22},{"ruleId":"607","severity":1,"message":"611","line":399,"column":28,"nodeType":"609","messageId":"610","endLine":399,"endColumn":30},{"ruleId":"607","severity":1,"message":"608","line":410,"column":30,"nodeType":"609","messageId":"610","endLine":410,"endColumn":32},{"ruleId":"607","severity":1,"message":"608","line":436,"column":35,"nodeType":"609","messageId":"610","endLine":436,"endColumn":37},{"ruleId":"607","severity":1,"message":"608","line":458,"column":24,"nodeType":"609","messageId":"610","endLine":458,"endColumn":26},{"ruleId":"607","severity":1,"message":"611","line":57,"column":19,"nodeType":"609","messageId":"610","endLine":57,"endColumn":21},{"ruleId":"607","severity":1,"message":"608","line":212,"column":51,"nodeType":"609","messageId":"610","endLine":212,"endColumn":53},{"ruleId":"607","severity":1,"message":"611","line":242,"column":20,"nodeType":"609","messageId":"610","endLine":242,"endColumn":22},{"ruleId":"607","severity":1,"message":"611","line":242,"column":49,"nodeType":"609","messageId":"610","endLine":242,"endColumn":51},{"ruleId":"607","severity":1,"message":"611","line":242,"column":86,"nodeType":"609","messageId":"610","endLine":242,"endColumn":88},{"ruleId":"607","severity":1,"message":"608","line":255,"column":27,"nodeType":"609","messageId":"610","endLine":255,"endColumn":29},{"ruleId":"627","severity":1,"message":"628","line":6,"column":1,"nodeType":"629","endLine":15,"endColumn":2},{"ruleId":"627","severity":1,"message":"628","line":5,"column":1,"nodeType":"629","endLine":33,"endColumn":2},{"ruleId":"603","severity":1,"message":"618","line":12,"column":13,"nodeType":"605","messageId":"606","endLine":12,"endColumn":29},{"ruleId":"607","severity":1,"message":"611","line":18,"column":64,"nodeType":"609","messageId":"610","endLine":18,"endColumn":66},{"ruleId":"603","severity":1,"message":"650","line":1,"column":28,"nodeType":"605","messageId":"606","endLine":1,"endColumn":37},{"ruleId":"603","severity":1,"message":"633","line":3,"column":10,"nodeType":"605","messageId":"606","endLine":3,"endColumn":14},{"ruleId":"603","severity":1,"message":"651","line":32,"column":11,"nodeType":"605","messageId":"606","endLine":32,"endColumn":21},{"ruleId":"603","severity":1,"message":"631","line":3,"column":10,"nodeType":"605","messageId":"606","endLine":3,"endColumn":16},{"ruleId":"603","severity":1,"message":"633","line":3,"column":18,"nodeType":"605","messageId":"606","endLine":3,"endColumn":22},{"ruleId":"607","severity":1,"message":"611","line":82,"column":19,"nodeType":"609","messageId":"610","endLine":82,"endColumn":21},{"ruleId":"603","severity":1,"message":"652","line":371,"column":62,"nodeType":"605","messageId":"606","endLine":371,"endColumn":84},{"ruleId":"603","severity":1,"message":"648","line":373,"column":24,"nodeType":"605","messageId":"606","endLine":373,"endColumn":57},{"ruleId":"603","severity":1,"message":"649","line":373,"column":79,"nodeType":"605","messageId":"606","endLine":373,"endColumn":90},{"ruleId":"607","severity":1,"message":"611","line":375,"column":20,"nodeType":"609","messageId":"610","endLine":375,"endColumn":22},{"ruleId":"607","severity":1,"message":"611","line":375,"column":49,"nodeType":"609","messageId":"610","endLine":375,"endColumn":51},{"ruleId":"607","severity":1,"message":"611","line":375,"column":86,"nodeType":"609","messageId":"610","endLine":375,"endColumn":88},{"ruleId":"607","severity":1,"message":"608","line":382,"column":29,"nodeType":"609","messageId":"610","endLine":382,"endColumn":31},{"ruleId":"603","severity":1,"message":"653","line":383,"column":7,"nodeType":"605","messageId":"606","endLine":383,"endColumn":19},{"ruleId":"603","severity":1,"message":"654","line":384,"column":7,"nodeType":"605","messageId":"606","endLine":384,"endColumn":14},{"ruleId":"607","severity":1,"message":"608","line":404,"column":36,"nodeType":"609","messageId":"610","endLine":404,"endColumn":38},{"ruleId":"607","severity":1,"message":"608","line":430,"column":23,"nodeType":"609","messageId":"610","endLine":430,"endColumn":25},{"ruleId":"603","severity":1,"message":"655","line":1,"column":8,"nodeType":"605","messageId":"606","endLine":1,"endColumn":14},{"ruleId":"627","severity":1,"message":"628","line":15,"column":1,"nodeType":"629","endLine":34,"endColumn":2},{"ruleId":"607","severity":1,"message":"611","line":82,"column":19,"nodeType":"609","messageId":"610","endLine":82,"endColumn":21},{"ruleId":"603","severity":1,"message":"648","line":359,"column":24,"nodeType":"605","messageId":"606","endLine":359,"endColumn":57},{"ruleId":"607","severity":1,"message":"611","line":361,"column":20,"nodeType":"609","messageId":"610","endLine":361,"endColumn":22},{"ruleId":"607","severity":1,"message":"611","line":361,"column":49,"nodeType":"609","messageId":"610","endLine":361,"endColumn":51},{"ruleId":"607","severity":1,"message":"611","line":361,"column":86,"nodeType":"609","messageId":"610","endLine":361,"endColumn":88},{"ruleId":"607","severity":1,"message":"608","line":368,"column":29,"nodeType":"609","messageId":"610","endLine":368,"endColumn":31},{"ruleId":"603","severity":1,"message":"653","line":369,"column":7,"nodeType":"605","messageId":"606","endLine":369,"endColumn":19},{"ruleId":"603","severity":1,"message":"654","line":370,"column":7,"nodeType":"605","messageId":"606","endLine":370,"endColumn":14},{"ruleId":"607","severity":1,"message":"608","line":388,"column":38,"nodeType":"609","messageId":"610","endLine":388,"endColumn":40},{"ruleId":"607","severity":1,"message":"608","line":403,"column":23,"nodeType":"609","messageId":"610","endLine":403,"endColumn":25},{"ruleId":"612","severity":1,"message":"656","line":47,"column":15,"nodeType":"605","messageId":"614","endLine":47,"endColumn":28},{"ruleId":"657","severity":1,"message":"658","line":131,"column":23,"nodeType":"659","endLine":131,"endColumn":80},{"ruleId":"603","severity":1,"message":"633","line":4,"column":10,"nodeType":"605","messageId":"606","endLine":4,"endColumn":14},{"ruleId":"603","severity":1,"message":"639","line":19,"column":11,"nodeType":"605","messageId":"606","endLine":19,"endColumn":20},{"ruleId":"603","severity":1,"message":"660","line":17,"column":7,"nodeType":"605","messageId":"606","endLine":17,"endColumn":17},{"ruleId":"603","severity":1,"message":"619","line":44,"column":9,"nodeType":"605","messageId":"606","endLine":44,"endColumn":14},{"ruleId":"657","severity":1,"message":"658","line":80,"column":23,"nodeType":"659","endLine":80,"endColumn":80},{"ruleId":"603","severity":1,"message":"661","line":220,"column":17,"nodeType":"605","messageId":"606","endLine":220,"endColumn":29},{"ruleId":"603","severity":1,"message":"662","line":220,"column":39,"nodeType":"605","messageId":"606","endLine":220,"endColumn":54},{"ruleId":"603","severity":1,"message":"663","line":221,"column":22,"nodeType":"605","messageId":"606","endLine":221,"endColumn":40},{"ruleId":"603","severity":1,"message":"664","line":221,"column":42,"nodeType":"605","messageId":"606","endLine":221,"endColumn":56},{"ruleId":"607","severity":1,"message":"608","line":229,"column":37,"nodeType":"609","messageId":"610","endLine":229,"endColumn":39},{"ruleId":"612","severity":1,"message":"656","line":230,"column":11,"nodeType":"605","messageId":"614","endLine":230,"endColumn":24},{"ruleId":"603","severity":1,"message":"665","line":230,"column":11,"nodeType":"605","messageId":"606","endLine":230,"endColumn":24},{"ruleId":"603","severity":1,"message":"666","line":232,"column":11,"nodeType":"605","messageId":"606","endLine":232,"endColumn":23},{"ruleId":"612","severity":1,"message":"667","line":9,"column":11,"nodeType":"605","messageId":"614","endLine":9,"endColumn":15},{"ruleId":"603","severity":1,"message":"668","line":8,"column":55,"nodeType":"605","messageId":"606","endLine":8,"endColumn":63},{"ruleId":"612","severity":1,"message":"669","line":12,"column":11,"nodeType":"605","messageId":"614","endLine":12,"endColumn":23},{"ruleId":"607","severity":1,"message":"611","line":23,"column":13,"nodeType":"609","messageId":"610","endLine":23,"endColumn":15},{"ruleId":"603","severity":1,"message":"670","line":8,"column":20,"nodeType":"605","messageId":"606","endLine":8,"endColumn":24},{"ruleId":"603","severity":1,"message":"671","line":8,"column":43,"nodeType":"605","messageId":"606","endLine":8,"endColumn":47},{"ruleId":"603","severity":1,"message":"668","line":6,"column":20,"nodeType":"605","messageId":"606","endLine":6,"endColumn":28},{"ruleId":"603","severity":1,"message":"671","line":6,"column":30,"nodeType":"605","messageId":"606","endLine":6,"endColumn":34},{"ruleId":"603","severity":1,"message":"672","line":6,"column":36,"nodeType":"605","messageId":"606","endLine":6,"endColumn":40},{"ruleId":"657","severity":1,"message":"658","line":14,"column":11,"nodeType":"659","endLine":14,"endColumn":118},{"ruleId":"603","severity":1,"message":"650","line":1,"column":28,"nodeType":"605","messageId":"606","endLine":1,"endColumn":37},{"ruleId":"603","severity":1,"message":"673","line":2,"column":10,"nodeType":"605","messageId":"606","endLine":2,"endColumn":17},{"ruleId":"603","severity":1,"message":"674","line":1,"column":17,"nodeType":"605","messageId":"606","endLine":1,"endColumn":26},{"ruleId":"603","severity":1,"message":"650","line":1,"column":28,"nodeType":"605","messageId":"606","endLine":1,"endColumn":37},{"ruleId":"603","severity":1,"message":"633","line":2,"column":10,"nodeType":"605","messageId":"606","endLine":2,"endColumn":14},{"ruleId":"675","severity":1,"message":"676","line":54,"column":32,"nodeType":"677","messageId":"678","endLine":54,"endColumn":33,"suggestions":"679"},{"ruleId":"675","severity":1,"message":"680","line":54,"column":34,"nodeType":"677","messageId":"678","endLine":54,"endColumn":35,"suggestions":"681"},{"ruleId":"675","severity":1,"message":"682","line":54,"column":42,"nodeType":"677","messageId":"678","endLine":54,"endColumn":43,"suggestions":"683"},{"ruleId":"684","severity":1,"message":"685","line":65,"column":20,"nodeType":"686","messageId":"687","endLine":65,"endColumn":22},{"ruleId":"684","severity":1,"message":"685","line":65,"column":52,"nodeType":"686","messageId":"687","endLine":65,"endColumn":54},{"ruleId":"684","severity":1,"message":"688","line":65,"column":52,"nodeType":"686","messageId":"687","endLine":65,"endColumn":54},{"ruleId":"684","severity":1,"message":"688","line":66,"column":20,"nodeType":"686","messageId":"687","endLine":66,"endColumn":22},{"ruleId":"684","severity":1,"message":"688","line":66,"column":45,"nodeType":"686","messageId":"687","endLine":66,"endColumn":47},{"ruleId":"684","severity":1,"message":"688","line":67,"column":20,"nodeType":"686","messageId":"687","endLine":67,"endColumn":22},{"ruleId":"684","severity":1,"message":"688","line":67,"column":52,"nodeType":"686","messageId":"687","endLine":67,"endColumn":54},{"ruleId":"684","severity":1,"message":"688","line":68,"column":20,"nodeType":"686","messageId":"687","endLine":68,"endColumn":22},{"ruleId":"684","severity":1,"message":"688","line":68,"column":43,"nodeType":"686","messageId":"687","endLine":68,"endColumn":45},{"ruleId":"684","severity":1,"message":"688","line":69,"column":18,"nodeType":"686","messageId":"687","endLine":69,"endColumn":20},{"ruleId":"684","severity":1,"message":"688","line":69,"column":46,"nodeType":"686","messageId":"687","endLine":69,"endColumn":48},{"ruleId":"684","severity":1,"message":"688","line":70,"column":18,"nodeType":"686","messageId":"687","endLine":70,"endColumn":20},{"ruleId":"684","severity":1,"message":"688","line":70,"column":40,"nodeType":"686","messageId":"687","endLine":70,"endColumn":42},{"ruleId":"684","severity":1,"message":"688","line":71,"column":17,"nodeType":"686","messageId":"687","endLine":71,"endColumn":19},{"ruleId":"684","severity":1,"message":"688","line":71,"column":43,"nodeType":"686","messageId":"687","endLine":71,"endColumn":45},{"ruleId":"684","severity":1,"message":"688","line":72,"column":17,"nodeType":"686","messageId":"687","endLine":72,"endColumn":19},{"ruleId":"684","severity":1,"message":"688","line":72,"column":41,"nodeType":"686","messageId":"687","endLine":72,"endColumn":43},{"ruleId":"684","severity":1,"message":"688","line":73,"column":18,"nodeType":"686","messageId":"687","endLine":73,"endColumn":20},{"ruleId":"684","severity":1,"message":"688","line":73,"column":51,"nodeType":"686","messageId":"687","endLine":73,"endColumn":53},{"ruleId":"684","severity":1,"message":"688","line":74,"column":19,"nodeType":"686","messageId":"687","endLine":74,"endColumn":21},{"ruleId":"603","severity":1,"message":"689","line":165,"column":7,"nodeType":"605","messageId":"606","endLine":165,"endColumn":15},{"ruleId":"603","severity":1,"message":"689","line":170,"column":7,"nodeType":"605","messageId":"606","endLine":170,"endColumn":15},{"ruleId":"607","severity":1,"message":"611","line":178,"column":22,"nodeType":"609","messageId":"610","endLine":178,"endColumn":24},{"ruleId":"607","severity":1,"message":"611","line":183,"column":29,"nodeType":"609","messageId":"610","endLine":183,"endColumn":31},{"ruleId":"607","severity":1,"message":"611","line":186,"column":29,"nodeType":"609","messageId":"610","endLine":186,"endColumn":31},{"ruleId":"607","severity":1,"message":"608","line":204,"column":30,"nodeType":"609","messageId":"610","endLine":204,"endColumn":32},{"ruleId":"612","severity":1,"message":"690","line":225,"column":9,"nodeType":"605","messageId":"614","endLine":225,"endColumn":17},{"ruleId":"607","severity":1,"message":"608","line":235,"column":28,"nodeType":"609","messageId":"610","endLine":235,"endColumn":30},{"ruleId":"603","severity":1,"message":"691","line":259,"column":9,"nodeType":"605","messageId":"606","endLine":259,"endColumn":17},{"ruleId":"607","severity":1,"message":"608","line":268,"column":29,"nodeType":"609","messageId":"610","endLine":268,"endColumn":31},{"ruleId":"607","severity":1,"message":"611","line":268,"column":67,"nodeType":"609","messageId":"610","endLine":268,"endColumn":69},{"ruleId":"607","severity":1,"message":"611","line":296,"column":40,"nodeType":"609","messageId":"610","endLine":296,"endColumn":42},{"ruleId":"607","severity":1,"message":"611","line":302,"column":37,"nodeType":"609","messageId":"610","endLine":302,"endColumn":39},{"ruleId":"607","severity":1,"message":"611","line":304,"column":20,"nodeType":"609","messageId":"610","endLine":304,"endColumn":22},{"ruleId":"603","severity":1,"message":"692","line":2,"column":17,"nodeType":"605","messageId":"606","endLine":2,"endColumn":25},{"ruleId":"603","severity":1,"message":"693","line":2,"column":27,"nodeType":"605","messageId":"606","endLine":2,"endColumn":34},{"ruleId":"603","severity":1,"message":"646","line":2,"column":36,"nodeType":"605","messageId":"606","endLine":2,"endColumn":39},{"ruleId":"603","severity":1,"message":"694","line":3,"column":10,"nodeType":"605","messageId":"606","endLine":3,"endColumn":15},{"ruleId":"603","severity":1,"message":"650","line":4,"column":29,"nodeType":"605","messageId":"606","endLine":4,"endColumn":38},{"ruleId":"603","severity":1,"message":"695","line":9,"column":10,"nodeType":"605","messageId":"606","endLine":9,"endColumn":16},{"ruleId":"634","severity":1,"message":"635","line":21,"column":3,"nodeType":"636","endLine":21,"endColumn":7},{"ruleId":"603","severity":1,"message":"696","line":45,"column":27,"nodeType":"605","messageId":"606","endLine":45,"endColumn":37},{"ruleId":"603","severity":1,"message":"650","line":1,"column":28,"nodeType":"605","messageId":"606","endLine":1,"endColumn":37},{"ruleId":"603","severity":1,"message":"697","line":11,"column":9,"nodeType":"605","messageId":"606","endLine":11,"endColumn":18},{"ruleId":"607","severity":1,"message":"608","line":42,"column":39,"nodeType":"609","messageId":"610","endLine":42,"endColumn":41},{"ruleId":"607","severity":1,"message":"608","line":42,"column":128,"nodeType":"609","messageId":"610","endLine":42,"endColumn":130},{"ruleId":"657","severity":1,"message":"658","line":51,"column":11,"nodeType":"659","endLine":51,"endColumn":96},{"ruleId":"607","severity":1,"message":"611","line":61,"column":65,"nodeType":"609","messageId":"610","endLine":61,"endColumn":67},{"ruleId":"607","severity":1,"message":"611","line":62,"column":66,"nodeType":"609","messageId":"610","endLine":62,"endColumn":68},{"ruleId":"603","severity":1,"message":"650","line":1,"column":29,"nodeType":"605","messageId":"606","endLine":1,"endColumn":38},{"ruleId":"603","severity":1,"message":"633","line":4,"column":10,"nodeType":"605","messageId":"606","endLine":4,"endColumn":14},{"ruleId":"603","severity":1,"message":"694","line":5,"column":10,"nodeType":"605","messageId":"606","endLine":5,"endColumn":15},{"ruleId":"603","severity":1,"message":"698","line":8,"column":10,"nodeType":"605","messageId":"606","endLine":8,"endColumn":24},{"ruleId":"699","severity":1,"message":"700","line":25,"column":55,"nodeType":"701","messageId":"702","endLine":25,"endColumn":57},{"ruleId":"607","severity":1,"message":"611","line":26,"column":29,"nodeType":"609","messageId":"610","endLine":26,"endColumn":31},{"ruleId":"607","severity":1,"message":"608","line":157,"column":51,"nodeType":"609","messageId":"610","endLine":157,"endColumn":53},{"ruleId":"603","severity":1,"message":"703","line":181,"column":26,"nodeType":"605","messageId":"606","endLine":181,"endColumn":34},{"ruleId":"607","severity":1,"message":"611","line":184,"column":20,"nodeType":"609","messageId":"610","endLine":184,"endColumn":22},{"ruleId":"607","severity":1,"message":"608","line":195,"column":29,"nodeType":"609","messageId":"610","endLine":195,"endColumn":31},{"ruleId":"603","severity":1,"message":"624","line":3,"column":8,"nodeType":"605","messageId":"606","endLine":3,"endColumn":14},{"ruleId":"603","severity":1,"message":"650","line":1,"column":28,"nodeType":"605","messageId":"606","endLine":1,"endColumn":37},{"ruleId":"657","severity":1,"message":"658","line":43,"column":11,"nodeType":"659","endLine":43,"endColumn":96},{"ruleId":"607","severity":1,"message":"611","line":52,"column":65,"nodeType":"609","messageId":"610","endLine":52,"endColumn":67},{"ruleId":"607","severity":1,"message":"611","line":53,"column":66,"nodeType":"609","messageId":"610","endLine":53,"endColumn":68},{"ruleId":"603","severity":1,"message":"704","line":7,"column":5,"nodeType":"605","messageId":"606","endLine":7,"endColumn":18},{"ruleId":"607","severity":1,"message":"608","line":45,"column":22,"nodeType":"609","messageId":"610","endLine":45,"endColumn":24},{"ruleId":"607","severity":1,"message":"608","line":45,"column":59,"nodeType":"609","messageId":"610","endLine":45,"endColumn":61},{"ruleId":"612","severity":1,"message":"613","line":46,"column":11,"nodeType":"605","messageId":"614","endLine":46,"endColumn":22},{"ruleId":"607","severity":1,"message":"608","line":74,"column":22,"nodeType":"609","messageId":"610","endLine":74,"endColumn":24},{"ruleId":"607","severity":1,"message":"608","line":74,"column":59,"nodeType":"609","messageId":"610","endLine":74,"endColumn":61},{"ruleId":"612","severity":1,"message":"613","line":75,"column":11,"nodeType":"605","messageId":"614","endLine":75,"endColumn":22},{"ruleId":"607","severity":1,"message":"608","line":102,"column":22,"nodeType":"609","messageId":"610","endLine":102,"endColumn":24},{"ruleId":"607","severity":1,"message":"608","line":102,"column":59,"nodeType":"609","messageId":"610","endLine":102,"endColumn":61},{"ruleId":"612","severity":1,"message":"613","line":103,"column":11,"nodeType":"605","messageId":"614","endLine":103,"endColumn":22},{"ruleId":"607","severity":1,"message":"608","line":128,"column":22,"nodeType":"609","messageId":"610","endLine":128,"endColumn":24},{"ruleId":"607","severity":1,"message":"608","line":128,"column":59,"nodeType":"609","messageId":"610","endLine":128,"endColumn":61},{"ruleId":"612","severity":1,"message":"613","line":129,"column":11,"nodeType":"605","messageId":"614","endLine":129,"endColumn":22},{"ruleId":"603","severity":1,"message":"703","line":207,"column":35,"nodeType":"605","messageId":"606","endLine":207,"endColumn":43},{"ruleId":"607","severity":1,"message":"611","line":210,"column":29,"nodeType":"609","messageId":"610","endLine":210,"endColumn":31},{"ruleId":"603","severity":1,"message":"705","line":9,"column":7,"nodeType":"605","messageId":"606","endLine":9,"endColumn":15},{"ruleId":"607","severity":1,"message":"611","line":75,"column":16,"nodeType":"609","messageId":"610","endLine":75,"endColumn":18},{"ruleId":"603","severity":1,"message":"706","line":112,"column":27,"nodeType":"605","messageId":"606","endLine":112,"endColumn":34},{"ruleId":"603","severity":1,"message":"650","line":1,"column":29,"nodeType":"605","messageId":"606","endLine":1,"endColumn":38},{"ruleId":"603","severity":1,"message":"707","line":3,"column":10,"nodeType":"605","messageId":"606","endLine":3,"endColumn":15},{"ruleId":"603","severity":1,"message":"708","line":3,"column":28,"nodeType":"605","messageId":"606","endLine":3,"endColumn":38},{"ruleId":"603","severity":1,"message":"633","line":4,"column":10,"nodeType":"605","messageId":"606","endLine":4,"endColumn":14},{"ruleId":"603","severity":1,"message":"694","line":5,"column":10,"nodeType":"605","messageId":"606","endLine":5,"endColumn":15},{"ruleId":"603","severity":1,"message":"698","line":7,"column":10,"nodeType":"605","messageId":"606","endLine":7,"endColumn":24},{"ruleId":"603","severity":1,"message":"709","line":8,"column":10,"nodeType":"605","messageId":"606","endLine":8,"endColumn":15},{"ruleId":"603","severity":1,"message":"692","line":8,"column":26,"nodeType":"605","messageId":"606","endLine":8,"endColumn":34},{"ruleId":"603","severity":1,"message":"710","line":8,"column":36,"nodeType":"605","messageId":"606","endLine":8,"endColumn":46},{"ruleId":"657","severity":1,"message":"658","line":47,"column":13,"nodeType":"659","endLine":47,"endColumn":86},{"ruleId":"603","severity":1,"message":"650","line":1,"column":29,"nodeType":"605","messageId":"606","endLine":1,"endColumn":38},{"ruleId":"603","severity":1,"message":"633","line":4,"column":10,"nodeType":"605","messageId":"606","endLine":4,"endColumn":14},{"ruleId":"603","severity":1,"message":"694","line":5,"column":10,"nodeType":"605","messageId":"606","endLine":5,"endColumn":15},{"ruleId":"603","severity":1,"message":"698","line":8,"column":10,"nodeType":"605","messageId":"606","endLine":8,"endColumn":24},{"ruleId":"603","severity":1,"message":"709","line":9,"column":10,"nodeType":"605","messageId":"606","endLine":9,"endColumn":15},{"ruleId":"699","severity":1,"message":"700","line":26,"column":55,"nodeType":"701","messageId":"702","endLine":26,"endColumn":57},{"ruleId":"607","severity":1,"message":"611","line":27,"column":36,"nodeType":"609","messageId":"610","endLine":27,"endColumn":38},{"ruleId":"634","severity":1,"message":"635","line":23,"column":5,"nodeType":"636","endLine":23,"endColumn":9},{"ruleId":"603","severity":1,"message":"711","line":25,"column":9,"nodeType":"605","messageId":"606","endLine":25,"endColumn":16},{"ruleId":"603","severity":1,"message":"712","line":26,"column":9,"nodeType":"605","messageId":"606","endLine":26,"endColumn":10},{"ruleId":"713","severity":1,"message":"714","line":49,"column":41,"nodeType":"609","messageId":"715","endLine":49,"endColumn":42},{"ruleId":"607","severity":1,"message":"611","line":53,"column":29,"nodeType":"609","messageId":"610","endLine":53,"endColumn":31},{"ruleId":"607","severity":1,"message":"611","line":60,"column":29,"nodeType":"609","messageId":"610","endLine":60,"endColumn":31},{"ruleId":"603","severity":1,"message":"716","line":80,"column":41,"nodeType":"605","messageId":"606","endLine":80,"endColumn":49},{"ruleId":"603","severity":1,"message":"717","line":81,"column":38,"nodeType":"605","messageId":"606","endLine":81,"endColumn":59},{"ruleId":"657","severity":1,"message":"658","line":112,"column":25,"nodeType":"659","endLine":112,"endColumn":181},{"ruleId":"607","severity":1,"message":"608","line":242,"column":80,"nodeType":"609","messageId":"610","endLine":242,"endColumn":82},{"ruleId":"634","severity":1,"message":"635","line":22,"column":5,"nodeType":"636","endLine":22,"endColumn":9},{"ruleId":"713","severity":1,"message":"714","line":37,"column":41,"nodeType":"609","messageId":"715","endLine":37,"endColumn":42},{"ruleId":"607","severity":1,"message":"611","line":41,"column":29,"nodeType":"609","messageId":"610","endLine":41,"endColumn":31},{"ruleId":"607","severity":1,"message":"611","line":48,"column":29,"nodeType":"609","messageId":"610","endLine":48,"endColumn":31},{"ruleId":"603","severity":1,"message":"717","line":57,"column":38,"nodeType":"605","messageId":"606","endLine":57,"endColumn":59},{"ruleId":"607","severity":1,"message":"608","line":160,"column":80,"nodeType":"609","messageId":"610","endLine":160,"endColumn":82},{"ruleId":"634","severity":1,"message":"635","line":26,"column":5,"nodeType":"636","endLine":26,"endColumn":9},{"ruleId":"718","severity":1,"message":"719","line":129,"column":100,"nodeType":"720","endLine":129,"endColumn":131},{"ruleId":"607","severity":1,"message":"608","line":255,"column":25,"nodeType":"609","messageId":"610","endLine":255,"endColumn":27},{"ruleId":"603","severity":1,"message":"615","line":67,"column":27,"nodeType":"605","messageId":"606","endLine":67,"endColumn":40},{"ruleId":"603","severity":1,"message":"643","line":67,"column":42,"nodeType":"605","messageId":"606","endLine":67,"endColumn":47},{"ruleId":"603","severity":1,"message":"644","line":67,"column":49,"nodeType":"605","messageId":"606","endLine":67,"endColumn":60},{"ruleId":"603","severity":1,"message":"645","line":70,"column":9,"nodeType":"605","messageId":"606","endLine":70,"endColumn":20},"no-native-reassign",["721"],"no-negated-in-lhs",["722"],"no-unused-vars","'commonAction' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","no-redeclare","'filter_data' is already defined.","redeclared","'authenticated' is assigned a value but never used.","'authenticate_provider' is assigned a value but never used.","'account_profile' is assigned a value but never used.","'provider_profile' is assigned a value but never used.","'_this' is assigned a value but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","'axios' is defined but never used.","'cookie' is defined but never used.","'API_URL' is defined but never used.","'API_PREFIX' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'mapStateToProps' is defined but never used.","'Router' is defined but never used.","'isError' is assigned a value but never used.","'Link' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","ThisExpression",["721"],["722"],"'isLoading' is assigned a value but never used.","no-dupe-keys","Duplicate key 'animation-delay'.","ObjectExpression","'alert' is assigned a value but never used.","'login_phone' is assigned a value but never used.","'currentPage' is assigned a value but never used.","'lib' is defined but never used.","Duplicate key 'services'.","'currentTicketPriorityFilterStatus' is assigned a value but never used.","'search_text' is assigned a value but never used.","'PropTypes' is defined but never used.","'_nextProps' is assigned a value but never used.","'ticket_priority_status' is assigned a value but never used.","'topclassName' is assigned a value but never used.","'btnfull' is assigned a value but never used.","'update' is defined but never used.","'service_class' is already defined.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'dateFormat' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'custom_services' is assigned a value but never used.","'photoLightboxIndex' is assigned a value but never used.","'isLightboxOpen' is assigned a value but never used.","'service_class' is assigned a value but never used.","'addMoreImage' is assigned a value but never used.","'text' is already defined.","'disabled' is assigned a value but never used.","'reqClassName' is already defined.","'icon' is assigned a value but never used.","'type' is assigned a value but never used.","'meta' is assigned a value but never used.","'connect' is defined but never used.","'Component' is defined but never used.","no-useless-escape","Unnecessary escape character: \\+.","Literal","unnecessaryEscape",["723","724"],"Unnecessary escape character: \\-.",["725","726"],"Unnecessary escape character: \\:.",["727","728"],"no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","Unexpected mix of '||' and '&&'.","'pathname' is assigned a value but never used.","'msgTitle' is already defined.","'msgClose' is assigned a value but never used.","'textarea' is defined but never used.","'Loading' is defined but never used.","'modal' is defined but never used.","'Button' is defined but never used.","'submitting' is assigned a value but never used.","'pathFound' is assigned a value but never used.","'validationNull' is defined but never used.","array-callback-return","Array.prototype.find() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'settings' is assigned a value but never used.","'accountAction' is assigned a value but never used.","'required' is assigned a value but never used.","'setting' is assigned a value but never used.","'Field' is defined but never used.","'FieldArray' is defined but never used.","'input' is defined but never used.","'InputImage' is defined but never used.","'keyName' is defined but never used.","'i' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'projects' is assigned a value but never used.","'isPasswordConfirmText' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation",{"messageId":"729","fix":"730","desc":"731"},{"messageId":"732","fix":"733","desc":"734"},{"messageId":"729","fix":"735","desc":"731"},{"messageId":"732","fix":"736","desc":"734"},{"messageId":"729","fix":"737","desc":"731"},{"messageId":"732","fix":"738","desc":"734"},"removeEscape",{"range":"739","text":"740"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"741","text":"742"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"743","text":"740"},{"range":"744","text":"742"},{"range":"745","text":"740"},{"range":"746","text":"742"},[1607,1608],"",[1607,1607],"\\",[1609,1610],[1609,1609],[1617,1618],[1617,1617]]