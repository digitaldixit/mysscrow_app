[{"H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\index.js":"1","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\store.js":"2","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\App.js":"3","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\account\\account_action.js":"4","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\system\\reducer.js":"5","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\system\\route.js":"6","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\common\\header.js":"7","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\common\\footer.js":"8","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\common\\common_action.js":"9","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\system\\config.js":"10","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\library\\elements\\index.js":"11","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\library\\elements\\modal\\index.js":"12","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\common\\common_reducer.js":"13","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\account\\account_reducer.js":"14","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\account\\logout.js":"15","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\account\\signin.js":"16","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\account\\signup.js":"17","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\account\\otp_signin.js":"18","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\common\\home.js":"19","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\account\\dashboard.js":"20","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\account\\otp.js":"21","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\library\\elements\\loading_text.js":"22","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\library\\elements\\input.js":"23","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\library\\elements\\loading_large.js":"24","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\library\\elements\\alert_top.js":"25","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\library\\elements\\no_result.js":"26","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\library\\elements\\textarea.js":"27","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\library\\elements\\loading.js":"28","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\library\\elements\\image.js":"29","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\library\\elements\\breadcrumbs.js":"30","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\library\\elements\\library.js":"31","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\library\\elements\\modal\\container\\redux_modal.js":"32","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\library\\elements\\modal\\container\\emitter.js":"33","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\library\\elements\\modal\\container\\modal_reducer.js":"34","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\account\\model_forgotten.js":"35","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\library\\elements\\modal\\container\\modal_action.js":"36","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\library\\elements\\modal\\container\\modal.js":"37","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\account\\modal_edit_profile.js":"38","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\account\\customer.jsx":"39","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\system\\route_customer.js":"40","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\account\\header.js":"41","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\library\\elements\\pills_box.js":"42","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\account\\job_add.js":"43","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\account\\job.js":"44","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\account\\job_info.js":"45","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\account\\model_edit_contractor_quote.js":"46","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\system\\route_contractor.js":"47","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\contractor\\contractor_reducer.js":"48","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\contractor\\signup.js":"49","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\contractor\\otp.js":"50","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\contractor\\signin.js":"51","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\contractor\\dashboard.js":"52","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\contractor\\contractor.jsx":"53","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\contractor\\contractor_action.js":"54","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\contractor\\header.js":"55","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\contractor\\modal_edit_profile.js":"56","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\contractor\\model_forgotten.js":"57","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\contractor\\otp_signin.js":"58","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\contractor\\logout.js":"59","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\contractor\\jobs.js":"60","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\contractor\\job_info.js":"61","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\contractor\\model_edit_contractor_quote.js":"62"},{"size":398,"mtime":1645110968836,"results":"63","hashOfConfig":"64"},{"size":245,"mtime":1645110964672,"results":"65","hashOfConfig":"64"},{"size":466,"mtime":1645247536345,"results":"66","hashOfConfig":"64"},{"size":11012,"mtime":1648059612000,"results":"67","hashOfConfig":"64"},{"size":651,"mtime":1647742781780,"results":"68","hashOfConfig":"64"},{"size":2459,"mtime":1647920262862,"results":"69","hashOfConfig":"64"},{"size":5744,"mtime":1648062880000,"results":"70","hashOfConfig":"64"},{"size":4414,"mtime":1646938384000,"results":"71","hashOfConfig":"64"},{"size":1195,"mtime":1555041208000,"results":"72","hashOfConfig":"64"},{"size":105,"mtime":1645103111379,"results":"73","hashOfConfig":"64"},{"size":549,"mtime":1646942376000,"results":"74","hashOfConfig":"64"},{"size":234,"mtime":1631042430000,"results":"75","hashOfConfig":"64"},{"size":698,"mtime":1644737582000,"results":"76","hashOfConfig":"64"},{"size":1437,"mtime":1647788168000,"results":"77","hashOfConfig":"64"},{"size":1147,"mtime":1646940310000,"results":"78","hashOfConfig":"64"},{"size":5502,"mtime":1647880528000,"results":"79","hashOfConfig":"64"},{"size":8150,"mtime":1648371703820,"results":"80","hashOfConfig":"64"},{"size":5111,"mtime":1647793032000,"results":"81","hashOfConfig":"64"},{"size":5522,"mtime":1647821738000,"results":"82","hashOfConfig":"64"},{"size":7810,"mtime":1648376810143,"results":"83","hashOfConfig":"64"},{"size":5683,"mtime":1647791152000,"results":"84","hashOfConfig":"64"},{"size":427,"mtime":1555041212000,"results":"85","hashOfConfig":"64"},{"size":1685,"mtime":1647707728000,"results":"86","hashOfConfig":"64"},{"size":243,"mtime":1555041212000,"results":"87","hashOfConfig":"64"},{"size":865,"mtime":1647529434000,"results":"88","hashOfConfig":"64"},{"size":225,"mtime":1555041210000,"results":"89","hashOfConfig":"64"},{"size":613,"mtime":1648062868000,"results":"90","hashOfConfig":"64"},{"size":727,"mtime":1555041210000,"results":"91","hashOfConfig":"64"},{"size":2685,"mtime":1555041212000,"results":"92","hashOfConfig":"64"},{"size":769,"mtime":1644736406000,"results":"93","hashOfConfig":"64"},{"size":8601,"mtime":1648062870000,"results":"94","hashOfConfig":"64"},{"size":1009,"mtime":1648062884000,"results":"95","hashOfConfig":"64"},{"size":595,"mtime":1648062864000,"results":"96","hashOfConfig":"64"},{"size":641,"mtime":1631042430000,"results":"97","hashOfConfig":"64"},{"size":3696,"mtime":1647740852000,"results":"98","hashOfConfig":"64"},{"size":370,"mtime":1631042430000,"results":"99","hashOfConfig":"64"},{"size":1832,"mtime":1648062860000,"results":"100","hashOfConfig":"64"},{"size":10391,"mtime":1647741154000,"results":"101","hashOfConfig":"64"},{"size":2037,"mtime":1647879816000,"results":"102","hashOfConfig":"64"},{"size":1373,"mtime":1647834822360,"results":"103","hashOfConfig":"64"},{"size":6075,"mtime":1647834034000,"results":"104","hashOfConfig":"64"},{"size":1245,"mtime":1648374891034,"results":"105","hashOfConfig":"64"},{"size":11562,"mtime":1647741370000,"results":"106","hashOfConfig":"64"},{"size":9148,"mtime":1648381316133,"results":"107","hashOfConfig":"64"},{"size":13759,"mtime":1648373247675,"results":"108","hashOfConfig":"64"},{"size":7033,"mtime":1648373396695,"results":"109","hashOfConfig":"64"},{"size":1428,"mtime":1647834776804,"results":"110","hashOfConfig":"64"},{"size":1814,"mtime":1648363326405,"results":"111","hashOfConfig":"64"},{"size":9314,"mtime":1647880448000,"results":"112","hashOfConfig":"64"},{"size":5705,"mtime":1647792964000,"results":"113","hashOfConfig":"64"},{"size":5645,"mtime":1647880522000,"results":"114","hashOfConfig":"64"},{"size":9769,"mtime":1648376664592,"results":"115","hashOfConfig":"64"},{"size":2065,"mtime":1647834148000,"results":"116","hashOfConfig":"64"},{"size":11397,"mtime":1648364811184,"results":"117","hashOfConfig":"64"},{"size":6151,"mtime":1647880860000,"results":"118","hashOfConfig":"64"},{"size":11042,"mtime":1647876966000,"results":"119","hashOfConfig":"64"},{"size":3697,"mtime":1647879972000,"results":"120","hashOfConfig":"64"},{"size":5195,"mtime":1647793040000,"results":"121","hashOfConfig":"64"},{"size":1089,"mtime":1647833554000,"results":"122","hashOfConfig":"64"},{"size":8768,"mtime":1648381274323,"results":"123","hashOfConfig":"64"},{"size":17951,"mtime":1648381297237,"results":"124","hashOfConfig":"64"},{"size":4038,"mtime":1648377016013,"results":"125","hashOfConfig":"64"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},"1k5xqi",{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"128"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"128"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"128"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"128"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"128"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"128"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"128"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"128"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"128"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"128"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"128"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"178","messages":"179","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"128"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"128"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"128"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"128"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"128"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"128"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":40,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"128"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"128"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"128"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"128"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"232","messages":"233","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"128"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"237","messages":"238","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"239","messages":"240","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"128"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"128"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"128"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"128"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"128"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"128"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"128"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"128"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"128"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"278","messages":"279","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"280","messages":"281","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\index.js",[],["282","283"],"H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\store.js",[],"H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\App.js",[],"H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\account\\account_action.js",["284","285","286","287","288","289","290","291","292","293","294","295","296","297","298","299"],"import axios from 'axios';\nimport cookie from 'react-cookie';\nimport { API_URL } from '../../system/config';\nimport { lib } from '../library/elements';\nexport const AUTHENTICATE_CUSTOMER = 'AUTHENTICATE_CUSTOMER';\nexport const UNAUTHENTICATE_CUSTOMER = 'UNAUTHENTICATE_CUSTOMER';\nexport const VALIDATION_ERROR = 'VALIDATION_ERROR';\nexport const FETCH_ACCOUNT_PROFILE = 'FETCH_ACCOUNT_PROFILE';\nexport const CUSTOMER_LOGIN_PHONE = 'CUSTOMER_LOGIN_PHONE';\n// PROVIDER\n\nexport const FETCH_JOB_TOTAL = 'FETCH_JOB_TOTAL';\nexport const FETCH_JOB_LIST = 'FETCH_JOB_LIST';\nexport const FETCH_STATUSWISE_JOBS = 'FETCH_STATUSWISE_JOBS';\nexport const NULL_JOB_FORM = 'NULL_JOB_FORM';\nexport const FETCH_JOB_INFO = 'FETCH_JOB_INFO';\n\n// customer action code \nexport function login(formProps, callback) {\n  return function(dispatch) {\n    dispatch(validationNull());\n    axios({\n      method: 'post',\n      url: `${API_URL}/customer/account/login`,\n      data: {\n        props: formProps,\n      },\n    })\n    .then(response => {\n      cookie.remove('customer', { path: '/' });\n      if(response.data.customer !== undefined && response.data.error === undefined){\n        cookie.save('customer', response.data.customer, { path: '/' });\n        dispatch( { type: AUTHENTICATE_CUSTOMER, payload: response.data.customer } );\n         callback(null, true);\n      }\n      else {\n        if(response.data.error == \"OTP\" && response.data.phone) {\n          dispatch( { type: CUSTOMER_LOGIN_PHONE, payload: response.data.phone } );\n          callback(null, 'OTP');\n        } else {\n          dispatch(validation(response.data.error));\n          callback(null, false);\n        }\n      }\n    })\n    .catch(response => {\n      console.log(\"catch>>>>>\", response);\n    });\n  }\n}\nexport function register(formData, callback) {\n  return function(dispatch) {\n     dispatch(validationNull());\n    axios({\n      method: 'post',\n      url: `${API_URL}/customer/account/register`,\n      data: {\n        props: formData\n      },\n    })\n    .then(response => {\n      if(!response.data.error && response.data.customer){\n        dispatch( { type: CUSTOMER_LOGIN_PHONE, payload: formData.phone } );\n        callback(null, true);\n      } else {\n        dispatch(validation(response.data.error));\n      }\n    })\n    .catch(response => {\n      console.log(\"catch>>>>>\", response);\n    });\n   }\n}\nexport function loginOTP(formData, callback) {\n    return function(dispatch) {\n      axios({\n        method: 'post',\n        url: `${API_URL}/customer_loginotp`,\n        data: {\n          props: formData\n        },\n      })\n      .then(response => {\n        cookie.remove('customer', { path: '/' });\n        if(response.data.customer !== undefined && response.data.error === undefined){\n          cookie.save('customer', response.data.customer, { path: '/' });\n          dispatch( { type: AUTHENTICATE_CUSTOMER, payload: cookie.load('customer') } );\n          callback(null, response);\n        } else {\n          callback(null, response.data);\n        }\n      })\n      .catch(error => {\n        console.log(error);\n      });\n   }\n}\nexport function resendOTP(phone, callback) {\n    return function(dispatch) {\n      axios({\n        method: 'post',\n        url: `${API_URL}/customer_resendotp`,\n        data: {\n          phone: phone\n        },\n      })\n      .then(response => {\n        if(response.data.error === undefined){\n          lib.createAlert({message:'Your OTP has been send successfully'});\n          callback(null, response);\n        } else {\n          callback(null, response.data);\n        }\n      })\n      .catch(error => {\n        console.log(error);\n      });\n   }\n}\nexport function otplogin(formProps, callback) {\n  return function(dispatch) {\n    dispatch(validationNull());\n    axios({\n      method: 'post',\n      url: `${API_URL}/customer/account/otp_login`,\n      data: {\n        props: formProps,\n      },\n    })\n    .then(response => {\n        if(!response.data.error) {\n          dispatch( { type: CUSTOMER_LOGIN_PHONE, payload: response.data.phone } );\n        //  browserHistory.push('/otp');\n        } else {\n          dispatch(validation(response.data.error));\n          callback(null, false);\n        }\n\n    })\n    .catch(response => {\n      console.log(\"catch>>>>>\", response);\n    });\n  }\n}\nexport function forgotPassword(email, callback) {\n  return function(dispatch) {\n    axios({\n       method: 'post',\n       url: `${API_URL}/customer/account/forgot-password`,\n       data: email,\n      })\n      .then(response => {\n        if(!response.data.error){\n          lib.createAlert({message : 'Your password reset link email has been sent to your email address, please check your email.'});\n          callback(null, response);\n        } else {\n          dispatch(validation(response.data.error));\n        }\n      })\n      .catch(response => {\n        dispatch(validation(response.data.error));\n      });\n  }\n}\nexport function getProfile(){\n  return function(dispatch) {\n    axios({\n      method: 'get',\n      url: `${API_URL}/customer/account/profile`,\n      headers: {\n       customer: cookie.load('customer'),\n      },\n    })\n    .then(response => {\n\n\n      if(response != undefined && response.data != undefined && response.data.customer_id != undefined && response.data.customer_id > 0){\n        dispatch( { type: FETCH_ACCOUNT_PROFILE, payload: response} );\n      } else {\n        dispatch(logout());\n      }\n    })\n    .catch(response => {\n      if(response != undefined && response.data != undefined && response.data == \"Unauthorized\"){\n        dispatch(logout());\n      }\n    });\n  }\n}\nexport function updateCustomerProfile(data, callback){\n  return function(dispatch) {\n    dispatch(validationNull());\n    axios.post(`${API_URL}/customer/account/update_profile`, data, {\n      headers: { customer: cookie.load('customer'), }\n    })\n    .then(response => {\n      //console.log(\"response>>>>>\", response);\n      if(!response.data.error && response.data){\n        lib.createAlert({message : 'Your Profile Has Been Update Successfully!'});\n        dispatch( getProfile());\n        callback(null, true);\n      } else {\n        dispatch(validation(response.data.error));\n      }\n    })\n    .catch(response => {\n      dispatch(validation('Bad customer Update'));\n    });\n  }\n}\nexport function updateJobStatusbyCustomer(data, callback){\n  var filter = {};\n  filter.job_id = data.job_id;\n  return function(dispatch) {\n    dispatch(validationNull());\n\n     axios({\n      method: 'put',\n      url: `${API_URL}/customer/account/update_customer_job_status`,\n      data: {\n        data: data,\n      },\n      headers: { customer: cookie.load('customer'), }\n    })\n    .then(response => {\n      if(!response.data.error && response.data){\n        lib.createAlert({class:\"danger\" ,message : 'Status Has Been Update Successfully!'});\n       \n        dispatch(getJobInfo(filter,callback));\n        callback(null, true);\n      } else {\n        dispatch(validation(response.data.error));\n      }\n    })\n    .catch(response => {\n      dispatch(validation('Bad customer Update'));\n    });\n  }\n}\nexport function logout() {\n  return function(dispatch) {\n    cookie.remove('customer', { path: '/' });\n    dispatch( { type: UNAUTHENTICATE_CUSTOMER } );\n  }\n}\nexport function addCustomerJob(formData, callback) {\n\n  return function(dispatch) {\n    axios.post(`${API_URL}/customer/job/add`, formData, {\n      \"Content-Type\": \"multipart/form-data\",\n      headers: { customer: cookie.load('customer'), folder: 'customer_job' }\n    })\n    .then(response => {\n\n      if(!response.data.error && response.data){\n        lib.createAlert({message : 'Customer Job has been added!'});\n        dispatch(getJobs(callback));\n        dispatch(getTotalJobs());\n        dispatch(getJobStatus());\n        callback(null, true);\n      } else {\n        dispatch(validation(response.data.error));\n      }\n    })\n    .catch(response => {\n    });\n  }\n}\nexport function nullJobForm(){\n  return function(dispatch) {\n    dispatch( { type: NULL_JOB_FORM, payload: {data:[]} } );\n  };\n}\nexport function getJobs(callback) {\n  return function(dispatch, getState) {\n    const state = getState();\n    var filters_state = state.common.list_filters;\n    var filter_data = {};\n    if(filters_state != undefined && filters_state.job != undefined){\n      var filter_data = filters_state.job;\n    }\n    axios({\n      method: 'post',\n      url: `${API_URL}/customer/job/list`,\n      headers: {\n       customer: cookie.load('customer'),\n      },\n      data: {\n        filter: filter_data,\n      },\n    })\n    .then(response => {\n      dispatch( { type: FETCH_JOB_LIST, payload: response } );\n\n      callback(null, response);\n    })\n    .catch(response => {\n      callback(true, null);\n    });\n  }\n}\nexport function getTotalJobs() {\n  return function(dispatch, getState) {\n    const state = getState();\n    var filters_state = state.common.list_filters;\n    var filter_data = {};\n    if(filters_state != undefined && filters_state.job != undefined){\n      var filter_data = filters_state.job;\n    }\n    axios({\n      method: 'post',\n      url: `${API_URL}/customer/job/total`,\n      headers: {\n       customer: cookie.load('customer'),\n      },\n      data: {\n        filter: filter_data,\n      },\n    })\n    .then(response => {\n      dispatch( { type: FETCH_JOB_TOTAL, payload: response } );\n    })\n    .catch(response => {\n      console.log(\"job total error>>>>>>>>>>>\", response);\n    });\n  }\n}\nexport function getJobStatus() {\n  return function(dispatch, getState) {\n    const state = getState();\n    var filters_state = state.common.list_filters;\n    var filter_data = {};\n    if(filters_state != undefined && filters_state.job != undefined){\n      var filter_data = filters_state.job;\n    }\n\n    axios({\n      method: 'post',\n      url: `${API_URL}/customer/job/status_wise_jobs`,\n      headers: {\n       customer: cookie.load('customer'),\n      },\n      data: {\n        filter: filter_data,\n      }\n    })\n    .then(response => {\n      dispatch( { type: FETCH_STATUSWISE_JOBS, payload: response } );\n    })\n    .catch(response => {\n      console.log(\"ticket statuswise tickets error>>>>>>>>>>>\", response);\n    });\n  }\n}\nexport function getJobInfo(filter, callback) {\n  return function(dispatch) {\n    axios({\n      method: 'post',\n      url: `${API_URL}/customer/job/info`,\n      headers: {\n       customer: cookie.load('customer'),\n      },\n      data: {\n        option: filter,\n      },\n    })\n    .then(response => {\n      //console.log(\"response>>>>>\", response);\n      dispatch( { type: FETCH_JOB_INFO, payload: response } );\n      callback(null, response);\n    })\n    .catch(response => {\n      console.log(\"catch>>>>>\", response);\n    });\n  }\n}\n\n\nexport function validation(error) {\n  return {\n    type: VALIDATION_ERROR,\n    payload: error\n  }\n}\nexport function validationNull() {\n  return {\n    type: VALIDATION_ERROR,\n    payload: null\n  }\n}\n\nexport function signoutCustomer() {\n  cookie.remove('customer', { path: '/' });\n  return {\n    type: UNAUTHENTICATE_CUSTOMER\n  }\n}\n","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\system\\reducer.js",[],"H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\system\\route.js",[],"H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\common\\header.js",["300","301","302","303"],"import React, { Component } from \"react\";\nimport cookie from \"react-cookie\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { getProfile  } from \"../account/account_action\";\nimport { getContractorProfile } from \"../contractor/contractor_action\";\nimport { lib } from \"../library/elements\";\nclass CommonHeader extends Component {\n  customerProfile() {\n    if (cookie.load(\"customer\") && !this.props.account_profile) {\n      this.props.getProfile();\n    }\n  }\n  ContractorProfile() {\n    if (cookie.load(\"contractor\") && !this.props.contractor_profile) {\n      this.props.getContractorProfile();\n    }\n  }\n\n  renderAccountLinks() {\n\n    if (cookie.load(\"customer\") && this.props.account_profile) {\n      return [\n        <li className=\"dropdown haccount-dropdown\" key=\"header.customer.li\">\n          <Link\n            title=\"My Account\"\n            className=\"dropdown-toggle btn btn-outline-secondary\"\n            data-toggle=\"dropdown\"\n          >\n            <i className=\"fa fa-user fa-account m-1\"></i>{\" \"}\n              {lib.ucwords(this.props.account_profile.firstname + \" \" + this.props.account_profile.lastname)}{\" \"}\n            <span className=\"caret\"></span>\n          </Link>\n          <ul className=\"dropdown-menu\">\n            <li>\n              <Link to=\"/account\">\n                <i className=\"fa fa-user\"></i> Dashboard\n              </Link>\n            </li>\n            <li>\n              <Link to=\"/account/job\">\n                <i className=\"fa fa-list\"></i> Jobs\n              </Link>\n            </li>\n            <li>\n              <Link to=\"/account/job/add\">\n                <i className=\"fa fa-plus\"></i> Ceate Job\n              </Link>\n            </li>\n            <li>\n              <Link to=\"/logout\">\n                <i className=\"fa fa-power-off\"></i> Logout\n              </Link>\n            </li>\n          </ul>\n        </li>,\n      ];\n    } else if (cookie.load(\"contractor\") && this.props.contractor_profile) {\n      return [\n        <li className=\"dropdown haccount-dropdown\" key=\"header.contractor.li\">\n          <Link\n            title=\"My Account\"\n            className=\"dropdown-toggle btn btn-outline-secondary\"\n            data-toggle=\"dropdown\"\n          >\n            <i className=\"fa fa-user fa-account m-1\"></i>{\" \"}\n              {lib.ucwords(this.props.contractor_profile.firstname + \" \" + this.props.contractor_profile.lastname)}{\" \"}\n            <span className=\"caret\"></span>\n          </Link>\n          <ul className=\"dropdown-menu\">\n            <li>\n              <Link to=\"/contractor_account\">\n                <i className=\"fa fa-user\"></i> Dashboard\n              </Link>\n            </li>\n            <li>\n              <Link to=\"/contractor/job\">\n                <i className=\"fa fa-list\"></i> Jobs\n              </Link>\n            </li>\n            <li>\n              <Link to=\"/contractor_logout\">\n                <i className=\"fa fa-power-off\"></i> Logout\n              </Link>\n            </li>\n          </ul>\n        </li>,\n      ];\n    } else {\n      return (\n        <li className=\"dropdown haccount-dropdown\" key=\"header.customer.lil\">\n          <Link\n            title=\"My Account\"\n            className=\"dropdown-toggle btn btn-outline-secondary\"\n            data-toggle=\"dropdown\"\n          >\n            <i className=\"fa fa-user fa-account\"></i>{\" \"}\n            <span className=\" hidden-lg-down\"> Registration </span>\n          </Link>\n          <ul className=\"dropdown-menu\">\n            <li>\n              <Link to=\"/customer\">Customer</Link>\n            </li>\n            <li>\n              <Link to=\"/contractor\">Contractor</Link>\n            </li>\n          </ul>\n        </li>\n      );\n    }\n  }\n\n  render() {\n    const {\n      authenticated,\n      authenticated_contractor,\n      account_profile,\n      contractor_profile,\n    } = this.props;\n\n\n    return (\n      <header className=\"header\">\n        <alertTop />\n        {this.customerProfile()}\n        {this.ContractorProfile()}\n        <div className=\"header-top hidden-md-down\">\n          <nav>\n            <div className=\"container\">\n              <div className=\"nav pull-left\" id=\"header-top-left\">\n                <Link to=\"/\" className=\"logo\">\n                  Mysscrow\n                </Link>\n\n                <div className=\"justify-content-start\" id=\"mobile-navigation\">\n                  <ul className=\"ml-4 navbar-nav\">\n                    <li className=\"nav-item\">\n                      <Link\n                        aria-current=\"page\"\n                        className=\"nav-link\"\n                        to=\"/about\"\n                      >\n                        About\n                      </Link>\n                    </li>\n                    <li className=\"nav-item\">\n                      <Link\n                        aria-current=\"page\"\n                        className=\"nav-link\"\n                        to=\"/contact\"\n                      >\n                        Contact Us\n                      </Link>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n\n              <div className=\"main-menu nav pull-right\">\n                <ul className=\"list-inline mb-0\">\n                  {this.renderAccountLinks()}\n                </ul>\n              </div>\n            </div>\n          </nav>\n        </div>\n      </header>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    authenticated: state.account.authenticated,\n    authenticated_contractor: state.contractor.authenticated,\n    account_profile: state.account.profile,\n    contractor_profile: state.contractor.contractor_profile,\n  };\n}\nexport default connect(mapStateToProps, { getProfile, getContractorProfile })(\n  CommonHeader\n);\n","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\common\\footer.js",["304","305"],"import $ from 'jquery';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nclass CommonFooter extends Component {\n\n\n  componentDidMount() {\n    var _this = this\n    $(window).scroll(function(){\n      var winTop = $(window).scrollTop();\n      //console.log(winTop+\"=============\");\n      if(winTop >= 150){\n        $('.scrolltop:hidden').stop(true, true).fadeIn();\n      } else {\n        $('.scrolltop').stop(true, true).fadeOut();\n      }\n    });\n  }\n\n    renderScrollTopEvent(){\n      $(\"html, body\").animate({ scrollTop: 0 }, 1000);\n    }\n\n  render() {\n  const {  } = this.props;\n\n    return (\n      <div className=\"footer-area\">\n        <div className=\"scrolltop\">\n          <div className=\"scroll icon\" onClick={() => this.renderScrollTopEvent() }>\n            <i className=\"fa fa-4x fa-chevron-up\"></i>\n          </div>\n        </div>\n          <div className=\"hidden-md-down\">\n                  <div className=\"container\">\n                      <div className=\"row\">\n                          <div className=\"col-lg-3 col-md-6\">\n                              <div className=\"single-footer-title\">\n                                  <div className=\"logo\">\n                                    <Link to=\"/\" className=\"logo\">Mysscrow\n</Link>\n                                  </div>\n                                  <p>Mysscrow have much planned for the future, working with great clients.</p>\n                                  <ul className=\"social-links\">\n                                          <li><Link to=\"\"><i className=\"fa fa-facebook\"></i></Link></li>\n                                          <li><Link to=\"\"><i className=\"fa fa-twitter\"></i></Link></li>\n                                          <li><Link to=\"\"><i className=\"fa fa-google-plus\"></i></Link></li>\n                                          <li><Link to=\"\"><i className=\"fa fa-linkedin\"></i></Link></li>\n                                          <li><Link to=\"\"><i className=\"fa fa-pinterest\"></i></Link></li>\n                                  </ul>\n                              </div>\n                          </div>\n                          <div className=\"col-lg-3 col-md-6\">\n                              <div className=\"single-footer-title\">\n                                  <h3>Contacts</h3>\n                                  <ul className=\"footer-link-list\">\n                                    <li><span>Mobile:</span> <Link to=\"\">+(91)-123456789</Link></li>\n                                    <li><span>Phone:</span> <Link to=\"\">+(91)-123456789</Link></li>\n                                  </ul>\n                              </div>\n                            </div>\n                            <div className=\"col-lg-3 col-md-6\">\n                                <div className=\"single-footer-title\">\n                                    <h3>Email</h3>\n                                    <ul className=\"footer-link-list\">\n                                        <li><Link to=\"\">123456789@gmail.com</Link></li>\n                                        <li><Link to=\"\">info@123456789.com</Link></li>\n                                  </ul>\n                                </div>\n                              </div>\n                              <div className=\"col-lg-3 col-md-6\">\n                                  <div className=\"single-footer-title\">\n                                      <h3>Address</h3>\n                                      <ul className=\"footer-link-list\">\n                                          <li>Your Address, US</li>\n                                      </ul>\n                                  </div>\n                            </div>\n                      </div>\n                  </div>\n                </div>\n                  <div className=\"copyright-area\">\n                      <div className=\"container\">\n                          <div className=\"row\">\n                              <div className=\"col-lg-12 col-md-12 text-center\">\n                                  <p className=\"m-0\">Copyright @2022 Mysscrow. All rights reserved</p>\n                              </div>\n                          </div>\n                      </div>\n                  </div>\n              </div>\n\n\n\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n   };\n}\nexport default connect(mapStateToProps, { })(CommonFooter);\n","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\common\\common_action.js",["306","307","308","309","310","311","312","313"],"import axios from 'axios';\nimport cookie from 'react-cookie';\nimport { API_URL,API_PREFIX } from '../../system/config';\n\nexport const FETCH_ALERT_TOP = 'FETCH_ALERT_TOP';\nexport const FETCH_LIST_FILTERS = 'FETCH_LIST_FILTERS';\nexport const UPDATE_LIST_FILTERS = 'UPDATE_LIST_FILTERS';\nexport const MERGE_LIST_FILTERS = 'MERGE_LIST_FILTERS';\n\n\nexport function setAlertTop(data) {\n  return {\n    type: FETCH_ALERT_TOP,\n    payload: {data}\n  };\n}\nexport function removeAlertTop() {\n  var data = {};\n  return {\n    type: FETCH_ALERT_TOP,\n    payload: {data}\n  };\n}\n\nexport function setFilters(group, group_data, type){\n  return function(dispatch, getState) {\n    const state = getState();\n    var filters_state = state.common.list_filters;\n    if(filters_state != undefined && filters_state[group] != undefined){\n      if(type != undefined && type == 'merge'){\n        dispatch( { type: MERGE_LIST_FILTERS, payload: group_data, group:group });\n      } else {\n        dispatch( { type: UPDATE_LIST_FILTERS, payload: group_data, group:group });\n      }\n    } else {\n      filters_state = {[group]: group_data}\n      dispatch( { type: FETCH_LIST_FILTERS, payload: {data:filters_state}} );\n    }\n  };\n}\n","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\system\\config.js",[],"H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\library\\elements\\index.js",[],"H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\library\\elements\\modal\\index.js",[],"H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\common\\common_reducer.js",["314"],"\nimport update from 'react-addons-update';\nimport {\n  FETCH_ALERT_TOP,\n  FETCH_LIST_FILTERS,\n  UPDATE_LIST_FILTERS,\n  MERGE_LIST_FILTERS,\n} from './common_action';\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case FETCH_ALERT_TOP:\n        return { ...state, alert: action.payload.data }\n    case FETCH_LIST_FILTERS:\n          return { ...state, list_filters: action.payload.data }\n    case UPDATE_LIST_FILTERS:\n          return update(state, { list_filters: { [action.group]: {$set: action.payload} } })\n    case MERGE_LIST_FILTERS:\n          return update(state, { list_filters: { [action.group]: {$merge: action.payload} } })\n    default:\n      return state;\n  }\n}\n","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\account\\account_reducer.js",["315"],"import {\n  AUTHENTICATE_CUSTOMER,\n  UNAUTHENTICATE_CUSTOMER,\n  VALIDATION_ERROR,\n  FETCH_ACCOUNT_PROFILE,\n  CUSTOMER_LOGIN_PHONE,\n  FETCH_JOB_TOTAL,\n  FETCH_STATUSWISE_JOBS,\n  FETCH_JOB_LIST,\n  NULL_JOB_FORM,\n  FETCH_JOB_INFO,\n\n  // Provider\n} from \"./account_action\";\n\nconst INITIAL_STATE = {\n  custom_service: [],\n};\n\nexport default function (state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case VALIDATION_ERROR:\n      return { ...state, error: action.payload };\n    case AUTHENTICATE_CUSTOMER:\n      return {\n        ...state,\n        error: \"\",\n        authenticated: true,\n        token: action.payload,\n      };\n    case UNAUTHENTICATE_CUSTOMER:\n      localStorage.removeItem(\"token\");\n      return { ...state, error: \"\", authenticated: false, token: false };\n    case FETCH_ACCOUNT_PROFILE:\n      return { ...state, profile: action.payload.data };\n    case CUSTOMER_LOGIN_PHONE:\n      return { ...state, login_phone: action.payload };\n    case FETCH_JOB_TOTAL:\n      return { ...state, job_total: action.payload.data.total };\n    case FETCH_STATUSWISE_JOBS:\n      return { ...state, filter_job_status: action.payload.data };\n    case FETCH_JOB_LIST:\n      return { ...state, job_list: action.payload.data };\n    case NULL_JOB_FORM:\n      return { ...state, job_service: action.payload.data };\n    case FETCH_JOB_INFO:\n      return { ...state, job_info: action.payload.data };\n    default:\n      return state;\n  }\n}\n","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\account\\logout.js",["316"],"import React,  { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { signoutCustomer } from './account_action';\n\nclass AccountLogout extends Component {\n\n  componentWillMount() {\n    this.props.signoutCustomer();\n  }\n\n  render() {\n    return (\n      <div id=\"logout\">\n          <div className=\"container mb-3 mt-3\">\n            <div className=\"row\">\n              <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                  <div className=\"card-body\">\n                    <div className=\"well text-muted text-center cart-empty sk-heading\">\n                      <i className=\"fa fa-shopping-basket fa-5x m-b-1 sk-heading\"></i>\n                        <h1 className=\"block-title large\">Account Logout</h1>\n                        <div className=\"description\">You have been logged off your account. It is now safe to leave the computer.</div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n  );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return { errorMessage: state.account.error}\n}\n\nexport default connect(null, { signoutCustomer })(AccountLogout)\n","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\account\\signin.js",["317","318"],"import React, { Component } from \"react\";\n\nimport { connect } from \"react-redux\";\nimport { Link,withRouter  } from \"react-router-dom\";\nimport { Field, reduxForm } from \"redux-form\";\nimport AccountFrogotPassword from \"../account/model_forgotten\";\nimport { input, LoadingLarge } from \"../library/elements\";\nimport { modal } from \"../library/elements/modal\";\nimport { login } from \"./account_action\";\nclass SignIn extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { isLoading: false, isError: \"\",isPasswordText: false, };\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n  }\n\n\n  handleFormSubmit(formProps) {\n    this.setState({ isError: \"\" });\n    this.setState({ isLoading: true });\n    var _this = this;\n    this.props.login(formProps, function (err, result) {\n      if (!result) {\n        _this.setState({ isLoading: false });\n      }else if (result === \"OTP\") {\n        _this.props.history.push(\"/otp\");\n        _this.setState({ isLoading: false });\n      } else {\n        _this.props.history.push(\"/account\");\n        _this.setState({ isLoading: false });\n      }\n    });\n  }\n  renderPasswordMask(getState) {\n    if (this.state[getState] === false) {\n      this.setState({ [getState]: true });\n    } else {\n      this.setState({ [getState]: false });\n    }\n  }\n  renderAlert() {\n    if (this.props.errorMessage) {\n      this.setState({ isButtonLoading: false });\n      return (\n        <div className=\"alert alert-danger m-b-1\">\n          <strong>Oops! </strong> {this.props.errorMessage}\n        </div>\n      );\n    }\n  }\n\n  addForpgotPasswordModal() {\n    //console.log(\"======\");\n    modal.add(AccountFrogotPassword, {\n      title: \"Forgot Password\",\n      size: \"large\",\n      closeOnOutsideClick: false,\n      hideCloseButton: false,\n      modalId: \"forgot-password\",\n    });\n  }\n  render() {\n    const { handleSubmit, authenticated, errorMessage } = this.props;\n    let isLoading = this.state.isLoading;\n    let isError = this.state.isError;\n    let isPasswordText = this.state.isPasswordText\n    if (errorMessage) {\n      isLoading = false;\n    }\n    return (\n      <div id=\"content-container\" className=\"cm-frm signup pt-5 pb-5\">\n        {isLoading ? <LoadingLarge /> : null}\n        <div className=\"card\">\n          <div className=\"card-header bg-white\">\n            <h5 className=\"m-0\"> Sign In</h5>\n          </div>\n          <div className=\"card-body\">\n      \n            <form onSubmit={handleSubmit(this.handleFormSubmit.bind(this))}>\n              <div className=\"form-group\">\n                <div className=\"col-sm-12 p-0 position-relative has-icon-left\">\n                  <Field\n                    name=\"email\"\n                    type=\"text\"\n                    component={input}\n                    label=\"Email/Phone\"\n                  />\n                </div>\n              </div>\n              <div className=\"form-group\">\n              <div className=\"col-sm-12 p-0 position-relative has-icon-left\">\n               \n               <div className=\"input-group\">\n                 {isPasswordText ? (\n                   <Field\n                     name=\"password\"\n                     type=\"text\"\n                     component={input}\n                     label=\"* Password\"\n                     className=\"form-control\"\n                   />\n                 ) : (\n                   <Field\n                     name=\"password\"\n                     type=\"password\"\n                     component={input}\n                     label=\"* Password\"\n                     className=\"form-control\"\n                   />\n                 )}\n                 <button\n                   type=\"button\"\n                   className=\"input-group-text\"\n                   onClick={() => this.renderPasswordMask(\"isPasswordText\")}\n                 >\n                   {isPasswordText ? (\n                     <i className=\"fa fa-eye\"></i>\n                   ) : (\n                     <i className=\"fa fa-eye-slash\"></i>\n                   )}\n                 </button>\n               </div>\n         \n             </div>\n              </div>\n              <div className=\"form-group row text-right\">\n                <div className=\"col-sm-12\">\n                  <Link\n                    className=\"form-link\"\n                    onClick={() => this.addForpgotPasswordModal()}\n                  >\n                    Forgot Password\n                  </Link>\n                </div>\n              </div>\n              <div className=\"form-group\">\n                <div className=\"col-sm-12 p-0\">\n                  <button\n                    type=\"submit\"\n                    action=\"signin\"\n                    disabled={isLoading}\n                    className=\"btn  btn-primary btn-submit\"\n                  >\n                    {isLoading ? \"Loading...\" : \"Sign In\"}\n                  </button>\n                </div>\n              </div>\n              \n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction validate(formProps) {\n  const errors = {};\n  if (!formProps.email) {\n    errors.email = \"Required Email/Phone\";\n  }\n  if (!formProps.password) {\n    errors.password = \"Required Password\";\n  }\n  return errors;\n}\n\nSignIn = reduxForm({\n  form: \"signin\",\n  validate: validate,\n})(SignIn);\n\nfunction mapStateToProps(state) {\n  return {\n    errorMessage: state.account.error,\n    authenticated: state.account.authenticated,\n  };\n}\n\n\nexport default withRouter(connect(mapStateToProps, { login })(\n(SignIn)\n));","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\account\\signup.js",["319","320","321"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { input, LoadingLarge } from \"../library/elements\";\nimport { register } from \"./account_action\";\n\nclass Signup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n      isPasswordText: false,\n      isPasswordConfirmText: false,\n    };\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n  }\n\n  componentWillMount() {\n    if (this.props.authenticated) {\n      this.props.history.push(\"/otp\");\n    }\n  }\n\n  componentWillReceiveProps() {\n    this.state = { isLoading: false };\n  }\n\n  handleFormSubmit(formProps) {\n    this.setState({ isLoading: true });\n    var _this = this;\n    this.props.register(formProps, function (err, result) {\n      _this.props.history.push(\"/otp\");\n    });\n  }\n\n  renderPasswordMask() {\n      this.setState({isPasswordText : !this.state.isPasswordText});\n\n  }\n  renderConfirmPasswordMask(getState) {\n    this.setState({isPasswordConfirmText : !this.state.isPasswordConfirmText});\n  }\n\n  render() {\n    const { handleSubmit } = this.props;\n    var { isLoading, isPasswordText, isPasswordConfirmText } = this.state;\n    return (\n      <div id=\"content-container\" className=\"cm-frm signup pt-5 pb-5\">\n        {isLoading ? <LoadingLarge /> : \"\"}\n        <div className=\"card\">\n          <div className=\"card-header bg-white\">\n            <h5 className=\"m-0\"> Sign up</h5>\n          </div>\n          <form\n            onSubmit={handleSubmit(this.handleFormSubmit.bind(this))}\n            className=\"signup-form df-form\"\n          >\n            <div className=\"card-body\">\n              <div className=\"row form-group\">\n                <div className=\"col-sm-6\">\n                  <Field\n                    name=\"firstname\"\n                    type=\"text\"\n                    component={input}\n                    label=\"* First Name\"\n                    isBorderError={true}\n                    className=\"form-control\"\n                  />\n                </div>\n                <div className=\"col-sm-6\">\n                  <Field\n                    name=\"lastname\"\n                    type=\"text\"\n                    component={input}\n                    label=\"* Last Name\"\n                    isBorderError={true}\n                    className=\"form-control\"\n                  />\n                </div>\n              </div>\n              <div className=\"row form-group\">\n                <div className=\"col-sm-6 mb-3\">\n                  <Field\n                    name=\"email\"\n                    type=\"text\"\n                    component={input}\n                    label=\"* Email\"\n                    isBorderError={true}\n                    className=\"form-control\"\n                  />\n                </div>\n                <div className=\"col-sm-6\">\n                  <Field\n                    name=\"phone\"\n                    type=\"text\"\n                    component={input}\n                    label=\"* Mobile or Phone\"\n                    isBorderError={true}\n                    className=\"form-control\"\n                  />\n                </div>\n              </div>\n              <div className=\"row form-group\">\n                <div className=\"col-sm-12\">\n                  <Field\n                    name=\"address\"\n                    type=\"text\"\n                    component={input}\n                    label=\"* Address\"\n                    isBorderError={true}\n                    className=\"form-control\"\n                  />\n                </div>\n              </div>\n              <div className=\" row mb-3\">\n                <div className=\"col-sm-6 form-group\">\n                <div className=\"input-group\">\n                 {isPasswordText ? (\n                   <Field\n                     name=\"password\"\n                     type=\"text\"\n                     component={input}\n                     label=\"* Password\"\n                     className=\"form-control\"\n                   />\n                 ) : (\n                   <Field\n                     name=\"password\"\n                     type=\"password\"\n                     component={input}\n                     label=\"* Password\"\n                     className=\"form-control\"\n                   />\n                 )}\n                 <button\n                   type=\"button\"\n                   className=\"input-group-text\"\n                   onClick={() => this.renderPasswordMask(\"isPasswordText\")}\n                 >\n                   {isPasswordText ? (\n                     <i className=\"fa fa-eye\"></i>\n                   ) : (\n                     <i className=\"fa fa-eye-slash\"></i>\n                   )}\n                 </button>\n               </div>\n                </div>\n                <div className=\"col-sm-6\">\n                  <div className=\"input-group\">\n                    {isPasswordConfirmText ? (\n                      <Field\n                        name=\"confirm_password\"\n                        type=\"text\"\n                        component={input}\n                        label=\"* Confirm Password\"\n                        className=\"form-control\"\n                      />\n                    ) : (\n                      <Field\n                        name=\"confirm_password\"\n                        type=\"password\"\n                        component={input}\n                        label=\"* Confirm Password\"\n                        className=\"form-control\"\n                      />\n                    )}\n                    <button\n                      type=\"button\"\n                      className=\"input-group-text\"\n                      onClick={() =>\n                        this.renderConfirmPasswordMask(\"isPasswordConfirmText\")\n                      }\n                    >\n                      {isPasswordConfirmText ? (\n                        <i className=\"fa fa-eye\"></i>\n                      ) : (\n                        <i className=\"fa fa-eye-slash\"></i>\n                      )}\n                    </button>\n                  </div>\n                </div>\n              </div>\n              <div className=\"form-group\">\n                <div className=\"col-sm-12\">\n                  <button\n                    action=\"signup\"\n                    type=\"submit\"\n                    className=\"btn btn-outline-primary\"\n                  >\n                    SignUp\n                  </button>\n                </div>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction validate(formProps) {\n  const errors = {};\n  if (!formProps.firstname) {\n    errors.firstname = \"Required  First Name\";\n  }\n  if (!formProps.lastname) {\n    errors.lastname = \"Required  Last Name\";\n  }\n  if (!formProps.address) {\n    errors.address = \"Required  Address\";\n  }\n  if (!formProps.email) {\n    errors.email = \"Required Email\";\n  } else if (\n    !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(formProps.email)\n  ) {\n    errors.email = \"Invalid Email Address\";\n  }\n  if (!formProps.phone) {\n    errors.phone = \"Required Mobile\";\n  } else {\n    var phoneno = /^\\d{10}$/;\n    if (isNaN(formProps.phone)) {\n      errors.phone = \"Mobile number must be numeric only!\";\n    } else if (formProps.phone.length < 10) {\n      errors.phone = \"Mobile number must be in 10 digit!\";\n    } else if (!formProps.phone.match(phoneno)) {\n      errors.phone = \"Mobile number must be numeric only!\";\n    }\n  }\n  if (!formProps.password) {\n    errors.password = \"Required Password\";\n  }\n  if (!formProps.confirm_password) {\n    errors.confirm_password = \"Required Confirm Password\";\n  }\n  if (formProps.password != formProps.confirm_password) {\n    errors.confirm_password = \"Confirm must match to Password\";\n  }\n\n  return errors;\n}\n\nfunction mapStateToProps(state) {\n  return {\n    authenticated: state.account.authenticated,\n    errorMessage: state.account.error,\n  };\n}\n\nSignup = reduxForm({\n  form: \"signup\",\n  validate: validate,\n})(Signup);\n\nexport default withRouter(connect(mapStateToProps, { register })(Signup));\n","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\account\\otp_signin.js",["322","323","324"],"import React,  { Component } from 'react';\nimport { Router, Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport { otplogin } from './account_action';\nimport { modal } from '../library/elements/modal';\nimport { input, LoadingLarge } from '../library/elements';\nimport AccountFrogotPassword from '../account/model_forgotten';\n\nclass AccountOTPLogin extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { isLoading:false, isError: '' };\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n  }\n\n    handleFormSubmit(formProps) {\n      this.setState({ isError: '' });\n      this.setState({ isLoading: true });\n      var _this = this;\n      this.props.otplogin(formProps, function(err, result) {\n        if(!result) {\n          _this.setState({ isLoading: false });\n        } else {\n          _this.props.history.push(\"/account\");\n          _this.setState({ isLoading: false });\n\n        }\n      });\n    }\n\n  renderAlert() {\n    if(this.props.errorMessage) {\n      this.setState({ isButtonLoading: false });\n      return (\n        <div className=\"alert alert-danger m-b-1\">\n        <strong>Oops! </strong> {this.props.errorMessage}\n        </div>\n      )\n    }\n  }\n\n  addForpgotPasswordModal() {\n  modal.add(AccountFrogotPassword, {\n    title: \"Forgot Password\",\n    size: 'large',\n    closeOnOutsideClick: false,\n    hideCloseButton: false,\n    modalId: 'forgot-password',\n  });\n  }\n  render() {\n\n    const { handleSubmit, authenticated,errorMessage } = this.props;\n    let isLoading = this.state.isLoading;\n    let isError = this.state.isError;\n\n    if(errorMessage){\n      isLoading = false;\n    }\n    return (\n    <div id=\"content-container\" className=\"cm-frm signup pt-5 pb-5\">\n        { isLoading ? <LoadingLarge /> : null }\n        <div className=\"account-banner\">\n\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-sm-3 hidden-lg-down\"></div>\n              <div className=\"col-sm-6\">\n                <div className=\"card\">\n\n                      <div className=\"card-header\"><h5 className=\"m-0\"> Customer Sign In</h5></div>\n                      <div className=\"card-body\">\n                        {\n                          errorMessage\n                          ?\n                          <div className=\"form-group\">\n                            <div className=\"col-sm-12 p-0\">\n                              <div className=\"alert alert-warning\">{errorMessage}</div>\n                            </div>\n                          </div>\n                          :\n                          null\n                        }\n                        <form onSubmit={handleSubmit(this.handleFormSubmit.bind(this))}>\n                          <div className=\"form-group\">\n                            <div className=\"col-sm-12 p-0 position-relative has-icon-left\">\n                              <label><strong>Mobile phone number</strong></label>\n                                <Field name=\"phone\" type=\"text\" icon=\"fa fa-phone\"  component={input}/>\n                            </div>\n                          </div>\n                          <div className=\"form-group\">\n                            <div className=\"col-sm-12 p-0\">\n                              <button\n                                type=\"submit\"\n                                action=\"signin\"\n                                disabled={isLoading}\n                                className=\"btn  btn-block  btn-primary btn-submit\">\n                                  { isLoading ? 'Loading...' : 'Continue'}\n                              </button>\n                            </div>\n                          </div>\n                          <div className=\"form-group row\">\n                            <div className=\"col-sm-12 text-center\">\n                                  <Link className=\"form-link\" to=\"/signup\"><h6>Signup Now</h6></Link>\n                            </div>\n                          </div>\n                        </form>\n\n                  </div>\n                </div>\n                <p className=\"line-on-side text-muted text-center font-small-3 sk-headin mt-4\"><span>or</span></p>\n                <div className=\"form-group row mb-0\">\n                  <div className=\"col-sm-12 text-center\">\n                        <Link className=\"form-link\" to=\"/signin\"><h6>Signin with Password</h6></Link>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col-sm-3 hidden-lg-down\"></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n\n  }\n}\n\nfunction validate(formProps) {\n  const errors = {}\n  if (!formProps.phone) {\n    errors.phone = 'Enter your mobile number'\n  }\n  return errors\n}\n\nAccountOTPLogin = reduxForm({\n  form: 'signin',\n  validate: validate\n})(AccountOTPLogin);\n\nfunction mapStateToProps(state) {\n  return {\n    errorMessage: state.account.error,\n    authenticated: state.account.authenticated\n  }\n}\n\nexport default connect(mapStateToProps, { otplogin })(AccountOTPLogin);\n","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\common\\home.js",["325","326"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nvar ReactRotatingText = require(\"react-rotating-text\");\nclass CommonHome extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n\n  render() {\n    return (\n      <div className=\"common-home\">\n        <div className=\"first-section\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-sm-12\">\n                <div className=\"first-section-content text-center cm-frm\">\n                  <h2\n                    className=\"wow bounceIn  animated slide-text\"\n                    style={{\n                      visibility: \"visible\",\n                      \"-webkit-animation-delay\": \"0.6s\",\n                      \"-moz-animation-delay\": \"0.6s\",\n                      \"animation-delay\": \"0.6s\",\n                      \"animation-delay\": \"0.6s\",\n                    }}\n                  >\n                    {\" \"}\n                    Mysscrow Help in{\" \"}\n                    <ReactRotatingText\n                      items={[\"Advertising\", \"Services\", \"Marketing\"]}\n                      pause={1500}\n                      className=\"text-warning\"\n                      emptyPause={1000}\n                      typingInterval={100}\n                      deletingInterval={100}\n                    />\n                  </h2>\n                  <div className=\"overlay\"></div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"services-area bg ptb-100 text-center\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-sm-12\">\n                <div className=\"section-title\">\n                  <h3>We provide best services!</h3>\n                  <p className=\"hidden-lg-down\">\n                    We enjoy adapting our strategies to offer every customer the\n                    best solutions that are at the forefront of the industry.\n                  </p>\n                </div>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-lg-4 col-md-6 col-6\">\n                <div className=\"single-services\">\n                  <div className=\"icon\">\n                  <i className=\"icon-logo fa fa-handshake-o\"></i>\n                  </div>\n                  <h3>Kitchen Services</h3>\n                  <p className=\"hidden-lg-down\">\n                    Our new kitchen planner allows you to design your dream\n                    kitchen and arrive at a rough quotation in a matter of\n                    minutes.\n                  </p>\n                </div>\n              </div>\n              <div className=\"col-lg-4 col-md-6 col-6\">\n                <div className=\"single-services\">\n                  <div className=\"icon\">\n                  <i className=\"icon-logo fa fa-handshake-o\"></i>\n                  </div>\n                  <h3>Bathroom Services</h3>\n                  <p className=\"hidden-lg-down\">\n                    Planning your bathroom with our Bathroom Planner design tool\n                    is easy and intuitive.\n                  </p>\n                </div>\n              </div>\n              <div className=\"col-lg-4 col-md-6 col-6\">\n                <div className=\"single-services\">\n                  <div className=\"icon\">\n                  <i className=\"icon-logo fa fa-handshake-o\"></i>\n                  </div>\n                  <h3>Plumbing Services</h3>\n                  <p className=\"hidden-lg-down\">\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed\n                    do eiusmod tempor incididunt\n                  </p>\n                </div>\n              </div>\n              <div className=\"col-lg-4 col-md-6 col-6\">\n                <div className=\"single-services\">\n                  <div className=\"icon\">\n                  <i className=\"icon-logo fa fa-handshake-o\"></i>\n                  </div>\n                  <h3>Electrical Services</h3>\n                  <p className=\"hidden-lg-down\">\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed\n                    do eiusmod tempor incididunt\n                  </p>\n                </div>\n              </div>\n              <div className=\"col-lg-4 col-md-6 col-6\">\n                <div className=\"single-services\">\n                  <div className=\"icon\">\n                  <i className=\"icon-logo fa fa-handshake-o\"></i>\n                  </div>\n                  <h3>Painting Services</h3>\n                  <p className=\"hidden-lg-down\">\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed\n                    do eiusmod tempor incididunt\n                  </p>\n                </div>\n              </div>\n              <div className=\"col-lg-4 col-md-6 col-6\">\n                <div className=\"single-services\">\n                  <div className=\"icon\">\n                  <i className=\"icon-logo fa fa-handshake-o\"></i>\n                  </div>\n                  <h3>Pest Conttrol Services</h3>\n                  <p className=\"hidden-lg-down\">\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed\n                    do eiusmod tempor incididunt\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {};\n}\n\nexport default connect(mapStateToProps, {})(CommonHome);\n","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\account\\dashboard.js",["327","328"],"H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\account\\otp.js",["329","330","331","332"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link,withRouter } from 'react-router-dom';\nimport { Field, reduxForm } from 'redux-form';\nimport { input, Loading } from '../library/elements';\nimport { loginOTP, resendOTP } from './account_action';\n\nclass AccountOtp extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { isLoading:false, isError: '', currentPage:\"1\" };\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n  }\n\n  componentWillMount(){\n    // if(!this.props.login_phone){\n    // this.props.history.push('/otp_signin');\n    // }\n  }\n\n  handleFormSubmit(formProps) {\n    this.setState({ isLoading: true });\n    this.setState({ isError: '' });\n    var _this = this;\n  formProps.phone = this.props.login_phone;\n    this.props.loginOTP(formProps, function(err, result) {\n      if(result.error) {\n        _this.setState({ isLoading: false });\n        _this.setState({ isError: result.error });\n      } else {\n        _this.props.history.push('/account');\n      }\n    });\n  }\n\n  resendOTP(){\n    this.setState({ isLoading: true });\n    this.setState({ isError: '' });\n    var _this = this;\n    var phone = this.props.login_phone;\n    this.props.resendOTP(phone, function(err, result) {\n      if(result) {\n        _this.props.reset('accountotp');\n        _this.setState({ isLoading: false });\n      }\n    });\n  }\n\n  renderAlert() {\n    if(this.props.errorMessage) {\n      this.setState({ isButtonLoading: false });\n      return (\n        <div className=\"alert alert-danger m-b-1\">\n        <strong>Oops! </strong> {this.props.errorMessage}\n        </div>\n      )\n    }\n  }\n\n  changeCurrentPage(page){\n    this.setState({currentPage : page});\n  }\n\n  render() {\n\n    const { handleSubmit, authenticated, alert, login_phone } = this.props;\n    let isLoading = this.state.isLoading;\n    let isError = this.state.isError;\n    let currentPage = this.state.currentPage;\n\n    return (\n      <div id=\"content-container\" className=\"cm-frm signup pt-5 pb-5\">\n        { isLoading ? <Loading /> : null }\n        <div className=\"account-banner\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-sm-3 hidden-lg-down\"></div>\n              <div className=\"col-sm-6\">\n                <div className=\"card\">\n\n                  <div className=\"card-header text-center\">\n                    <h5 className=\"pseudo_border m-0\">Login with OTP</h5>\n                  </div>\n                  <form onSubmit={handleSubmit(this.handleFormSubmit.bind(this))}>\n                    <div className=\"card-body\">\n                      {\n                        isError\n                        ?\n                        <div className=\"form-group\">\n                          <div className=\"col-sm-12\">\n                            <div className=\"alert alert-warning\">{isError}</div>\n                          </div>\n                        </div>\n                        :\n                        null\n                      }\n                      {this.renderAlert()}\n                      <p className=\"card-text\">\n                        One Time Passcode (OTP) is a numeric code that is only valid for a one time activation when you signup.\n                        The OTP will be sent via SMS to your mobile  phone number as registered with Mysscrow.\n                        It will expire in 2 minutes.\n                        Please enter the OTP below to verify your mobile\n                      </p>\n                        <label><strong>Enter OTP</strong></label>\n                      <div className=\"form-group row\">\n                        <div className=\"col-sm-12 position-relative has-icon-left\">\n                          <Field name=\"otp\" type=\"text\" icon=\"fa fa-phone\" component={input} label=\"OTP\"/>\n                        </div>\n                      </div>\n                      <div className=\"form-group row\">\n                        <div className=\"col-sm-12 position-relative has-icon-left\">\n                          <Link className=\"form-link\" onClick={() => this.resendOTP()} ><h6>Resend OTP</h6></Link>\n                        </div>\n                      </div>\n                      <div className=\"form-group\">\n                        <div className=\"col-sm-12\">\n                          <button\n                            type=\"submit\"\n                            action=\"accountotp\"\n                            disabled={isLoading}\n                            className=\"btn btn-outline-zoom btn-block\">\n                              <i className=\"fa fa-check-square-o\"></i>  { isLoading ? 'Loading...' : 'Validate OTP'}\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                  </form>\n                </div>\n              </div>\n                <div className=\"col-sm-3 hidden-lg-down\"></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n\n  }\n}\n\nfunction validate(formProps) {\n  const errors = {}\n  if (!formProps.otp) {\n    errors.otp = 'Required OTP';\n  } else {\n    if (isNaN(formProps.otp)) {\n      errors.otp = 'OTP  must be numeric only!';\n    } else if(formProps.otp.length > 6){\n      errors.otp = 'OTP  must be up to 6 digit!';\n    }\n  }\n\n  return errors\n}\n\nAccountOtp = reduxForm({\n  form: 'accountotp',\n  validate: validate\n})(AccountOtp);\n\nfunction mapStateToProps(state) {\n  return {\n    errorMessage: state.account.error,\n    authenticated: state.account.authenticated,\n    login_phone: state.account.login_phone,\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, { loginOTP, resendOTP })(AccountOtp));\n","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\library\\elements\\loading_text.js",["333"],"import React, { Component } from 'react';\n\nclass LoadingText extends Component {\n\n  render() {\n    if(this.props.text){\n      var text = this.props.text;\n    } else {\n      var text = \"Loading...\";\n    }\n    return (\n      <div id=\"overlay\" className=\"display-block\">\n        <div className=\"overlay-block\">\n           <div className=\"loader1\">{text}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LoadingText;\n","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\library\\elements\\input.js",["334","335"],"import React, { Component } from 'react';\n//import { Field, reduxForm } from 'redux-form';\n\nclass Input extends Component {\n\n  render() {\n    //console.log(\"input props found>>>>>>>>>\", this.props);\n    const { input, icon, label, is_label, isRequired, type, meta } = this.props;\n    var reqClassName = '';\n    if(isRequired){\n      var reqClassName = 'required';\n    }\n\n    var inputLabel = '';\n    if(is_label) {\n      inputLabel = <label className={\"control-label \"+reqClassName}>{label}</label>;\n    }\n \n    if(type == \"checkbox\"){\n      return (\n        <div className=\"checkbox\">\n          <label>\n            <input {...input} type={type} /> {label}\n          </label>\n          {meta.touched && ((meta.error && <div className=\"error\">{meta.error}</div>) || (meta.warning && <div className=\"error\">{meta.warning}</div>))}\n        </div>\n      )\n    }\n    if(icon){\n      return (\n        <>\n          {inputLabel}\n          <div className=\"input-group\">\n            <span className=\"input-group-text\"><i className={icon}></i></span>\n            <input {...input} placeholder={label} type={type} className=\"form-control\" />\n          </div>\n          {meta.touched && ((meta.error && <span className=\"error\">{meta.error}</span>) || (meta.warning && <span className=\"error\">{meta.warning}</span>))}\n        </>\n      )\n    } else {\n      return (\n        <>\n          {inputLabel}\n          <input {...input} placeholder={label} type={type} className=\"form-control\"/>\n          {meta.touched && ((meta.error && <span className=\"error\">{meta.error}</span>) || (meta.warning && <span className=\"error\">{meta.warning}</span>))}\n        </>\n      )\n    }\n  }\n}\n\nexport default Input;\n","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\library\\elements\\loading_large.js",[],"H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\library\\elements\\alert_top.js",[],"H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\library\\elements\\no_result.js",[],"H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\library\\elements\\textarea.js",["336","337"],"import React, { Component } from 'react';\n\nclass textarea extends Component {\n\n\n  render() {\n    const { input, icon, label, is_label, type, meta } = this.props;\n    var inputLabel = '';\n    if(is_label) {\n      inputLabel = <label>{label}</label>;\n    }\n    return (\n      <div>\n        {inputLabel}\n        <textarea {...input} placeholder={!is_label ? label : null } className=\"form-control\" rows=\"5\" />\n        {meta.touched && ((meta.error && <span className=\"error\">{meta.error}</span>) || (meta.warning && <span className=\"error\">{meta.warning}</span>))}\n      </div>\n    )\n  }\n}\n\nexport default textarea;\n","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\library\\elements\\loading.js",[],"H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\library\\elements\\image.js",["338","339","340","341"],"import React, { Component } from 'react';\n\nclass Image extends Component {\n\n  render() {\n    const { input, disabled, type, meta } = this.props;\n    //console.log(\"input>>>>>>>>\", input.value.dataUrl);\n\n    return (\n      <div className=\"fileUpload btn btn-outline-default p-0\">\n        {\n          input.value.dataUrl\n          ?\n          <img src={input.value.dataUrl ? input.value.dataUrl : input.value} className=\"\" width='100' height='100' />\n          :\n          <span><i className=\"fa fa-camera\"></i></span>\n        }\n\n        <input type=\"file\"\n          name=\"image\"\n          className=\"m-l-20\"\n          onChange={(e)=> {\n            var files = e.target.files;\n            let reader = new FileReader();\n            let file = e.target.files[0];\n            reader.onload = function (e) {\n              var picFile = e.target;\n              files.dataUrl = picFile.result;\n              input.onChange(files);\n            }\n            reader.readAsDataURL(file);\n          }}\n        />\n      </div>\n    )\n  }\n}\n\nexport default Image;\n/*<Field name=\"image\" component={ image =>{\n  var showImage = null;\n  if(image.input.value && image.input.value !== ''){\n    showImage = (\n      <div className=\"pro-image\">\n        <img onError={this.addDefaultSrc} src={image.input.value.dataUrl?image.input.value.dataUrl:image.input.value} className='m-l-10' width='100' height='100' />\n          <div className=\"fileUpload btn btn-outline-default\">\n            <span>Upload Profile Image</span>\n            <input type=\"file\"\n             name=\"image\"\n             className=\"ml-2\"\n             onChange={(e)=> {\n              var files = e.target.files;\n              let reader = new FileReader();\n              let file = e.target.files[0];\n              reader.onload = function (e) {\n                var picFile = e.target;\n                files.dataUrl = picFile.result;\n                image.input.onChange(files);\n              }\n            reader.readAsDataURL(file);\n          }}/>\n      </div>\n    </div>\n    )\n  }\n  return (\n    <div>\n    {\n      showImage !== null\n      ?\n      showImage\n      :\n      <div className=\"fileUpload btn btn-outline-default\">\n        <span>Upload Profile Image</span>\n        <input type=\"file\"\n         name=\"image\"\n         className=\"m-l-20\"\n         onChange={(e)=> {\n          var files = e.target.files;\n          let reader = new FileReader();\n          let file = e.target.files[0];\n          reader.onload = function (e) {\n            var picFile = e.target;\n            files.dataUrl = picFile.result;\n            image.input.onChange(files);\n          }\n        reader.readAsDataURL(file);\n      }}/> </div>}\n\n  </div>)}\n} />*/\n","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\library\\elements\\breadcrumbs.js",["342","343"],"import React, { Component, PropTypes } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nclass Breadcrumbs extends Component {\n\n  renderBreadcrumb(breadcrumbs){\n    return breadcrumbs.map((breadcrumb) => {      \n      return(\n        <li key={\"breadcrumb.\"+breadcrumb.value}>\n          <Link to={breadcrumb.value}>{breadcrumb.text}</Link>\n        </li>\n      );\n    });\n  }\n\n  render() {\n    const { breadcrumbs } = this.props;\n    if(!breadcrumbs){\n      return <div className=\"loading\">Loading</div>\n    }\n    return (\n      <ul className=\"breadcrumb\">\n        <li><Link to={\"/\"}><i className=\"fa fa-home\"></i></Link></li>\n        {this.renderBreadcrumb(breadcrumbs)}\n      </ul>\n    );\n  }\n}\n\nexport default Breadcrumbs;\n","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\library\\elements\\library.js",["344","345","346","347","348","349","350","351","352","353","354","355","356","357","358","359","360","361","362","363","364","365","366","367","368","369","370","371","372","373","374","375","376","377","378","379","380","381","382","383"],"import React, { Component, PropTypes } from 'react';\nimport { Link } from 'react-router-dom';\nimport $ from 'jquery'; \nexport function dateFormat(date){\n  date = new Date(date).toUTCString();\n  date = date.split(' ').slice(1, 4).join('-')\n  return date;\n}\n\nexport function totalFormat(value){\n  value = parseFloat(value);\n  if(isNaN(value)){\n    return <span>Rs 0</span>;\n  }\n  value = value.toFixed(3).replace(/(\\d)(?=(\\d{3})+\\.)/g, \"$1,\");\n  return <span>Rs {value}</span>;\n}\n\nexport function amountFormat(value){\n  value = parseFloat(value);\n  if(isNaN(value)){\n    return <span>Rs 0</span>;\n  }\n  value = value.toFixed(3).replace(/(\\d)(?=(\\d{3})+\\.)/g, \"$1,\");\n  return <span>Rs {value}</span>;\n}\nexport function getTimeAgo(getDate) {\n\n    var templates = {\n        prefix: \"\",\n        suffix: \" ago\",\n        seconds: \"Updated less than a minute\",\n        minute: \"Updated a minute\",\n        minutes: \"%d minutes\",\n        hour: \"Updated an hour\",\n        hours: \"Updated %d hours\",\n        day: \"Updated a day\",\n        days: \"Updated %d days\",\n        month: \"Updated a month\",\n        months: \"Updated %d months\",\n        year: \"Updated a year\",\n        years: \"Updated %d years\"\n    };\n    var template = function(t, n) {\n      return templates[t] && templates[t].replace(/%d/i, Math.abs(Math.round(n)));\n    };\n\n    var timer = function(time) {\n        if (!time)\n            return;\n        time = time.replace(/\\.\\d+/, \"\"); // remove milliseconds\n        time = time.replace(/-/, \"/\").replace(/-/, \"/\");\n        time = time.replace(/T/, \" \").replace(/Z/, \" UTC\");\n        time = time.replace(/([\\+\\-]\\d\\d)\\:?(\\d\\d)/, \" $1$2\"); // -04:00 -> -0400\n        time = new Date(time * 1000 || time);\n\n        var now = new Date();\n        var seconds = ((now.getTime() - time) * .001) >> 0;\n        var minutes = seconds / 60;\n        var hours = minutes / 60;\n        var days = hours / 24;\n        var years = days / 365;\n\n    return templates.prefix + (\n      seconds < 45 && template('seconds', seconds) ||\n      seconds < 90 && template('minute', 1) ||\n      minutes < 45 && template('minutes', minutes) ||\n      minutes < 90 && template('hour', 1) ||\n      hours < 24 && template('hours', hours) ||\n      hours < 42 && template('day', 1) ||\n      days < 30 && template('days', days) ||\n      days < 45 && template('month', 1) ||\n      days < 365 && template('months', days / 30) ||\n      years < 1.5 && template('year', 1) ||\n      template('years', years)\n      ) + templates.suffix;\n    };\n\n    return timer(getDate);\n\n}\nexport function htmlDecode(str){\n  if(str && typeof str === 'string') {\n    var element = document.createElement('div');\n    // strip script/html tags\n    str = str.replace(/<script[^>]*>([\\S\\s]*?)<\\/script>/gmi, '');\n    str = str.replace(/<\\/?\\w(?:[^\"'>]|\"[^\"]*\"|'[^']*')*>/gmi, '');\n    element.innerHTML = str;\n    str = element.textContent;\n    element.textContent = '';\n  }\n  return str;\n}\nexport function Decodetohtml(str){\n  var str_html = str;\n  return <div dangerouslySetInnerHTML = {{__html : str_html }}/>;\n}\nexport function ucwords(str){\n  if(str && typeof str === 'string') {\n    str = str.toLowerCase().replace(/\\b[a-z]/g, function(letter) {\n      return letter.toUpperCase();\n    });\n  }\n  return str;\n}\n\nexport function toHtml(str){\n  var str_html = $(\"<div/>\").html(str).text();\n  return <div dangerouslySetInnerHTML = {{__html : str_html }}/>;\n}\n\nexport function focusDiv(get_ref) {\n  window.location.hash = get_ref;\n}\n\nexport function strtotime(date){\n  /*import strtotime from 'locutus/php/datetime/strtotime';\n  return strtotime(date);*/\n  //require('locutus/php/datetime/strtotime');\n  return date;\n}\n\nexport function imageExists(url, callback) {\n  var img = new Image();\n  img.onload = function() { callback(true); };\n  img.onerror = function() { callback(false); };\n  img.src = url;\n}\n\nexport function onlyTimeFormat(str){\n  var open = str.split(\":\");\n  var hours = open[0];\n  var minutes = open[1];\n  var ampm = hours >= 12 ? 'PM' : 'AM';\n  hours = hours % 12;\n  hours = hours ? hours : 12;\n  var strTime = hours + ':' + minutes + ' ' + ampm;\n  return strTime;\n}\n\n//make list\n//https://jsfiddle.net/justindevs/wgk63o1y/\nexport function getTimeIntervals(time1, time2, interval) {\n  time1 = parseIn(time1);\n  time2 = parseIn(time2);\n\n  var arr = [];\n  while(time1 < time2){\n    arr.push(time1.toTimeString().substring(0,5));\n    time1.setMinutes(time1.getMinutes() + interval);\n  }\n  return arr;\n}\n\n//Parse In\nexport function parseIn(date_time){\n  var d = new Date();\n  d.setHours(date_time.substring(11,13));\n  d.setMinutes(date_time.substring(14,16));\n\n  return d;\n}\n\nexport function setCityURL(city_name, path){\n  var pathname = \"/admin/\"+path.replace(\":city\", city_name.toLowerCase());\n // browserHistory.push(pathname);\n}\n\nexport function changeURL(city_name, keyword){\n  var pathname = \"/admin/\"+city_name.toLowerCase()+\"/\"+keyword;\n  //browserHistory.push(pathname);\n}\n\n//title, summary, details, severity, dismissible, autoDismiss, appendToId\nexport function createAlert(alert_data) {\n  //https://codepen.io/codysechelski/pen/dYVwjb?q=alert&limit=all&type=type-pens\n  if(alert_data.type == undefined || !alert_data.type){\n    alert_data.class = 'success';\n  } else {\n    alert_data.class = alert_data.type;\n  }\n  if(alert_data.dismissible == undefined){\n    alert_data.dismissible = true;\n  }\n  if(alert_data.autoDismiss == undefined){\n    alert_data.autoDismiss = true;\n  }\n\n\n  var iconMap = {\n    info: \"fa fa-info-circle\",\n    success: \"fa fa-thumbs-up\",\n    warning: \"fa fa-exclamation-triangle\",\n    danger: \"fa ffa fa-exclamation-circle\"\n  };\n\n  var iconAdded = false;\n\n  var alertClasses = [\"alert\", \"animated\", \"flipInX\"];\n  alertClasses.push(\"alert-\" + alert_data.class.toLowerCase());\n\n\n  if (alert_data.dismissible != undefined && alert_data.dismissible) {\n    alertClasses.push(\"alert-dismissible\");\n  }\n\n  var msgIcon = $(\"<i />\", {\n    \"class\": iconMap[alert_data.class] // you need to quote \"class\" since it's a reserved keyword\n  });\n\n  var msg = $(\"<div />\", {\n    \"class\": alertClasses.join(\" \") // you need to quote \"class\" since it's a reserved keyword\n  });\n  if (alert_data.title) {\n    var msgTitle = $(\"<h4 />\", {\n      html: alert_data.title\n    }).appendTo(msg);\n\n    if(!iconAdded){\n      msgTitle.prepend(msgIcon);\n      iconAdded = true;\n    }\n  } else {\n    var msgTitle = $(\"<h4 />\", {\n      html: 'Success'\n    }).appendTo(msg);\n\n    if(!iconAdded){\n      msgTitle.prepend(msgIcon);\n      iconAdded = true;\n    }\n  }\n\n  if (alert_data.sub_title != undefined && alert_data.sub_title) {\n    var msgSummary = $(\"<strong />\", {\n      html: alert_data.sub_title\n    }).appendTo(msg);\n\n    if(!iconAdded){\n      msgSummary.prepend(msgIcon);\n      iconAdded = true;\n    }\n  }\n\n  if (alert_data.message) {\n    var msgDetails = $(\"<p />\", {\n      html: alert_data.message\n    }).appendTo(msg);\n\n    if(!iconAdded){\n      msgDetails.prepend(msgIcon);\n      iconAdded = true;\n    }\n  }\n\n\n  if (alert_data.dismissible) {\n    var msgClose = $(\"<span />\", {\n      \"class\": \"close\", // you need to quote \"class\" since it's a reserved keyword\n      \"data-dismiss\": \"alert\",\n      html: \"<i class='fa fa-times-circle'></i>\"\n    }).appendTo(msg);\n  }\n\n  //$('#' + appendToId).prepend(msg);\n  $('#pageMessages').prepend(msg);\n  if (alert_data.play_sound != undefined && alert_data.play_sound == true) {\n    document.getElementById('sound').play();\n  }\n  if(alert_data.autoDismiss){\n    setTimeout(function(){\n      msg.addClass(\"flipOutX\");\n      setTimeout(function(){\n        msg.remove();\n      },1000);\n    }, 5000);\n  }\n}\n\nexport function getFullYear() {\n  var d = new Date();\n  return d.getFullYear();\n}\n\nexport function formatDateForDifference(date) {\n  var d = new Date(date), month = '' + (d.getMonth() + 1), day = '' + d.getDate(), year = d.getFullYear();\n  if (month.length < 2) month = '0' + month;\n  if (day.length < 2) day = '0' + day;\n  return [year, month, day].join('-');\n}\n\nexport function wildcardMatch(sSource, sMatch) {\n  var wildcardRight = false;\n  if (sMatch.charAt(sMatch.length - 1) == \"*\"){\n    wildcardRight = true;\n    sMatch = sMatch.substring(0, sMatch.length - 1);\n  }\n\n  if (wildcardRight){\n    return (sSource.indexOf(sMatch) == 0);\n  } else {\n    return sSource == sMatch;\n  }\n}\n\nexport function getTodayString(option) {\n  var d = new Date();\n  var weekday = new Array(7);\n  weekday[0]=  \"sunday\";\n  weekday[1] = \"monday\";\n  weekday[2] = \"tuesday\";\n  weekday[3] = \"wednesday\";\n  weekday[4] = \"thursday\";\n  weekday[5] = \"friday\";\n  weekday[6] = \"saturday\";\n  return weekday[d.getDay()];\n}\n","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\library\\elements\\modal\\container\\redux_modal.js",[],"H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\library\\elements\\modal\\container\\emitter.js",[],"H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\library\\elements\\modal\\container\\modal_reducer.js",[],"H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\account\\model_forgotten.js",["384","385"],"\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link,withRouter  } from \"react-router-dom\";\nimport { Field, reduxForm } from 'redux-form';\nimport { forgotPassword ,validationNull} from '../account/account_action';\nimport { input } from '../library/elements';\n\nclass ModalAccountFrogotPassword extends Component {\n\n  constructor(props) {\n    super(props);\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.removeModal = this.handleFormSubmit.bind(this);\n   this.state = { isButtonLoading:false };\n  }\n  componentDidMount() {\n    this.props.validationNull();\n  }\n\n  handleFormSubmit(formProps) {\n  this.state = { isButtonLoading:true };\n    var _this = this;\n    this.props.forgotPassword(formProps, function(err, result) {\n      if(result) {\n        _this.setState({ isLoading: false });\n        _this.props.removeModal();\n        _this.props.history.push(\"/customer\");\n      }\n    });\n  }\n  renderAlert() {\n    if(this.props.errorMessage) {\n      return (\n        <div className=\"alert alert-danger\">\n        <strong>Oops! </strong> {this.props.errorMessage}\n        </div>\n      )\n    }\n  }\n  goSignup() {\n  this.props.removeModal();\n  this.props.history.push(\"/customer\");\n}\n  render() {\n    const { handleSubmit ,submitting ,errorMessage } = this.props;\n        var isButtonLoading = this.state.isButtonLoading;\n\n\n        if(errorMessage){\n          isButtonLoading = false;\n        }\n    return (\n      <div className=\"account-forgotten model-card cm-frm\">\n      <div className=\"account-banner\">\n        <div className=\"cp-1\">\n          <div className=\"row\">\n            <div className=\"col-sm-12\">\n              <div className=\"well\">\n                <form onSubmit={handleSubmit(this.handleFormSubmit.bind(this))}>\n                  {this.renderAlert()}\n                  <div className=\"form-group row\">\n                    <div className=\"col-sm-12\">\n                      <h6>Enter your email address to receive  a new password</h6>\n                    </div>\n                    <div className=\"col-sm-12 position-relative has-icon-left\">\n                      <Field name=\"email\" type=\"text\" icon=\"fa fa-envelope-o\" component={input} label=\"Email\"/>\n                    </div>\n                  </div>\n                  <div className=\"form-group row\">\n                    <div className=\"col-sm-12\">\n                      <button action=\"forgotpassword\" className=\"btn btn-primary btn-block\" disabled={isButtonLoading}>\n                        <i className=\"fa fa-paper-plane\"></i> {isButtonLoading ? 'Loading...' : 'Send'}\n                      </button>\n                    </div>\n                  </div>\n                  <div className=\"form-group row\">\n                    <div className=\"col-sm-12 text-center\">\n                      New to Mysscrow? <Link className=\"form-link\" onClick={() => this.goSignup()}>Register Now</Link>\n                    </div>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n   </div>\n  );\n  }\n}\n\nfunction validate(formProps) {\n  const errors = {}\n\n  if (!formProps.email) {\n    errors.email = 'Required Email'\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(formProps.email)) {\n    errors.email = 'Invalid Email Address'\n  }\n\n  return errors\n}\n\nfunction mapStateToProps(state) {\n  return {\n    errorMessage: state.account.error,\n  }\n}\n\nModalAccountFrogotPassword = reduxForm({\n  form: 'forgotpassword',\n  validate: validate\n})(ModalAccountFrogotPassword);\n\nexport default withRouter(connect(mapStateToProps, { forgotPassword,validationNull })(\n  (ModalAccountFrogotPassword)\n  ));","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\library\\elements\\modal\\container\\modal_action.js",[],"H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\library\\elements\\modal\\container\\modal.js",[],"H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\account\\modal_edit_profile.js",["386","387","388","389","390","391","392","393"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Field, reduxForm } from \"redux-form\";\nimport {  updateCustomerProfile } from \"../account/account_action\";\nimport { input } from \"../library/elements\";\nimport { IMAGE_URL } from \"../../system/config\";\nclass UpdateProfile extends Component {\n  constructor(props) {\n    super(props);\n    this.handleProfileSubmit = this.handleProfileSubmit.bind(this);\n    this.removeModal = this.handleProfileSubmit.bind(this);\n    this.state = {\n      isLoading: false,\n      isPasswordText: false,\n      isPasswordConfirmText: false,\n    };\n  }\n  handleProfileSubmit(formProps) {\n    this.state = { isLoading: true };\n    const data = new FormData();\n    var keyName;\n    var i = 0;\n    var image = formProps.image;\n    delete formProps.image;\n    if (image) {\n      data.append(\"file\", image[0]);\n    }\n    for (var key in formProps) {\n      data.append(key, JSON.stringify(formProps[key]));\n    }\n    var _this = this;\n    this.props.updateCustomerProfile(data, function (err, result) {\n      if (result) {\n        _this.props.removeModal();\n      }\n    });\n  }\n  closeModal() {\n    this.props.removeModal();\n  }\n\n  addDefaultSrc(ev) {\n    return (ev.target.src =\n      \"https://www.w3schools.com/howto/img_avatar.png\");\n  }\n\n  renderPasswordMask(getState) {\n    if (this.state[getState] == false) {\n      this.setState({ [getState]: true });\n    } else {\n      this.setState({ [getState]: false });\n    }\n  }\n  renderConfirmPasswordMask(getState) {\n    if (this.state[getState] == false) {\n      this.setState({ [getState]: true });\n    } else {\n      this.setState({ [getState]: false });\n    }\n  }\n\n  render() {\n    const { handleSubmit, errorMessage } = this.props;\n    var { isLoading, isPasswordText, isPasswordConfirmText } = this.state;\n\n    if (errorMessage) {\n      isLoading = false;\n    }\n\n    return (\n      <div className=\"profile-modal model-card\">\n        <form\n          onSubmit={handleSubmit(this.handleProfileSubmit.bind(this))}\n          className=\"df-form\"\n        >\n          {errorMessage ? (\n            <fieldset className=\"form-group\">\n              <div className=\"col-sm-12 card-body\">\n                <div className=\"alert alert-danger\">{errorMessage}</div>\n              </div>\n            </fieldset>\n          ) : null}\n\n          <div className=\"cp-1\">\n            <div className=\"form-group row\">\n              <div className=\"col-sm-12 text-center\">\n                <Field\n                  name=\"image\"\n                  component={(image) => {\n                    var showImage = null;\n                    if (image.input.value && image.input.value !== \"\") {\n                      showImage = (\n                        <div className=\"pro-image\">\n                          <img\n                            onError={this.addDefaultSrc}\n                            src={\n                              image.input.value.dataUrl\n                                ? image.input.value.dataUrl\n                                : image.input.value\n                            }\n                            className=\"img-thumbnail img-raised rounded-circle\"\n                            width=\"100\"\n                            height=\"100\"\n                          />\n                          <div className=\"fileUpload md-btn btn btn-primary\">\n                            <span>Upload Profile Image</span>\n                            <input\n                              type=\"file\"\n                              name=\"image\"\n                              className=\"ml-2\"\n                              onChange={(e) => {\n                                var files = e.target.files;\n                                let reader = new FileReader();\n                                let file = e.target.files[0];\n                                reader.onload = function (e) {\n                                  var picFile = e.target;\n                                  files.dataUrl = picFile.result;\n                                  image.input.onChange(files);\n                                };\n                                reader.readAsDataURL(file);\n                              }}\n                            />\n                          </div>\n                        </div>\n                      );\n                    }\n                    return (\n                      <div>\n                        {showImage !== null ? (\n                          showImage\n                        ) : (\n                          <div className=\"fileUpload md-btn btn btn-primary\">\n                            <span>Upload Profile Image</span>\n                            <input\n                              type=\"file\"\n                              name=\"image\"\n                              className=\"m-l-20\"\n                              onChange={(e) => {\n                                var files = e.target.files;\n                                let reader = new FileReader();\n                                let file = e.target.files[0];\n                                reader.onload = function (e) {\n                                  var picFile = e.target;\n                                  files.dataUrl = picFile.result;\n                                  image.input.onChange(files);\n                                };\n                                reader.readAsDataURL(file);\n                              }}\n                            />{\" \"}\n                          </div>\n                        )}\n                      </div>\n                    );\n                  }}\n                />\n              </div>\n            </div>\n            <div className=\"form-group row\">\n              <div className=\"col-sm-6\">\n                <Field\n                  name=\"firstname\"\n                  type=\"text\"\n                  component={input}\n                  label=\"First Name\"\n                  className=\"form-control\"\n                />\n              </div>\n              <div className=\"col-sm-6\">\n                <Field\n                  name=\"lastname\"\n                  type=\"text\"\n                  component={input}\n                  label=\"Last Name\"\n                  className=\"form-control\"\n                />\n              </div>\n            </div>\n            <div className=\"form-group row\">\n              <div className=\"col-sm-6 mb-3\">\n                <Field\n                  name=\"email\"\n                  type=\"text\"\n                  component={input}\n                  label=\"Email\"\n                  className=\"form-control\"\n                />\n              </div>\n              <div className=\"col-sm-6\">\n                <Field\n                  name=\"phone\"\n                  type=\"text\"\n                  component={input}\n                  label=\"Mobile or Phone\"\n                  className=\"form-control\"\n                />\n              </div>\n            </div>\n\n            <div className=\"form-group row\">\n              <div className=\"input-group\">\n                {isPasswordText ? (\n                  <Field\n                    name=\"password\"\n                    type=\"text\"\n                    component={input}\n                    label=\"* Password\"\n                    className=\"form-control\"\n                  />\n                ) : (\n                  <Field\n                    name=\"password\"\n                    type=\"password\"\n                    component={input}\n                    label=\"* Password\"\n                    className=\"form-control\"\n                  />\n                )}\n                <button\n                  type=\"button\"\n                  className=\"input-group-text\"\n                  onClick={() => this.renderPasswordMask(\"isPasswordText\")}\n                >\n                  {isPasswordText ? (\n                    <i className=\"fa fa-eye\"></i>\n                  ) : (\n                    <i className=\"fa fa-eye-slash\"></i>\n                  )}\n                </button>\n              </div>\n            </div>\n\n            <div className=\"form-group row\">\n              <div className=\"col-sm-9\">\n                <div className=\"d-grid\">\n                <button\n                  action=\"updateprofile\"\n                  type=\"submit\"\n                  disabled={isLoading}\n                  className=\"md-btn btn btn btn-primary btn-block mb-2\"\n                >\n                  <i className=\"fa fa-pencil-circle\"></i>{\" \"}\n                  {isLoading ? \"Loading...\" : \"Update\"}\n                </button>\n              </div>\n              </div>\n              <div className=\"col-sm-3\">\n              <div className=\"d-grid\">\n                <button\n                  onClick={() => this.closeModal()}\n                  type=\"button\"\n                  className=\"md-btn btn btn-danger btn-block\"\n                >\n                  Cancel\n                </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nfunction validate(formProps) {\n  const errors = {};\n  if (!formProps.firstname) {\n    errors.firstname = \"Required First Name\";\n  }\n  if (!formProps.lastname) {\n    errors.lastname = \"Required Last Name\";\n  }\n  if (!formProps.email) {\n    errors.email = \"Required Email\";\n  } else if (\n    !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(formProps.email)\n  ) {\n    errors.email = \"Invalid Email Address\";\n  }\n\n  if (!formProps.telephone) {\n    errors.telephone = \"Required Mobile\";\n  } else {\n    if (isNaN(formProps.telephone)) {\n      errors.telephone = \"Mobile number must be numeric only!\";\n    } else if (formProps.telephone.length > 10) {\n      errors.telephone = \"Mobile number must be up to 10 digit!\";\n    }\n  }\n\n  if (\n    formProps.password &&\n    formProps.confirm_password &&\n    formProps.password != formProps.confirm_password\n  ) {\n    errors.confirm_password = \"Confirm must match to Password\";\n  }\n\n  return errors;\n}\n\nfunction mapStateToProps(state) {\n  var iniCus = {};\n  if (state.account.profile) {\n    iniCus = state.account.profile;\n    iniCus.image = IMAGE_URL + state.account.profile.customer_image;\n  }\n  return {\n    initialValues: iniCus,\n    errorMessage: state.account.error,\n  };\n}\n\nUpdateProfile = reduxForm({\n  form: \"updateprofile\",\n  validate: validate,\n})(UpdateProfile);\n\nexport default connect(mapStateToProps, { updateCustomerProfile })(\n  UpdateProfile\n);\n","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\account\\customer.jsx",[],"H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\system\\route_customer.js",[],"H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\account\\header.js",["394","395","396","397","398","399"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { modal } from \"../library/elements/modal\";\r\nimport cookie from \"react-cookie\";\r\nimport { Loading, lib } from \"../library/elements\";\r\nimport UpdateProfile from \"../account/modal_edit_profile\";\r\nimport { IMAGE_URL } from \"../../system/config\";\r\nimport AccountLogin from \"../account/signin\";\r\n\r\nclass CustomerHeader extends Component {\r\n\r\n  componentDidMount() {\r\n    if (!cookie.load(\"customer\")) {\r\n      this.props.history.push(\"/customer\");\r\n    }\r\n  }\r\n\r\n  addEditProfileModal() {\r\n    modal.add(UpdateProfile, {\r\n      title: \"Edit Profile\",\r\n      size: \"large\",\r\n      closeOnOutsideClick: false,\r\n      hideCloseButton: false,\r\n      modalId: \"edit-profile\",\r\n    });\r\n  }\r\n  render() {\r\n    const { account_profile } = this.props;\r\n \r\n    var image;\r\n    if (\r\n      account_profile &&\r\n      account_profile.customer_image != undefined &&\r\n      account_profile.customer_image != null &&\r\n      account_profile.customer_image != \"\"\r\n    ) {\r\n      image = IMAGE_URL + \"/\" + account_profile?.customer_image;\r\n    } else {\r\n      image = \"https://www.w3schools.com/howto/img_avatar.png\";\r\n    }\r\n    if (!account_profile) {\r\n      return (\r\n        <div className=\"container-fluid account-box m-b-1\">\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-5\"></div>\r\n            <div className=\"col-sm-1\">\r\n              <Loading />\r\n            </div>\r\n            <div className=\"col-sm-5\"></div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    var currentLink = this.props.location.pathname;\r\n    return (\r\n      <div className=\"rounded-3 profile-menu card bg-light\">\r\n        <div className=\"px-4 py-4 d-none d-xl-block\">\r\n          <div className=\"d-block d-sm-flex align-items-center text-center1\">\r\n            <div className=\"avatar-card\">\r\n              <img\r\n                className=\"img-thumbnail img-raised rounded-circle\"\r\n                src={image}\r\n                width=\"100px\"\r\n              />\r\n            </div>\r\n            <div className=\"ps-sm-4 text-center text-sm-start\">\r\n              <h5 className=\"mb-1\">\r\n                {lib.ucwords(\r\n                  account_profile.firstname + \" \" + account_profile.lastname\r\n                )}\r\n              </h5>\r\n              <div className=\"p mb-0 fs-ms\">{account_profile.email}</div>\r\n              <div className=\"p mb-0 fs-ms\">{account_profile.telephone}</div>\r\n              <button\r\n                className=\"btn btn-outline-primary btn-sm mt-2\"\r\n                onClick={() => this.addEditProfileModal()}\r\n                type=\"button\"\r\n              >\r\n                <i className=\"fa fa-pencil me-2\"></i>Edit\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <nav className=\"mobile-customer-header navbar navbar-expand-lg navbar-light d-xl-none\">\r\n          <div className=\"container-xl p-0 py-2\">\r\n            <div className=\"d-flex align-items-center\">\r\n              <button\r\n                className=\"navbar-toggler me-2 collapsed\"\r\n                type=\"button\"\r\n                data-bs-toggle=\"collapse\"\r\n                data-bs-target=\"#accountMenu\"\r\n                aria-controls=\"accountMenu\"\r\n                aria-expanded=\"true\"\r\n                aria-label=\"Menu\"\r\n              >\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n              </button>\r\n              <div className=\"ps-sm-4 text-sm-start\">\r\n                <h5 className=\"mb-1\">\r\n                  {lib.ucwords(\r\n                    account_profile.firstname + \" \" + account_profile.lastname\r\n                  )}\r\n                </h5>\r\n                <div className=\"p mb-0 fs-ms\">{account_profile.email}</div>\r\n                <div className=\"p mb-0 fs-ms\">{account_profile.telephone}</div>\r\n                <button\r\n                  className=\"btn btn-outline-primary btn-sm mt-2\"\r\n                  onClick={() => this.addEditProfileModal()}\r\n                  type=\"button\"\r\n                >\r\n                  <i className=\"fa fa-pencil me-2\"></i>Edit\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n\r\n        <div className=\"d-lg-block collapse\" id=\"accountMenu\">\r\n          <div className=\"d-flex align-items-center justify-content-between py-3 px-4 bg-secondary d-xl-none\">\r\n            <h5 className=\"m-0\">Account Menu</h5>\r\n            <button\r\n              className=\"btn-close collapsed\"\r\n              id=\"btnCloseAccountMenu\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#accountMenu\"\r\n              aria-controls=\"accountMenu\"\r\n              aria-expanded=\"false\"\r\n              aria-label=\"Menu\"\r\n            ></button>\r\n          </div>\r\n          <Link\r\n            className={\r\n              \"account-menu-item d-flex align-items-center nav-link-style\" +\r\n              (currentLink == \"/account\" ? \" active \" : \"\")\r\n            }\r\n            to=\"/account\"\r\n          >\r\n            <i className=\"fa fa-laptop fs-lg opacity-60 me-2\"></i>Dashboard\r\n          </Link>\r\n          <Link\r\n            className={\r\n              \"account-menu-item d-flex align-items-center nav-link-style\" +\r\n              (currentLink == \"/account/job\" ||\r\n              currentLink.indexOf(\"/account/job\") >= 0\r\n                ? \" active\"\r\n                : \"\")\r\n            }\r\n            to=\"/account/job\"\r\n          >\r\n            <i className=\"fa fa-list fs-lg opacity-60 me-2\"></i>Jobs\r\n          </Link>\r\n\r\n          <Link\r\n            className=\"account-menu-item d-flex align-items-center nav-link-style\"\r\n            to=\"/logout\"\r\n          >\r\n            <i className=\"fa fa-power-off   fs-lg opacity-60 me-2\"></i>\r\n            Logout\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    account_profile: state.account.profile,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(CustomerHeader);\r\n","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\library\\elements\\pills_box.js",["400","401"],"H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\account\\job_add.js",["402","403","404","405","406","407"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { Field, FieldArray, reduxForm } from \"redux-form\";\nimport { input, InputImage, Loading, textarea,lib } from \"../library/elements\";\nimport { addCustomerJob, nullJobForm,validation } from \"./account_action\";\n\nclass AccountJobAdd extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n      set_job_phase: 0,\n    };\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.renderJobPhases = this.renderJobPhases.bind(this);\n  }\n\n  handleFormSubmit(formProps) {\n    this.setState({ isLoading: true });\n    var _this = this;\n    var data = new FormData();\n\n    var phases = formProps[\"phase\"];\n    let dataPhaseArr = [];\n    if (phases && phases != undefined && phases.length > 0) {\n      for (let [index, val] of phases.entries() || []) {\n        dataPhaseArr.push({\n          description: val.description,\n          amount: val.amount,\n          phase_no: index + 1,\n        });\n        for (var i in val[\"image\"]) {\n          if (val[\"image\"][i][[\"image\"]] !== undefined) {\n            data.append(\"phase[\" + index + \"]\", val[\"image\"][i][\"image\"][0]);\n          }\n        }\n      }\n    }\n\n    var formData = {};\n    formData.job_title = formProps.job_title || \"\";\n    formData.job_description = formProps.job_description || \"\";\n    formData.job_location = formProps.job_location || \"\";\n    formData.job_amount = formProps.job_amount || 0;\n    formData.job_phase = formProps.total_phase || \"\";\n    if (dataPhaseArr && dataPhaseArr != undefined && dataPhaseArr.length > 0) {\n      formData.phase = dataPhaseArr;\n      if (window.performance) {\n        if (performance.getEntriesByType(\"navigation\")[0].type == \"reload\") {\n          this.props.history.push(\"/account/job\");\n        }\n      }\n    }\n    data.append(\"phase\", JSON.stringify(formData));\n    this.props.addCustomerJob(data, function (err, result) {\n      if (result) {\n        _this.setState({ isLoading: false });\n        _this.props.history.push(\"/account/job\");\n      }\n    });\n  }\n\n  renderJobPhases(addMoreImage) {\n    if (\n      this.state.set_job_phase &&\n      this.state.set_job_phase != undefined &&\n      this.state.set_job_phase > 0\n    ) {\n      let generate_phase = Array.from(\n        Array(parseInt(this.state.set_job_phase)).keys()\n      );\n\n      return generate_phase.map((phase, index) => {\n        return (\n          <div\n            className=\"card card-add-phase mt-2 mb-2\"\n            key={\"service.card.\" + index}\n          >\n            <div className=\"card-header mb-1\">\n              <strong> Phase - {phase + 1} </strong>\n            </div>\n            <div className=\"card-body\">\n              <fieldset className=\"form-group row\">\n                <div className=\"col-sm-12\">\n                  <Field\n                    name={\"phase[\" + index + \"][description]\"}\n                    type=\"text\"\n                    component={textarea}\n                    className=\"form-control\"\n                    label=\"Phase Description\"\n                  />\n                </div>\n              </fieldset>\n              <fieldset className=\"form-group row\">\n                <div className=\"col-sm-12\">\n                  <Field\n                    name={\"phase[\" + index + \"][amount]\"}\n                    type=\"text\"\n                    component={input}\n                    className=\"form-control\"\n                    label=\"Phase Amount\"\n                  />\n                </div>\n              </fieldset>\n              <div className=\"card\">\n                <div className=\"card-header\">Images </div>\n                <div className=\"card-stripe p-2\">\n                  <FieldArray\n                    name={\"phase[\" + index + \"][image]\"}\n                    component={addMoreImage}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n      });\n    } else {\n      return (\n        <div className=\"mt-3 mb-3 card-step\">\n          <div className=\"row\">\n            <div className=\"col-sm-3\"></div>\n            <div className=\"col-sm-6 mobile-center\">\n              <h4>Step 1 : Add Your Multiple Services</h4>\n              <h4>Step 2 : Add Related Images</h4>\n              <h4>Step 3 : Create Ticket</h4>\n            </div>\n            <div className=\"col-sm-3\"></div>\n          </div>\n        </div>\n      );\n    }\n  }\n  render() {\n    const { handleSubmit, errorMessage } = this.props;\n    var { isLoading, set_job_phase } = this.state;\n\n    if (errorMessage) {\n      isLoading = false;\n    }\n\n    const addMoreImage = ({ fields, meta: { touched, error } }) => (\n      <ul className=\"card-stripe-ul\">\n        {fields.map((item, index) => (\n          <li key={\"add_phase_\" + index} className=\"card-stripe-ul-li\">\n            <span\n              className=\"badge badge-danger remove-image text-danger\"\n              onClick={() => fields.remove(index)}\n            >\n              <i className=\"fa fa-close\"></i>\n            </span>\n            <Field\n              name={`${item}.image`}\n              type=\"text\"\n              component={InputImage}\n              label=\"Image\"\n              className=\"form-control\"\n            />\n          </li>\n        ))}\n        <li\n          className=\"card-stripe-ul-li add_image\"\n          onClick={() => fields.push({})}\n        >\n          <i className=\"fa fa-plus-circle fa-5x\"></i>\n        </li>\n      </ul>\n    );\n\n    return (\n      <div id=\"page\" className=\" job-add-page container\">\n        <div className=\"card\">\n          {isLoading ? <Loading /> : null}\n          <div className=\"card-header\">\n            <h5>Create Job</h5>\n          </div>\n          <div className=\"card-body\">\n            <form onSubmit={handleSubmit(this.handleFormSubmit.bind(this))}>\n              {errorMessage ? (\n                <fieldset className=\"form-group\">\n                  <div className=\"col-sm-12 card-body\">\n                    <div className=\"alert alert-danger\">{errorMessage}</div>\n                  </div>\n                </fieldset>\n              ) : null}\n\n              <fieldset className=\"form-group row\">\n                <div className=\"col-sm-12\">\n                  <Field\n                    name=\"job_title\"\n                    type=\"text\"\n                    component={input}\n                    isRequired={true}\n                    label=\"Job Title\"\n                  />\n                </div>\n              </fieldset>\n              <fieldset className=\"form-group row\">\n                <div className=\"col-sm-12\">\n                  <Field\n                    name=\"job_description\"\n                    type=\"text\"\n                    component={textarea}\n                    isRequired={true}\n                    label=\"Job Description\"\n                  />\n                </div>\n              </fieldset>\n\n              <fieldset className=\"form-group row\">\n                <div className=\"col-sm-12\">\n                  <Field\n                    name=\"job_location\"\n                    type=\"text\"\n                    component={input}\n                    isRequired={true}\n                    label=\"Job Location\"\n                  />\n                </div>\n              </fieldset>\n              <fieldset className=\"form-group row\">\n                <div className=\"col-sm-12\">\n                  <Field\n                    name=\"job_amount\"\n                    type=\"text\"\n                    component={input}\n                    isRequired={true}\n                    label=\"Job Amount\"\n                  />\n                </div>\n              </fieldset>\n              <fieldset className=\"form-group row\">\n                <div className=\"col-sm-12\">\n                  <Field\n                    name=\"total_phase\"\n                    component={(total_phase) => (\n                      <div>\n                        <select\n                          name=\"total_phase\"\n                          className=\"form-control\"\n                          value={total_phase.input.value}\n                          onChange={(event) => {\n                            this.setState({\n                              set_job_phase: event.target.value,\n                            });\n                            total_phase.input.onChange(event.target.value);\n                          }}\n                        >\n                          <option value=\"\">-- Select Phase --</option>\n                          <option value=\"1\">1</option>\n                          <option value=\"2\">2</option>\n                          <option value=\"3\">3</option>\n                          <option value=\"4\">4</option>\n                          <option value=\"5\">5</option>\n                        </select>\n                        {total_phase.meta.touched &&\n                          ((total_phase.meta.error && (\n                            <div className=\"error\">\n                              {total_phase.meta.error}\n                            </div>\n                          )) ||\n                            (total_phase.meta.warning && (\n                              <div className=\"error\">\n                                {total_phase.meta.warning}\n                              </div>\n                            )))}\n                      </div>\n                    )}\n                  />\n                </div>\n              </fieldset>\n\n              {/* start phase block */}\n\n              {set_job_phase && set_job_phase != undefined && set_job_phase > 0\n                ? this.renderJobPhases(addMoreImage)\n                : null}\n\n              {/* end phase block */}\n              <div className=\"form-group row\">\n                <div className=\"col-sm-9\">\n                  <div className=\"d-grid\">\n                    <button\n                      action=\"addJob\"\n                      type=\"submit\"\n                      disabled={isLoading}\n                      className=\"md-btn btn btn btn-primary btn-block mb-2\"\n                    >\n                      <i className=\"fa fa-pencil-circle\"></i>{\" \"}\n                      {isLoading ? \"Loading...\" : \"Add\"}\n                    </button>\n                  </div>\n                </div>\n                <div className=\"col-sm-3\">\n                  <div className=\"d-grid\">\n                    <Link\n                      to=\"/account\"\n                      className=\"md-btn btn btn-danger btn-block\"\n                    >\n                      Cancel\n                    </Link>\n                  </div>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction validate(formProps) {\n  const errors = {};\n  if (!formProps.job_title) {\n    errors.job_title = \"Required Job Title\";\n  }\n  if (!formProps.job_description) {\n    errors.job_description = \"Required Job Description\";\n  }\n  if (!formProps.job_location) {\n    errors.job_location = \"Required Job location\";\n  }\n  if (!formProps.total_phase) {\n    errors.total_phase = \"Select Job Phase\";\n  }\n  if (isNaN(formProps.job_amount)) {\n    errors.job_amount = \"Job Amount number must be numeric only!\";\n  }\n  return errors;\n}\n\nAccountJobAdd = reduxForm({\n  form: \"addJob\",\n  enableReinitialize: true,\n  validate: validate,\n})(AccountJobAdd);\n\nfunction mapStateToProps(state) {\n  return {\n    errorMessage: state.account.error,\n  };\n}\n\nexport default withRouter(\n  connect(mapStateToProps, {validation, addCustomerJob, nullJobForm })(\n    AccountJobAdd\n  )\n);\n","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\account\\job.js",["408","409","410","411","412","413","414","415","416","417","418"],"H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\account\\job_info.js",["419","420","421","422","423","424","425"],"H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\account\\model_edit_contractor_quote.js",["426","427","428","429","430"],"H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\system\\route_contractor.js",[],"H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\contractor\\contractor_reducer.js",["431","432"],"import update from \"react-addons-update\";\nimport {\n  CONTRACTOR_LOGIN_PHONE,\n  AUTHENTICATE_CONTRACTOR,\n  UNAUTHENTICATE_CONTRACTOR,\n  FETCH_CONTRACTOR_ACCOUNT_PROFILE,\n  FETCH_CONTRACTOR_TICKET_TOTAL,\n  FETCH_CONTRACTOR_JOB_LIST,\n  FETCH_STATUSWISE_JOBS,\n  FETCH_JOB_INFO,\n  GET_JOB_STATUS,\n  GET_CUSTOMER_REQUESTS,\n  FETCH_CONTRACTOR_JOB_COUNTERS,\n  VALIDATION_ERROR,\n} from \"./contractor_action\";\n\nconst INITIAL_STATE = {};\nexport default function (state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case CONTRACTOR_LOGIN_PHONE:\n      return { ...state, login_phone: action.payload };\n    case AUTHENTICATE_CONTRACTOR:\n      return {\n        ...state,\n        error: \"\",\n        authenticated: true,\n        token: action.payload,\n      };\n    case UNAUTHENTICATE_CONTRACTOR:\n      localStorage.removeItem(\"token\");\n      return { ...state, error: \"\", authenticated: false, token: false };\n    case FETCH_CONTRACTOR_ACCOUNT_PROFILE:\n      return { ...state, contractor_profile: action.payload.data };\n    case FETCH_CONTRACTOR_JOB_LIST:\n      return { ...state, job_list: action.payload.data };\n    case FETCH_CONTRACTOR_TICKET_TOTAL:\n      return { ...state, job_total: action.payload.data.total };\n    case FETCH_STATUSWISE_JOBS:\n      return { ...state, filter_job_status: action.payload.data };\n    case FETCH_JOB_INFO:\n      return { ...state, job_info: action.payload.data };\n    case GET_JOB_STATUS:\n      return { ...state, job_status: action.payload.data };\n    case GET_CUSTOMER_REQUESTS:\n      return { ...state, job_customer_requests: action.payload.data };\n    case FETCH_CONTRACTOR_JOB_COUNTERS:\n      return { ...state, job_contractor_counters: action.payload.data };\n\n    case VALIDATION_ERROR:\n      return { ...state, error: action.payload };\n    default:\n      return state;\n  }\n}\n","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\contractor\\signup.js",["433","434"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { withRouter } from \"react-router-dom\";\nimport { input, LoadingLarge } from '../library/elements';\nimport { register } from \"./contractor_action\";\nclass Signup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n      \n      isPasswordConfirmText: false,\n    };\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n  }\n\n  componentWillMount() {\n    if (this.props.authenticated) {\n      this.props.history.push(\"/contractor_otp\");\n    }\n  }\n\n  componentWillReceiveProps() {\n    this.state = { isLoading: false };\n  }\n\n  handleFormSubmit(formProps) {\n    this.setState({ isLoading: true });\n    var _this = this;\n    this.props.register(formProps, function (err, result) {\n      _this.props.history.push(\"/contractor_otp\");\n    });\n  }\n\n  renderPasswordMask(getState) {\n    if (this.state[getState] === false) {\n      this.setState({ [getState]: true });\n    } else {\n      this.setState({ [getState]: false });\n    }\n  }\n  renderConfirmPasswordMask(getState) {\n    if (this.state[getState] === false) {\n      this.setState({ [getState]: true });\n    } else {\n      this.setState({ [getState]: false });\n    }\n  }\n\n  render() {\n    const { handleSubmit } = this.props;\n    var { isLoading, isPasswordText, isPasswordConfirmText } = this.state;\n\n    return (\n      <div id=\"content-container\" className=\"cm-frm signup pt-5 pb-5\">\n        {isLoading ? <LoadingLarge /> : \"\"}\n        <div className=\"card\">\n          <div className=\"card-header bg-white\">\n            <h5 className=\"m-0\"> Sign up</h5>\n          </div>\n          <form\n            onSubmit={handleSubmit(this.handleFormSubmit.bind(this))}\n            className=\"signup-form df-form\"\n          >\n            <div className=\"card-body\">\n              <div className=\"row form-group\">\n                <div className=\"col-sm-6\">\n                  <Field\n                    name=\"firstname\"\n                    type=\"text\"\n                    component={input}\n                    label=\"* First Name\"\n                    isBorderError={true}\n                    className=\"form-control\"\n                  />\n                </div>\n                <div className=\"col-sm-6\">\n                  <Field\n                    name=\"lastname\"\n                    type=\"text\"\n                    component={input}\n                    label=\"* Last Name\"\n                    isBorderError={true}\n                    className=\"form-control\"\n                  />\n                </div>\n              </div>\n              <div className=\"row form-group\">\n                <div className=\"col-sm-6 mb-3\">\n                  <Field\n                    name=\"email\"\n                    type=\"text\"\n                    component={input}\n                    label=\"* Email\"\n                    isBorderError={true}\n                    className=\"form-control\"\n                  />\n                </div>\n                <div className=\"col-sm-6\">\n                  <Field\n                    name=\"phone\"\n                    type=\"text\"\n                    component={input}\n                    label=\"* Mobile or Phone\"\n                    isBorderError={true}\n                    className=\"form-control\"\n                  />\n                </div>\n              </div>\n              <div className=\"row form-group\">\n                <div className=\"col-sm-12\">\n                  <Field\n                    name=\"address\"\n                    type=\"text\"\n                    component={input}\n                    label=\"* Address\"\n                    isBorderError={true}\n                    className=\"form-control\"\n                  />\n                </div>\n              </div>\n              <div className=\"row form-group\">\n                <div className=\"col-sm-12\">\n                  <Field\n                    name=\"skill\"\n                    type=\"text\"\n                    component={input}\n                    label=\"Skill\"\n                    isBorderError={true}\n                    className=\"form-control\"\n                  />\n                </div>\n              </div>\n              <div className=\"row form-group\">\n                <div className=\"col-sm-12\">\n                  <Field\n                    name=\"website\"\n                    type=\"text\"\n                    component={input}\n                    label=\"Website\"\n                    isBorderError={true}\n                    className=\"form-control\"\n                  />\n                </div>\n              </div>\n              <div className=\" row mb-3\">\n                <div className=\"col-sm-6 form-group\">\n                  <div className=\"input-group\">\n                    {isPasswordText ? (\n                      <Field\n                        name=\"password\"\n                        type=\"text\"\n                        component={input}\n                        label=\"* Password\"\n                        className=\"form-control\"\n                      />\n                    ) : (\n                      <Field\n                        name=\"password\"\n                        type=\"password\"\n                        component={input}\n                        label=\"* Password\"\n                        className=\"form-control\"\n                      />\n                    )}\n                    <button\n                      type=\"button\"\n                      className=\"input-group-text\"\n                      onClick={() => this.renderPasswordMask(\"isPasswordText\")}\n                    >\n                      {isPasswordText ? (\n                        <i className=\"fa fa-eye\"></i>\n                      ) : (\n                        <i className=\"fa fa-eye-slash\"></i>\n                      )}\n                    </button>\n                  </div>\n                </div>\n                <div className=\"col-sm-6\">\n                  <div className=\"input-group\">\n                    {isPasswordConfirmText ? (\n                      <Field\n                        name=\"confirm_password\"\n                        type=\"text\"\n                        component={input}\n                        label=\"* Confirm Password\"\n                        className=\"form-control\"\n                      />\n                    ) : (\n                      <Field\n                        name=\"confirm_password\"\n                        type=\"password\"\n                        component={input}\n                        label=\"* Confirm Password\"\n                        className=\"form-control\"\n                      />\n                    )}\n                    <button\n                      type=\"button\"\n                      className=\"input-group-text\"\n                      onClick={() =>\n                        this.renderConfirmPasswordMask(\"isPasswordConfirmText\")\n                      }\n                    >\n                      {isPasswordConfirmText ? (\n                        <i className=\"fa fa-eye\"></i>\n                      ) : (\n                        <i className=\"fa fa-eye-slash\"></i>\n                      )}\n                    </button>\n                  </div>\n                </div>\n              </div>\n              <div className=\"form-group\">\n                <div className=\"col-sm-12\">\n                  <button\n                    action=\"signup\"\n                    type=\"submit\"\n                    className=\"btn btn-outline-primary\"\n                  >\n                    SignUp\n                  </button>\n                </div>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction validate(formProps) {\n  const errors = {};\n  if (!formProps.firstname) {\n    errors.firstname = \"Required  First Name\";\n  }\n  if (!formProps.lastname) {\n    errors.lastname = \"Required  Last Name\";\n  }\n  if (!formProps.address) {\n    errors.address = \"Required  Address\";\n  }\n  \n  if (!formProps.email) {\n    errors.email = \"Required Email\";\n  } else if (\n    !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(formProps.email)\n  ) {\n    errors.email = \"Invalid Email Address\";\n  }\n  if (!formProps.phone) {\n    errors.phone = \"Required Mobile\";\n  } else {\n    var phoneno = /^\\d{10}$/;\n    if (isNaN(formProps.phone)) {\n      errors.phone = \"Mobile number must be numeric only!\";\n    } else if (formProps.phone.length < 10) {\n      errors.phone = \"Mobile number must be in 10 digit!\";\n    } else if (!formProps.phone.match(phoneno)) {\n      errors.phone = \"Mobile number must be numeric only!\";\n    }\n  }\n  if (!formProps.password) {\n    errors.password = \"Required Password\";\n  } else if (formProps.password.length < 6) {\n    errors.password = \"Password must more than 6 characters\";\n  }\n  if (!formProps.confirm_password) {\n    errors.confirm_password = \"Required Confirm Password\";\n  }\n  if (formProps.password != formProps.confirm_password) {\n    errors.confirm_password = \"Confirm must match to Password\";\n  }\n\n  return errors;\n}\n\nfunction mapStateToProps(state) {\n  return {\n    authenticated: state.account.authenticated,\n    errorMessage: state.account.error,\n  };\n}\n\nSignup = reduxForm({\n  form: \"signup\",\n  validate: validate,\n})(Signup);\n\nexport default withRouter(connect(mapStateToProps, { register })(Signup));\n","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\contractor\\otp.js",["435","436","437","438"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link,withRouter } from 'react-router-dom';\nimport { Field, reduxForm } from 'redux-form';\nimport { input, Loading } from '../library/elements';\nimport { loginOTP, resendOTP } from './contractor_action';\n\nclass AccountOtp extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { isLoading:false, isError: '', currentPage:\"1\" };\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n  }\n\n  componentWillMount(){\n    if(!this.props.login_phone){\n    this.props.history.push('/contractor_otp_signin');\n    }\n  }\n\n  handleFormSubmit(formProps) {\n    this.setState({ isLoading: true });\n    this.setState({ isError: '' });\n    var _this = this;\n  formProps.phone = this.props.login_phone;\n    this.props.loginOTP(formProps, function(err, result) {\n      if(result.error) {\n        _this.setState({ isLoading: false });\n        _this.setState({ isError: result.error });\n      } else {\n        _this.props.history.push('/contractor_account');\n      }\n    });\n  }\n\n  resendOTP(){\n    this.setState({ isLoading: true });\n    this.setState({ isError: '' });\n    var _this = this;\n    var phone = this.props.login_phone;\n    this.props.resendOTP(phone, function(err, result) {\n      if(result) {\n        _this.props.reset('accountotp');\n        _this.setState({ isLoading: false });\n      }\n    });\n  }\n\n  renderAlert() {\n    if(this.props.errorMessage) {\n      this.setState({ isButtonLoading: false });\n      return (\n        <div className=\"alert alert-danger m-b-1\">\n        <strong>Oops! </strong> {this.props.errorMessage}\n        </div>\n      )\n    }\n  }\n\n  changeCurrentPage(page){\n    this.setState({currentPage : page});\n  }\n\n  render() {\n\n    const { handleSubmit, authenticated, alert, login_phone } = this.props;\n    let isLoading = this.state.isLoading;\n    let isError = this.state.isError;\n    let currentPage = this.state.currentPage;\n\n    return (\n      <div id=\"content-container\" className=\"cm-frm signup pt-5 pb-5\">\n        { isLoading ? <Loading /> : null }\n        <div className=\"account-banner\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-sm-3 hidden-lg-down\"></div>\n              <div className=\"col-sm-6\">\n                <div className=\"card\">\n\n                  <div className=\"card-header text-center\">\n                    <h5 className=\"pseudo_border m-0\">Login with OTP</h5>\n                  </div>\n                  <form onSubmit={handleSubmit(this.handleFormSubmit.bind(this))}>\n                    <div className=\"card-body\">\n                      {\n                        isError\n                        ?\n                        <div className=\"form-group\">\n                          <div className=\"col-sm-12\">\n                            <div className=\"alert alert-warning\">{isError}</div>\n                          </div>\n                        </div>\n                        :\n                        null\n                      }\n                      {this.renderAlert()}\n                      <p className=\"card-text\">\n                        One Time Passcode (OTP) is a numeric code that is only valid for a one time activation when you signup.\n                        The OTP will be sent via SMS to your mobile  phone number as registered with Mysscrow.\n                        It will expire in 2 minutes.\n                        Please enter the OTP below to verify your mobile\n                      </p>\n                        <label><strong>Enter OTP</strong></label>\n                      <div className=\"form-group row\">\n                        <div className=\"col-sm-12 position-relative has-icon-left\">\n                          <Field name=\"otp\" type=\"text\" icon=\"fa fa-phone\" component={input} label=\"OTP\"/>\n                        </div>\n                      </div>\n                      <div className=\"form-group row\">\n                        <div className=\"col-sm-12 position-relative has-icon-left\">\n                          <Link className=\"form-link\" onClick={() => this.resendOTP()} ><h6>Resend OTP</h6></Link>\n                        </div>\n                      </div>\n                      <div className=\"form-group\">\n                        <div className=\"col-sm-12\">\n                          <button\n                            type=\"submit\"\n                            action=\"accountotp\"\n                            disabled={isLoading}\n                            className=\"btn btn-outline-zoom btn-block\">\n                              <i className=\"fa fa-check-square-o\"></i>  { isLoading ? 'Loading...' : 'Validate OTP'}\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                  </form>\n                </div>\n              </div>\n                <div className=\"col-sm-3 hidden-lg-down\"></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n\n  }\n}\n\nfunction validate(formProps) {\n  const errors = {}\n  if (!formProps.otp) {\n    errors.otp = 'Required OTP';\n  } else {\n    if (isNaN(formProps.otp)) {\n      errors.otp = 'OTP  must be numeric only!';\n    } else if(formProps.otp.length > 6){\n      errors.otp = 'OTP  must be up to 6 digit!';\n    }\n  }\n\n  return errors\n}\n\nAccountOtp = reduxForm({\n  form: 'accountotp',\n  validate: validate\n})(AccountOtp);\n\nfunction mapStateToProps(state) {\n  return {\n    errorMessage: state.account.error,\n    authenticated: state.contractor.authenticated,\n    login_phone: state.contractor.login_phone,\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, { loginOTP, resendOTP })(AccountOtp));\n","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\contractor\\signin.js",["439","440"],"import React, { Component } from \"react\";\n\nimport { connect } from \"react-redux\";\nimport { Link,withRouter  } from \"react-router-dom\";\nimport { Field, reduxForm } from \"redux-form\";\nimport AccountFrogotPassword from \"./model_forgotten\";\nimport { input, LoadingLarge } from \"../library/elements\";\nimport { modal } from \"../library/elements/modal\";\nimport { login } from \"./contractor_action\";\nclass SignIn extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { isLoading: false, isError: \"\",isPasswordText: false, };\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n  }\n\n\n  handleFormSubmit(formProps) {\n    this.setState({ isError: \"\" });\n    this.setState({ isLoading: true });\n    var _this = this;\n    this.props.login(formProps, function (err, result) {\n      if (!result) {\n        _this.setState({ isLoading: false });\n      }else if (result === \"OTP\") {\n        _this.props.history.push(\"/contractor_otp\");\n        _this.setState({ isLoading: false });\n      } else {\n        _this.props.history.push(\"/contractor_account\");\n        _this.setState({ isLoading: false });\n      }\n    });\n  }\n\n  renderPasswordMask(getState) {\n    if (this.state[getState] === false) {\n      this.setState({ [getState]: true });\n    } else {\n      this.setState({ [getState]: false });\n    }\n  }\n  renderAlert() {\n    if (this.props.errorMessage) {\n      this.setState({ isButtonLoading: false });\n      return (\n        <div className=\"alert alert-danger m-b-1\">\n          <strong>Oops! </strong> {this.props.errorMessage}\n        </div>\n      );\n    }\n  }\n\n  addForpgotPasswordModal() {\n    //console.log(\"======\");\n    modal.add(AccountFrogotPassword, {\n      title: \"Forgot Password\",\n      size: \"large\",\n      closeOnOutsideClick: false,\n      hideCloseButton: false,\n      modalId: \"forgot-password\",\n    });\n  }\n  render() {\n    const { handleSubmit, authenticated, errorMessage } = this.props;\n    let isLoading = this.state.isLoading;\n    let isError = this.state.isError;\n    let isPasswordText = this.state.isPasswordText\n    if (errorMessage) {\n      isLoading = false;\n    }\n    return (\n      <div id=\"content-container\" className=\"cm-frm signup pt-5 pb-5\">\n        {isLoading ? <LoadingLarge /> : null}\n        <div className=\"card\">\n          <div className=\"card-header bg-white\">\n            <h5 className=\"m-0\"> Sign In</h5>\n          </div>\n          <div className=\"card-body\">\n      \n            <form onSubmit={handleSubmit(this.handleFormSubmit.bind(this))}>\n              <div className=\"form-group\">\n                <div className=\"col-sm-12 p-0 position-relative has-icon-left\">\n                  <Field\n                    name=\"email\"\n                    type=\"text\"\n                    component={input}\n                    label=\"Email/Phone\"\n                  />\n                </div>\n              </div>\n              <div className=\"form-group\">\n                <div className=\"col-sm-12 p-0 position-relative has-icon-left\">\n               \n                  <div className=\"input-group\">\n                    {isPasswordText ? (\n                      <Field\n                        name=\"password\"\n                        type=\"text\"\n                        component={input}\n                        label=\"* Password\"\n                        className=\"form-control\"\n                      />\n                    ) : (\n                      <Field\n                        name=\"password\"\n                        type=\"password\"\n                        component={input}\n                        label=\"* Password\"\n                        className=\"form-control\"\n                      />\n                    )}\n                    <button\n                      type=\"button\"\n                      className=\"input-group-text\"\n                      onClick={() => this.renderPasswordMask(\"isPasswordText\")}\n                    >\n                      {isPasswordText ? (\n                        <i className=\"fa fa-eye\"></i>\n                      ) : (\n                        <i className=\"fa fa-eye-slash\"></i>\n                      )}\n                    </button>\n                  </div>\n            \n                </div>\n              </div>\n              <div className=\"form-group row text-right\">\n                <div className=\"col-sm-12\">\n                  <Link\n                    className=\"form-link\"\n                    onClick={() => this.addForpgotPasswordModal()}\n                  >\n                    Forgot Password\n                  </Link>\n                </div>\n              </div>\n              <div className=\"form-group\">\n                <div className=\"col-sm-12 p-0\">\n                  <button\n                    type=\"submit\"\n                    action=\"signin_contractor\"\n                    disabled={isLoading}\n                    className=\"btn  btn-primary btn-submit\"\n                  >\n                    {isLoading ? \"Loading...\" : \"Sign In\"}\n                  </button>\n                </div>\n              </div>\n              \n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction validate(formProps) {\n  const errors = {};\n  if (!formProps.email) {\n    errors.email = \"Required Email/Phone\";\n  }\n  if (!formProps.password) {\n    errors.password = \"Required Password\";\n  }\n  return errors;\n}\n\nSignIn = reduxForm({\n  form: \"signin_contractor\",\n  validate: validate,\n})(SignIn);\n\nfunction mapStateToProps(state) {\n  return {\n    errorMessage: state.contractor.error,\n    authenticated: state.contractor.authenticated,\n  };\n}\n\n\nexport default withRouter(connect(mapStateToProps, { login })(\n(SignIn)\n));","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\contractor\\dashboard.js",["441"],"H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\contractor\\contractor.jsx",[],"H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\contractor\\contractor_action.js",["442","443","444","445","446","447","448","449","450","451","452","453","454","455","456","457","458","459"],"import axios from 'axios';\nimport cookie from 'react-cookie';\nimport * as config from '../../system/config';\nimport { lib } from '../library/elements';\n\nexport const CONTRACTOR_LOGIN_PHONE = 'CONTRACTOR_LOGIN_PHONE';\nexport const AUTHENTICATE_CONTRACTOR = 'AUTHENTICATE_CONTRACTOR';\nexport const UNAUTHENTICATE_CONTRACTOR = 'UNAUTHENTICATE_CONTRACTOR';\nexport const FETCH_CONTRACTOR_ACCOUNT_PROFILE = 'FETCH_CONTRACTOR_ACCOUNT_PROFILE';\n\nexport const FETCH_CONTRACTOR_JOB_LIST = 'FETCH_CONTRACTOR_JOB_LIST';\nexport const FETCH_CONTRACTOR_TICKET_TOTAL = 'FETCH_CONTRACTOR_TICKET_TOTAL';\nexport const FETCH_CONTRACTOR_JOB_COUNTERS = 'FETCH_CONTRACTOR_JOB_COUNTERS';\n\nexport const FETCH_STATUSWISE_JOBS = 'FETCH_STATUSWISE_JOBS';\nexport const VALIDATION_ERROR = 'VALIDATION_ERROR';\nexport const FETCH_JOB_INFO = 'FETCH_JOB_INFO';\nexport const GET_JOB_STATUS = 'GET_JOB_STATUS';\nexport const GET_CUSTOMER_REQUESTS = 'GET_CUSTOMER_REQUESTS';\n\n\nexport function login(formProps, callback) {\n  return function(dispatch) {\n    dispatch(validationNull());\n    axios({\n      method: 'post',\n      url: `${config.API_URL}/contractor/account/login`,\n      data: {\n        props: formProps,\n      },\n    })\n    .then(response => {\n      cookie.remove('contractor', { path: '/' });\n      if(response.data.contractor !== undefined && response.data.error === undefined){\n        cookie.save('contractor', response.data.contractor, { path: '/' });\n        dispatch( { type: AUTHENTICATE_CONTRACTOR, payload: response.data.contractor } );\n         callback(null, true);\n      }\n      else {\n        if(response.data.error == \"OTP\" && response.data.phone) {\n          dispatch( { type: CONTRACTOR_LOGIN_PHONE, payload: response.data.phone } );\n          callback(null, 'OTP');\n        } else {\n          dispatch(validation(response.data.error));\n          callback(null, false);\n        }\n      }\n    })\n    .catch(response => {\n      console.log(\"catch>>>>>\", response);\n    });\n  }\n}\nexport function register(formData, callback) {\n  return function(dispatch) {\n     dispatch(validationNull());\n    axios({\n      method: 'post',\n      url: `${config.API_URL}/contractor/account/register`,\n      data: {\n        props: formData\n      },\n    })\n    .then(response => {\n      if(!response.data.error){\n        dispatch( { type: CONTRACTOR_LOGIN_PHONE, payload: formData.phone } );\n        callback(null, response);\n      } else {\n        dispatch(validation(response.data.error));\n      }\n    })\n    .catch(response => {\n      if(response != undefined && response.data.error != undefined){\n        dispatch(validation(response.data.error));\n      } else {\n        dispatch(validation('Bad Signup Info'));\n      }\n    });\n   }\n}\nexport function loginOTP(formData, callback) {\n  return function(dispatch) {\n    axios({\n      method: 'post',\n      url: `${config.API_URL}/contractor_loginotp`,\n      data: {\n        props: formData\n      },\n    })\n    .then(response => {\n      cookie.remove('contractor', { path: '/' });\n      if(response.data.contractor !== undefined && response.data.error === undefined){\n        cookie.save('contractor', response.data.contractor, { path: '/' });\n        dispatch( { type: AUTHENTICATE_CONTRACTOR, payload: cookie.load('contractor') } );\n        callback(null, response);\n      } else {\n        callback(null, response.data);\n      }\n    })\n    .catch(error => {\n      console.log(error);\n    });\n }\n}\nexport function otplogin(formProps, callback) {\n  return function(dispatch) {\n    dispatch(validationNull());\n    axios({\n      method: 'post',\n      url: `${config.API_URL}/contractor/account/otp_login`,\n      data: {\n        props: formProps,\n      },\n    })\n    .then(response => {\n        if(!response.data.error) {\n          dispatch( { type: CONTRACTOR_LOGIN_PHONE, payload: response.data.phone } );\n          callback(null, true);\n        } else {\n          dispatch(validation(response.data.error));\n          callback(null, false);\n        }\n\n    })\n    .catch(response => {\n      console.log(\"catch>>>>>\", response);\n    });\n  }\n}\nexport function resendOTP(phone, callback) {\n  return function(dispatch) {\n    axios({\n      method: 'post',\n      url: `${config.API_URL}/contractor_resendotp`,\n      data: {\n        phone: phone\n      },\n    })\n    .then(response => {\n      console.log(response.data.error );\n      if(response.data.error === undefined){\n        lib.createAlert({message:'Your OTP has been send successfully'});\n        callback(null, response);\n      } else {\n        callback(null, response.data);\n      }\n    })\n    .catch(error => {\n      console.log(error);\n    });\n }\n}\nexport function contractorlogout() {\n  return function(dispatch) {\n    cookie.remove('contractor', { path: '/' });\n    dispatch( { type: UNAUTHENTICATE_CONTRACTOR } );\n  }\n}\n\nexport function getContractorProfile(){\n  return function(dispatch) {\n    axios({\n      method: 'get',\n      url: `${config.API_URL}/contractor/account/profile`,\n      headers: {\n        contractor: cookie.load('contractor'),\n      },\n    })\n    .then(response => {\n\n\n      if(response != undefined && response.data != undefined && response.data.contractor_id != undefined && response.data.contractor_id > 0){\n        dispatch( { type: FETCH_CONTRACTOR_ACCOUNT_PROFILE, payload: response} );\n      } else {\n        dispatch(contractorlogout());\n      }\n    })\n    .catch(response => {\n      if(response != undefined && response.data != undefined && response.data == \"Unauthorized\"){\n        dispatch(contractorlogout());\n      }\n    });\n  }\n}\nexport function updateContractorProfile(data, callback){\n  return function(dispatch) {\n    dispatch(validationNull());\n    axios.post(`${config.API_URL}/contractor/account/update_profile`, data, {\n      headers: { contractor: cookie.load('contractor'), }\n    })\n    .then(response => {\n      if(!response.data.error && response.data){\n        lib.createAlert({message : 'Your Profile Has Been Update Successfully!'});\n        dispatch( getContractorProfile());\n        callback(null, true);\n      } else {\n        dispatch(validation(response.data.error));\n      }\n    })\n    .catch(response => {\n      dispatch(validation('Bad contractor Update'));\n    });\n  }\n}\nexport function forgotPassword(email, callback) {\n  return function(dispatch) {\n    axios({\n       method: 'post',\n       url: `${config.API_URL}/contractor/account/forgot-password`,\n       data: email,\n      })\n      .then(response => {\n        if(!response.data.error){\n          lib.createAlert({message : 'Your password reset link email has been sent to your email address, please check your email.'});\n          callback(null, response);\n        } else {\n          dispatch(validation(response.data.error));\n        }\n      })\n      .catch(response => {\n        dispatch(validation(response.data.error));\n      });\n  }\n}\nexport function getJobs(callback) {\n  return function(dispatch, getState) {\n    const state = getState();\n    var filters_state = state.common.list_filters;\n    var filter_data = {};\n    if(filters_state != undefined && filters_state.job != undefined){\n      var filter_data = filters_state.job;\n    }\n    axios({\n      method: 'post',\n      url: `${config.API_URL}/contractor/job/list`,\n      headers: {\n       contractor: cookie.load('contractor'),\n      },\n      data: {\n        filter: filter_data,\n      },\n    })\n    .then(response => {\n      dispatch( { type: FETCH_CONTRACTOR_JOB_LIST, payload: response } );\n\n      callback(null, response);\n    })\n    .catch(response => {\n      callback(true, null);\n    });\n  }\n}\n\nexport function getTotalJobs() {\n  return function(dispatch, getState) {\n    const state = getState();\n    var filters_state = state.common.list_filters;\n    var filter_data = {};\n    if(filters_state != undefined && filters_state.job != undefined){\n      var filter_data = filters_state.job;\n    }\n    axios({\n      method: 'post',\n      url: `${config.API_URL}/contractor/Job/total`,\n      headers: {\n       contractor: cookie.load('contractor'),\n      },\n      data: {\n        filter: filter_data,\n      },\n    })\n    .then(response => {\n      dispatch( { type: FETCH_CONTRACTOR_TICKET_TOTAL, payload: response } );\n    })\n    .catch(response => {\n    });\n  }\n}\nexport function getJobDrpStatus(){\n  return function(dispatch) {\n    axios.get(`${config.API_URL}/job/status`)\n    .then(response => {\n      dispatch( { type: GET_JOB_STATUS, payload: response} );\n    })\n    .catch(response => {\n    });\n  }\n}\nexport function TotalCustomerRequests(){\n  return function(dispatch) {\n    axios.get(`${config.API_URL}/job/customer_requests`)\n    .then(response => {\n      dispatch( { type: GET_CUSTOMER_REQUESTS, payload: response} );\n    })\n    .catch(response => {\n    });\n  }\n}\n\nexport function getContractorJobCounter() {\n  return function(dispatch) {\n    axios({\n      method: 'post',\n      url: `${config.API_URL}/contractor/job/counters`,\n      headers: {\n        contractor: cookie.load('contractor'),\n      }\n    })\n    .then(response => {\n      dispatch( { type: FETCH_CONTRACTOR_JOB_COUNTERS, payload: response } );\n    })\n    .catch(response => {\n      console.log(response);\n    });\n  }\n}\nexport function getJobStatus() {\n  return function(dispatch, getState) {\n    const state = getState();\n    var filters_state = state.common.list_filters;\n    var filter_data = {};\n    if(filters_state != undefined && filters_state.job != undefined){\n      var filter_data = filters_state.job;\n    }\n\n    axios({\n      method: 'post',\n      url: `${config.API_URL}/contractor/job/status_wise_jobs`,\n      headers: {\n        contractor: cookie.load('contractor'),\n      },\n      data: {\n        filter: filter_data,\n      }\n    })\n    .then(response => {\n      dispatch( { type: FETCH_STATUSWISE_JOBS, payload: response } );\n    })\n    .catch(response => {\n      console.log(\"ticket statuswise tickets error>>>>>>>>>>>\", response);\n    });\n  }\n}\nexport function getJobInfo(filter, callback) {\n  return function(dispatch) {\n    axios({\n      method: 'post',\n      url: `${config.API_URL}/contractor/job/info`,\n      headers: {\n        contractor: cookie.load('contractor'),\n      },\n      data: {\n        option: filter,\n      },\n    })\n    .then(response => {\n      dispatch( { type: FETCH_JOB_INFO, payload: response } );\n      callback(null, response);\n    })\n    .catch(response => {\n      console.log(\"catch>>>>>\", response);\n    });\n  }\n}\nexport function updateContractorQuote(data, callback){\n  var filter = {};\n  filter.job_id = data.job_id;\n  return function(dispatch) {\n    dispatch(validationNull());\n\n     axios({\n      method: 'post',\n      url: `${config.API_URL}/contractor/account/update_contractor_quote`,\n      data: {\n        data: data,\n      },\n      headers: { contractor: cookie.load('contractor'), }\n    })\n    .then(response => {\n      if(!response.data.error && response.data){\n        lib.createAlert({class:\"danger\" ,message : 'Status Has Been Update Successfully!'});\n       \n        dispatch(getJobInfo(filter,callback));\n        callback(null, true);\n      } else {\n        dispatch(validation(response.data.error));\n      }\n    })\n    .catch(response => {\n      dispatch(validation('Bad contractor Update'));\n    });\n  }\n}\nexport function validation(error) {\n  return {\n    type: VALIDATION_ERROR,\n    payload: error\n  }\n}\nexport function validationNull() {\n  return {\n    type: VALIDATION_ERROR,\n    payload: null\n  }\n}\n","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\contractor\\header.js",["460","461","462","463","464"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { modal } from \"../library/elements/modal\";\r\nimport cookie from \"react-cookie\";\r\nimport { Loading, lib } from \"../library/elements\";\r\nimport UpdateProfile from \"./modal_edit_profile\";\r\nimport { IMAGE_URL } from \"../../system/config\";\r\n\r\nclass ContractorHeader extends Component {\r\n\r\n\r\n  componentDidMount() {\r\n    if (!cookie.load(\"contractor\")) {\r\n      this.props.history.push(\"/contractor\");\r\n    }\r\n  }\r\n  addEditProfileModal() {\r\n    modal.add(UpdateProfile, {\r\n      title: \"Edit Contractor Profile\",\r\n      size: \"large\",\r\n      closeOnOutsideClick: false,\r\n      hideCloseButton: false,\r\n      modalId: \"edit-profile\",\r\n    });\r\n  }\r\n  render() {\r\n    const { contractor_profile } = this.props;\r\n    var image;\r\n    if (\r\n      contractor_profile &&\r\n      contractor_profile.contractor_image != undefined &&\r\n      contractor_profile.contractor_image != null &&\r\n      contractor_profile.contractor_image != \"\"\r\n    ) {\r\n      image = IMAGE_URL + \"/\" + contractor_profile?.contractor_image;\r\n    } else {\r\n      image = \"https://www.w3schools.com/howto/img_avatar.png\";\r\n    }\r\n    if (!contractor_profile) {\r\n      return (\r\n        <div className=\"container-fluid account-box m-b-1\">\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-5\"></div>\r\n            <div className=\"col-sm-1\">\r\n              <Loading />\r\n            </div>\r\n            <div className=\"col-sm-5\"></div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    var currentLink = this.props.location.pathname;\r\n    return (\r\n      <div className=\"rounded-3 profile-menu card bg-light\">\r\n        <div className=\"px-4 py-4 d-none d-xl-block\">\r\n          <div className=\"d-block d-sm-flex align-items-center text-center1\">\r\n            <div className=\"avatar-card\">\r\n              <img\r\n                className=\"img-thumbnail img-raised rounded-circle\"\r\n                src={image}\r\n                width=\"100px\"\r\n              />\r\n            </div>\r\n            <div className=\"ps-sm-4 text-center text-sm-start\">\r\n              <h5 className=\"mb-1\">\r\n                {lib.ucwords(\r\n                  contractor_profile.firstname + \" \" + contractor_profile.lastname\r\n                )}\r\n              </h5>\r\n              <div className=\"p mb-0 fs-ms\">{contractor_profile.email}</div>\r\n              <div className=\"p mb-0 fs-ms\">{contractor_profile.telephone}</div>\r\n              <button\r\n                className=\"btn btn-outline-primary btn-sm mt-2\"\r\n                onClick={() => this.addEditProfileModal()}\r\n                type=\"button\"\r\n              >\r\n                <i className=\"fa fa-pencil me-2\"></i>Edit\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <nav className=\"mobile-customer-header navbar navbar-expand-lg navbar-light d-xl-none\">\r\n          <div className=\"container-xl p-0 py-2\">\r\n            <div className=\"d-flex align-items-center\">\r\n              <button\r\n                className=\"navbar-toggler me-2 collapsed\"\r\n                type=\"button\"\r\n                data-bs-toggle=\"collapse\"\r\n                data-bs-target=\"#accountMenu\"\r\n                aria-controls=\"accountMenu\"\r\n                aria-expanded=\"true\"\r\n                aria-label=\"Menu\"\r\n              >\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n              </button>\r\n              <div className=\"ps-sm-4 text-sm-start\">\r\n                <h5 className=\"mb-1\">\r\n                  {lib.ucwords(\r\n                    contractor_profile.firstname + \" \" + contractor_profile.lastname\r\n                  )}\r\n                </h5>\r\n                <div className=\"p mb-0 fs-ms\">{contractor_profile.email}</div>\r\n                <div className=\"p mb-0 fs-ms\">{contractor_profile.telephone}</div>\r\n                <button\r\n                  className=\"btn btn-outline-primary btn-sm mt-2\"\r\n                  onClick={() => this.addEditProfileModal()}\r\n                  type=\"button\"\r\n                >\r\n                  <i className=\"fa fa-pencil me-2\"></i>Edit\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n\r\n        <div className=\"d-lg-block collapse\" id=\"accountMenu\">\r\n          <div className=\"d-flex align-items-center justify-content-between py-3 px-4 bg-secondary d-xl-none\">\r\n            <h5 className=\"m-0\">Account Menu</h5>\r\n            <button\r\n              className=\"btn-close collapsed\"\r\n              id=\"btnCloseAccountMenu\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#accountMenu\"\r\n              aria-controls=\"accountMenu\"\r\n              aria-expanded=\"false\"\r\n              aria-label=\"Menu\"\r\n            ></button>\r\n          </div>\r\n          <Link\r\n            className={\r\n              \"account-menu-item d-flex align-items-center nav-link-style\" +\r\n              (currentLink == \"/contractor_account\" ? \" active \" : \"\")\r\n            }\r\n            to=\"/contractor_account\"\r\n          >\r\n            <i className=\"fa fa-laptop fs-lg opacity-60 me-2\"></i>Dashboard\r\n          </Link>\r\n          <Link\r\n            className={\r\n              \"account-menu-item d-flex align-items-center nav-link-style\" +\r\n              (currentLink == \"/contractor/job\" ||\r\n              currentLink.indexOf(\"/contractor/job\") >= 0\r\n                ? \" active\"\r\n                : \"\")\r\n            }\r\n            to=\"/contractor/job\"\r\n          >\r\n            <i className=\"fa fa-list fs-lg opacity-60 me-2\"></i>Pick Job\r\n          </Link>\r\n\r\n          <Link\r\n            className=\"account-menu-item d-flex align-items-center nav-link-style\"\r\n            to=\"/contractor_logout\"\r\n          >\r\n            <i className=\"fa fa-power-off   fs-lg opacity-60 me-2\"></i>\r\n            Logout\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    contractor_profile: state.contractor.contractor_profile,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(ContractorHeader);\r\n","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\contractor\\modal_edit_profile.js",["465","466","467","468","469","470","471"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Field, reduxForm } from \"redux-form\";\nimport {  updateContractorProfile } from \"./contractor_action\";\nimport { input } from \"../library/elements\";\nimport { IMAGE_URL } from \"../../system/config\";\nclass UpdateProfile extends Component {\n  constructor(props) {\n    super(props);\n    this.handleProfileSubmit = this.handleProfileSubmit.bind(this);\n    this.removeModal = this.handleProfileSubmit.bind(this);\n    this.state = {\n      isLoading: false,\n      isPasswordText: false,\n      isPasswordConfirmText: false,\n    };\n  }\n  handleProfileSubmit(formProps) {\n    this.state = { isLoading: true };\n    const data = new FormData();\n    var keyName;\n    var i = 0;\n    var image = formProps.image;\n    delete formProps.image;\n    if (image) {\n      data.append(\"file\", image[0]);\n    }\n    for (var key in formProps) {\n      data.append(key, JSON.stringify(formProps[key]));\n    }\n    var _this = this;\n    this.props.updateContractorProfile(data, function (err, result) {\n      if (result) {\n        _this.props.removeModal();\n      }\n    });\n  }\n  closeModal() {\n    this.props.removeModal();\n  }\n\n  addDefaultSrc(ev) {\n    return (ev.target.src =\n      \"https://www.w3schools.com/howto/img_avatar.png\");\n  }\n\n  renderPasswordMask(getState) {\n    if (this.state[getState] == false) {\n      this.setState({ [getState]: true });\n    } else {\n      this.setState({ [getState]: false });\n    }\n  }\n  renderConfirmPasswordMask(getState) {\n    if (this.state[getState] == false) {\n      this.setState({ [getState]: true });\n    } else {\n      this.setState({ [getState]: false });\n    }\n  }\n\n  render() {\n    const { handleSubmit, errorMessage } = this.props;\n    var { isLoading, isPasswordText } = this.state;\n\n    if (errorMessage) {\n      isLoading = false;\n    }\n\n    return (\n      <div className=\"profile-modal model-card\">\n        <form\n          onSubmit={handleSubmit(this.handleProfileSubmit.bind(this))}\n          className=\"df-form\"\n        >\n          {errorMessage ? (\n            <fieldset className=\"form-group\">\n              <div className=\"col-sm-12 card-body\">\n                <div className=\"alert alert-danger\">{errorMessage}</div>\n              </div>\n            </fieldset>\n          ) : null}\n\n          <div className=\"cp-1\">\n            <div className=\"form-group row\">\n              <div className=\"col-sm-12 text-center\">\n                <Field\n                  name=\"image\"\n                  component={(image) => {\n                    var showImage = null;\n                    if (image.input.value && image.input.value !== \"\") {\n                      showImage = (\n                        <div className=\"pro-image\">\n                          <img\n                            onError={this.addDefaultSrc}\n                            src={\n                              image.input.value.dataUrl\n                                ? image.input.value.dataUrl\n                                : image.input.value\n                            }\n                            className=\"img-thumbnail img-raised rounded-circle\"\n                            width=\"100\"\n                            height=\"100\"\n                          />\n                          <div className=\"fileUpload md-btn btn btn-primary\">\n                            <span>Upload Profile Image</span>\n                            <input\n                              type=\"file\"\n                              name=\"image\"\n                              className=\"ml-2\"\n                              onChange={(e) => {\n                                var files = e.target.files;\n                                let reader = new FileReader();\n                                let file = e.target.files[0];\n                                reader.onload = function (e) {\n                                  var picFile = e.target;\n                                  files.dataUrl = picFile.result;\n                                  image.input.onChange(files);\n                                };\n                                reader.readAsDataURL(file);\n                              }}\n                            />\n                          </div>\n                        </div>\n                      );\n                    }\n                    return (\n                      <div>\n                        {showImage !== null ? (\n                          showImage\n                        ) : (\n                          <div className=\"fileUpload md-btn btn btn-primary\">\n                            <span>Upload Profile Image</span>\n                            <input\n                              type=\"file\"\n                              name=\"image\"\n                              className=\"m-l-20\"\n                              onChange={(e) => {\n                                var files = e.target.files;\n                                let reader = new FileReader();\n                                let file = e.target.files[0];\n                                reader.onload = function (e) {\n                                  var picFile = e.target;\n                                  files.dataUrl = picFile.result;\n                                  image.input.onChange(files);\n                                };\n                                reader.readAsDataURL(file);\n                              }}\n                            />{\" \"}\n                          </div>\n                        )}\n                      </div>\n                    );\n                  }}\n                />\n              </div>\n            </div>\n            <div className=\"form-group row\">\n              <div className=\"col-sm-6\">\n                <Field\n                  name=\"firstname\"\n                  type=\"text\"\n                  component={input}\n                  label=\"First Name\"\n                  className=\"form-control\"\n                />\n              </div>\n              <div className=\"col-sm-6\">\n                <Field\n                  name=\"lastname\"\n                  type=\"text\"\n                  component={input}\n                  label=\"Last Name\"\n                  className=\"form-control\"\n                />\n              </div>\n            </div>\n            <div className=\"form-group row\">\n              <div className=\"col-sm-6 mb-3\">\n                <Field\n                  name=\"email\"\n                  type=\"text\"\n                  component={input}\n                  label=\"Email\"\n                  className=\"form-control\"\n                />\n              </div>\n              <div className=\"col-sm-6\">\n                <Field\n                  name=\"phone\"\n                  type=\"text\"\n                  component={input}\n                  label=\"Mobile or Phone\"\n                  className=\"form-control\"\n                />\n              </div>\n            </div>\n            <div className=\"form-group row\">\n              <div className=\"col-sm-12 mb-3\">\n                <Field\n                  name=\"skill\"\n                  type=\"text\"\n                  component={input}\n                  label=\"Skill\"\n                  className=\"form-control\"\n                />\n              </div>\n              <div className=\"col-sm-12\">\n                <Field\n                  name=\"website\"\n                  type=\"text\"\n                  component={input}\n                  label=\"Website\"\n                  className=\"form-control\"\n                />\n              </div>\n            </div>\n            <div className=\"form-group row\">\n              <div className=\"input-group\">\n                {isPasswordText ? (\n                  <Field\n                    name=\"password\"\n                    type=\"text\"\n                    component={input}\n                    label=\"* Password\"\n                    className=\"form-control\"\n                  />\n                ) : (\n                  <Field\n                    name=\"password\"\n                    type=\"password\"\n                    component={input}\n                    label=\"* Password\"\n                    className=\"form-control\"\n                  />\n                )}\n                <button\n                  type=\"button\"\n                  className=\"input-group-text\"\n                  onClick={() => this.renderPasswordMask(\"isPasswordText\")}\n                >\n                  {isPasswordText ? (\n                    <i className=\"fa fa-eye\"></i>\n                  ) : (\n                    <i className=\"fa fa-eye-slash\"></i>\n                  )}\n                </button>\n              </div>\n            </div>\n\n            <div className=\"form-group row\">\n              <div className=\"col-sm-9\">\n                <div className=\"d-grid\">\n                <button\n                  action=\"updateprofile\"\n                  type=\"submit\"\n                  disabled={isLoading}\n                  className=\"md-btn btn btn btn-primary btn-block mb-2\"\n                >\n                  <i className=\"fa fa-pencil-circle\"></i>{\" \"}\n                  {isLoading ? \"Loading...\" : \"Update\"}\n                </button>\n              </div>\n              </div>\n              <div className=\"col-sm-3\">\n              <div className=\"d-grid\">\n                <button\n                  onClick={() => this.closeModal()}\n                  type=\"button\"\n                  className=\"md-btn btn btn-danger btn-block\"\n                >\n                  Cancel\n                </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nfunction validate(formProps) {\n  const errors = {};\n  if (!formProps.firstname) {\n    errors.firstname = \"Required First Name\";\n  }\n  if (!formProps.lastname) {\n    errors.lastname = \"Required Last Name\";\n  }\n  if (!formProps.email) {\n    errors.email = \"Required Email\";\n  } else if (\n    !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(formProps.email)\n  ) {\n    errors.email = \"Invalid Email Address\";\n  }\n\n  if (!formProps.telephone) {\n    errors.telephone = \"Required Mobile\";\n  } else {\n    if (isNaN(formProps.telephone)) {\n      errors.telephone = \"Mobile number must be numeric only!\";\n    } else if (formProps.telephone.length > 10) {\n      errors.telephone = \"Mobile number must be up to 10 digit!\";\n    }\n  }\n\n  if (\n    formProps.password &&\n    formProps.confirm_password &&\n    formProps.password != formProps.confirm_password\n  ) {\n    errors.confirm_password = \"Confirm must match to Password\";\n  }\n\n  return errors;\n}\n\nfunction mapStateToProps(state) {\n\n  var iniCus = {};\n  if (state.contractor.contractor_profile) {\n    iniCus = state.contractor.contractor_profile;\n    iniCus.image = IMAGE_URL + state.contractor.contractor_profile.contractor_image;\n  }\n  return {\n    initialValues: iniCus,\n    errorMessage: state.contractor.error,\n  };\n}\n\nUpdateProfile = reduxForm({\n  form: \"updateprofile\",\n  validate: validate,\n})(UpdateProfile);\n\nexport default connect(mapStateToProps, { updateContractorProfile })(\n  UpdateProfile\n);\n","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\contractor\\model_forgotten.js",["472","473"],"\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link,withRouter  } from \"react-router-dom\";\nimport { Field, reduxForm } from 'redux-form';\nimport { forgotPassword ,validationNull} from './contractor_action';\nimport { input } from '../library/elements';\n\nclass ModalAccountFrogotPassword extends Component {\n\n  constructor(props) {\n    super(props);\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.removeModal = this.handleFormSubmit.bind(this);\n   this.state = { isButtonLoading:false };\n  }\n  componentDidMount() {\n    this.props.validationNull();\n  }\n\n  handleFormSubmit(formProps) {\n  this.state = { isButtonLoading:true };\n    var _this = this;\n    this.props.forgotPassword(formProps, function(err, result) {\n      if(result) {\n        _this.setState({ isLoading: false });\n        _this.props.removeModal();\n        _this.props.history.push(\"/contractor\");\n      }\n    });\n  }\n  renderAlert() {\n    if(this.props.errorMessage) {\n      return (\n        <div className=\"alert alert-danger\">\n        <strong>Oops! </strong> {this.props.errorMessage}\n        </div>\n      )\n    }\n  }\n  goSignup() {\n  this.props.removeModal();\n  this.props.history.push(\"/contractor\");\n}\n  render() {\n    const { handleSubmit ,submitting ,errorMessage } = this.props;\n        var isButtonLoading = this.state.isButtonLoading;\n\n\n        if(errorMessage){\n          isButtonLoading = false;\n        }\n    return (\n      <div className=\"account-forgotten model-card cm-frm\">\n      <div className=\"account-banner\">\n        <div className=\"cp-1\">\n          <div className=\"row\">\n            <div className=\"col-sm-12\">\n              <div className=\"well\">\n                <form onSubmit={handleSubmit(this.handleFormSubmit.bind(this))}>\n                  {this.renderAlert()}\n                  <div className=\"form-group row\">\n                    <div className=\"col-sm-12\">\n                      <h6>Enter your email address to receive  a new password</h6>\n                    </div>\n                    <div className=\"col-sm-12 position-relative has-icon-left\">\n                      <Field name=\"email\" type=\"text\" icon=\"fa fa-envelope-o\" component={input} label=\"Email\"/>\n                    </div>\n                  </div>\n                  <div className=\"form-group row\">\n                    <div className=\"col-sm-12\">\n                      <button action=\"forgotpassword\" className=\"btn btn-primary btn-block\" disabled={isButtonLoading}>\n                        <i className=\"fa fa-paper-plane\"></i> {isButtonLoading ? 'Loading...' : 'Send'}\n                      </button>\n                    </div>\n                  </div>\n                  <div className=\"form-group row\">\n                    <div className=\"col-sm-12 text-center\">\n                      New to Mysscrow? <Link className=\"form-link\" onClick={() => this.goSignup()}>Register Now</Link>\n                    </div>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n   </div>\n  );\n  }\n}\n\nfunction validate(formProps) {\n  const errors = {}\n\n  if (!formProps.email) {\n    errors.email = 'Required Email'\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(formProps.email)) {\n    errors.email = 'Invalid Email Address'\n  }\n\n  return errors\n}\n\nfunction mapStateToProps(state) {\n  return {\n    errorMessage: state.contractor.error,\n  }\n}\n\nModalAccountFrogotPassword = reduxForm({\n  form: 'forgotpassword',\n  validate: validate\n})(ModalAccountFrogotPassword);\n\nexport default withRouter(connect(mapStateToProps, { forgotPassword,validationNull })(\n  (ModalAccountFrogotPassword)\n  ));","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\contractor\\otp_signin.js",["474","475","476"],"import React,  { Component } from 'react';\nimport { Link,withRouter  } from \"react-router-dom\";\nimport cookie from \"react-cookie\";\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport { otplogin } from './contractor_action';\nimport { modal } from '../library/elements/modal';\nimport { input, LoadingLarge } from '../library/elements';\nimport AccountFrogotPassword from '../account/model_forgotten';\n\nclass AccountOTPLogin extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { isLoading:false, isError: '' };\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n  }\n\n    handleFormSubmit(formProps) {\n      this.setState({ isError: '' });\n      this.setState({ isLoading: true });\n      var _this = this;\n      this.props.otplogin(formProps, function(err, result) {\n        if(!result) {\n          _this.setState({ isLoading: false });\n        } else {\n          _this.props.history.push(\"/contractor_otp\");\n          _this.setState({ isLoading: false });\n\n        }\n      });\n    }\n\n  renderAlert() {\n    if(this.props.errorMessage) {\n      this.setState({ isButtonLoading: false });\n      return (\n        <div className=\"alert alert-danger m-b-1\">\n        <strong>Oops! </strong> {this.props.errorMessage}\n        </div>\n      )\n    }\n  }\n\n  addForpgotPasswordModal() {\n  modal.add(AccountFrogotPassword, {\n    title: \"Forgot Password\",\n    size: 'large',\n    closeOnOutsideClick: false,\n    hideCloseButton: false,\n    modalId: 'forgot-password',\n  });\n  }\n  render() {\n\n    const { handleSubmit, authenticated,errorMessage } = this.props;\n    let isLoading = this.state.isLoading;\n    let isError = this.state.isError;\n\n    if(errorMessage){\n      isLoading = false;\n    }\n    return (\n    <div id=\"content-container\" className=\"cm-frm signup pt-5 pb-5\">\n        { isLoading ? <LoadingLarge /> : null }\n        <div className=\"account-banner\">\n\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-sm-3 hidden-lg-down\"></div>\n              <div className=\"col-sm-6\">\n                <div className=\"card\">\n\n                      <div className=\"card-header\"><h5 className=\"m-0\"> Contractor Sign In</h5></div>\n                      <div className=\"card-body\">\n                        {\n                          errorMessage\n                          ?\n                          <div className=\"form-group\">\n                            <div className=\"col-sm-12 p-0\">\n                              <div className=\"alert alert-warning\">{errorMessage}</div>\n                            </div>\n                          </div>\n                          :\n                          null\n                        }\n                        <form onSubmit={handleSubmit(this.handleFormSubmit.bind(this))}>\n                          <div className=\"form-group\">\n                            <div className=\"col-sm-12 p-0 position-relative has-icon-left\">\n                              <label><strong>Mobile phone number</strong></label>\n                                <Field name=\"phone\" type=\"text\" icon=\"fa fa-phone\"  component={input}/>\n                            </div>\n                          </div>\n                          <div className=\"form-group\">\n                            <div className=\"col-sm-12 p-0\">\n                              <button\n                                type=\"submit\"\n                                action=\"signin\"\n                                disabled={isLoading}\n                                className=\"btn  btn-block  btn-primary btn-submit\">\n                                  { isLoading ? 'Loading...' : 'Continue'}\n                              </button>\n                            </div>\n                          </div>\n                          <div className=\"form-group row\">\n                            <div className=\"col-sm-12 text-center\">\n                                  <Link className=\"form-link\" to=\"/contractor\"><h6>Signup Now</h6></Link>\n                            </div>\n                          </div>\n                        </form>\n\n                  </div>\n                </div>\n                <p className=\"line-on-side text-muted text-center font-small-3 sk-headin mt-4\"><span>or</span></p>\n                <div className=\"form-group row mb-0\">\n                  <div className=\"col-sm-12 text-center\">\n                        <Link className=\"form-link\" to=\"/contractor\"><h6>Signin with Password</h6></Link>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col-sm-3 hidden-lg-down\"></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n\n  }\n}\n\nfunction validate(formProps) {\n  const errors = {}\n  if (!formProps.phone) {\n    errors.phone = 'Enter your mobile number'\n  }\n  return errors\n}\n\nAccountOTPLogin = reduxForm({\n  form: 'signin',\n  validate: validate\n})(AccountOTPLogin);\n\nfunction mapStateToProps(state) {\n  return {\n    errorMessage: state.contractor.error,\n    authenticated: state.contractor.authenticated\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, { otplogin })(\n  (AccountOTPLogin)\n  ));","H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\contractor\\logout.js",[],"H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\contractor\\jobs.js",["477","478","479","480","481","482","483","484","485","486","487"],"H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\contractor\\job_info.js",["488","489","490","491","492","493"],"H:\\MyWork\\Freelance\\mysscrow2\\app2\\src\\container\\contractor\\model_edit_contractor_quote.js",["494","495"],{"ruleId":"496","replacedBy":"497"},{"ruleId":"498","replacedBy":"499"},{"ruleId":"500","severity":1,"message":"501","line":37,"column":32,"nodeType":"502","messageId":"503","endLine":37,"endColumn":34},{"ruleId":"500","severity":1,"message":"504","line":177,"column":19,"nodeType":"502","messageId":"503","endLine":177,"endColumn":21},{"ruleId":"500","severity":1,"message":"504","line":177,"column":49,"nodeType":"502","messageId":"503","endLine":177,"endColumn":51},{"ruleId":"500","severity":1,"message":"504","line":177,"column":91,"nodeType":"502","messageId":"503","endLine":177,"endColumn":93},{"ruleId":"500","severity":1,"message":"504","line":184,"column":19,"nodeType":"502","messageId":"503","endLine":184,"endColumn":21},{"ruleId":"500","severity":1,"message":"504","line":184,"column":49,"nodeType":"502","messageId":"503","endLine":184,"endColumn":51},{"ruleId":"500","severity":1,"message":"501","line":184,"column":79,"nodeType":"502","messageId":"503","endLine":184,"endColumn":81},{"ruleId":"500","severity":1,"message":"504","line":279,"column":22,"nodeType":"502","messageId":"503","endLine":279,"endColumn":24},{"ruleId":"500","severity":1,"message":"504","line":279,"column":56,"nodeType":"502","messageId":"503","endLine":279,"endColumn":58},{"ruleId":"505","severity":1,"message":"506","line":280,"column":11,"nodeType":"507","messageId":"508","endLine":280,"endColumn":22},{"ruleId":"500","severity":1,"message":"504","line":307,"column":22,"nodeType":"502","messageId":"503","endLine":307,"endColumn":24},{"ruleId":"500","severity":1,"message":"504","line":307,"column":56,"nodeType":"502","messageId":"503","endLine":307,"endColumn":58},{"ruleId":"505","severity":1,"message":"506","line":308,"column":11,"nodeType":"507","messageId":"508","endLine":308,"endColumn":22},{"ruleId":"500","severity":1,"message":"504","line":333,"column":22,"nodeType":"502","messageId":"503","endLine":333,"endColumn":24},{"ruleId":"500","severity":1,"message":"504","line":333,"column":56,"nodeType":"502","messageId":"503","endLine":333,"endColumn":58},{"ruleId":"505","severity":1,"message":"506","line":334,"column":11,"nodeType":"507","messageId":"508","endLine":334,"endColumn":22},{"ruleId":"509","severity":1,"message":"510","line":115,"column":7,"nodeType":"507","messageId":"511","endLine":115,"endColumn":20},{"ruleId":"509","severity":1,"message":"512","line":116,"column":7,"nodeType":"507","messageId":"511","endLine":116,"endColumn":31},{"ruleId":"509","severity":1,"message":"513","line":117,"column":7,"nodeType":"507","messageId":"511","endLine":117,"endColumn":22},{"ruleId":"509","severity":1,"message":"514","line":118,"column":7,"nodeType":"507","messageId":"511","endLine":118,"endColumn":25},{"ruleId":"509","severity":1,"message":"515","line":9,"column":9,"nodeType":"507","messageId":"511","endLine":9,"endColumn":14},{"ruleId":"516","severity":1,"message":"517","line":26,"column":9,"nodeType":"518","messageId":"503","endLine":26,"endColumn":13},{"ruleId":"509","severity":1,"message":"519","line":1,"column":8,"nodeType":"507","messageId":"511","endLine":1,"endColumn":13},{"ruleId":"509","severity":1,"message":"520","line":2,"column":8,"nodeType":"507","messageId":"511","endLine":2,"endColumn":14},{"ruleId":"509","severity":1,"message":"521","line":3,"column":10,"nodeType":"507","messageId":"511","endLine":3,"endColumn":17},{"ruleId":"509","severity":1,"message":"522","line":3,"column":18,"nodeType":"507","messageId":"511","endLine":3,"endColumn":28},{"ruleId":"500","severity":1,"message":"504","line":29,"column":22,"nodeType":"502","messageId":"503","endLine":29,"endColumn":24},{"ruleId":"500","severity":1,"message":"504","line":29,"column":59,"nodeType":"502","messageId":"503","endLine":29,"endColumn":61},{"ruleId":"500","severity":1,"message":"504","line":30,"column":15,"nodeType":"502","messageId":"503","endLine":30,"endColumn":17},{"ruleId":"500","severity":1,"message":"501","line":30,"column":36,"nodeType":"502","messageId":"503","endLine":30,"endColumn":38},{"ruleId":"523","severity":1,"message":"524","line":10,"column":1,"nodeType":"525","endLine":23,"endColumn":2},{"ruleId":"523","severity":1,"message":"524","line":20,"column":1,"nodeType":"525","endLine":51,"endColumn":2},{"ruleId":"509","severity":1,"message":"526","line":32,"column":10,"nodeType":"507","messageId":"511","endLine":32,"endColumn":25},{"ruleId":"509","severity":1,"message":"510","line":63,"column":27,"nodeType":"507","messageId":"511","endLine":63,"endColumn":40},{"ruleId":"509","severity":1,"message":"527","line":65,"column":9,"nodeType":"507","messageId":"511","endLine":65,"endColumn":16},{"ruleId":"509","severity":1,"message":"528","line":4,"column":10,"nodeType":"507","messageId":"511","endLine":4,"endColumn":14},{"ruleId":"529","severity":1,"message":"530","line":26,"column":5,"nodeType":"531","endLine":26,"endColumn":9},{"ruleId":"500","severity":1,"message":"504","line":239,"column":26,"nodeType":"502","messageId":"503","endLine":239,"endColumn":28},{"ruleId":"509","severity":1,"message":"532","line":2,"column":10,"nodeType":"507","messageId":"511","endLine":2,"endColumn":16},{"ruleId":"509","severity":1,"message":"510","line":55,"column":27,"nodeType":"507","messageId":"511","endLine":55,"endColumn":40},{"ruleId":"509","severity":1,"message":"527","line":57,"column":9,"nodeType":"507","messageId":"511","endLine":57,"endColumn":16},{"ruleId":"533","severity":1,"message":"534","line":5,"column":3,"nodeType":"535","messageId":"536","endLine":7,"endColumn":4},{"ruleId":"537","severity":1,"message":"538","line":25,"column":23,"nodeType":"539","messageId":"503","endLine":25,"endColumn":40},{"ruleId":"533","severity":1,"message":"534","line":9,"column":3,"nodeType":"535","messageId":"536","endLine":11,"endColumn":4},{"ruleId":"509","severity":1,"message":"513","line":22,"column":13,"nodeType":"507","messageId":"511","endLine":22,"endColumn":28},{"ruleId":"509","severity":1,"message":"510","line":67,"column":27,"nodeType":"507","messageId":"511","endLine":67,"endColumn":40},{"ruleId":"509","severity":1,"message":"540","line":67,"column":42,"nodeType":"507","messageId":"511","endLine":67,"endColumn":47},{"ruleId":"509","severity":1,"message":"541","line":67,"column":49,"nodeType":"507","messageId":"511","endLine":67,"endColumn":60},{"ruleId":"509","severity":1,"message":"542","line":70,"column":9,"nodeType":"507","messageId":"511","endLine":70,"endColumn":20},{"ruleId":"505","severity":1,"message":"543","line":9,"column":11,"nodeType":"507","messageId":"508","endLine":9,"endColumn":15},{"ruleId":"505","severity":1,"message":"544","line":11,"column":11,"nodeType":"507","messageId":"508","endLine":11,"endColumn":23},{"ruleId":"500","severity":1,"message":"501","line":19,"column":13,"nodeType":"502","messageId":"503","endLine":19,"endColumn":15},{"ruleId":"509","severity":1,"message":"545","line":7,"column":20,"nodeType":"507","messageId":"511","endLine":7,"endColumn":24},{"ruleId":"509","severity":1,"message":"546","line":7,"column":43,"nodeType":"507","messageId":"511","endLine":7,"endColumn":47},{"ruleId":"509","severity":1,"message":"547","line":6,"column":20,"nodeType":"507","messageId":"511","endLine":6,"endColumn":28},{"ruleId":"509","severity":1,"message":"546","line":6,"column":30,"nodeType":"507","messageId":"511","endLine":6,"endColumn":34},{"ruleId":"509","severity":1,"message":"548","line":6,"column":36,"nodeType":"507","messageId":"511","endLine":6,"endColumn":40},{"ruleId":"549","severity":1,"message":"550","line":14,"column":11,"nodeType":"551","endLine":14,"endColumn":118},{"ruleId":"509","severity":1,"message":"552","line":1,"column":28,"nodeType":"507","messageId":"511","endLine":1,"endColumn":37},{"ruleId":"509","severity":1,"message":"553","line":2,"column":10,"nodeType":"507","messageId":"511","endLine":2,"endColumn":17},{"ruleId":"509","severity":1,"message":"554","line":1,"column":17,"nodeType":"507","messageId":"511","endLine":1,"endColumn":26},{"ruleId":"509","severity":1,"message":"552","line":1,"column":28,"nodeType":"507","messageId":"511","endLine":1,"endColumn":37},{"ruleId":"509","severity":1,"message":"528","line":2,"column":10,"nodeType":"507","messageId":"511","endLine":2,"endColumn":14},{"ruleId":"555","severity":1,"message":"556","line":54,"column":32,"nodeType":"557","messageId":"558","endLine":54,"endColumn":33,"suggestions":"559"},{"ruleId":"555","severity":1,"message":"560","line":54,"column":34,"nodeType":"557","messageId":"558","endLine":54,"endColumn":35,"suggestions":"561"},{"ruleId":"555","severity":1,"message":"562","line":54,"column":42,"nodeType":"557","messageId":"558","endLine":54,"endColumn":43,"suggestions":"563"},{"ruleId":"564","severity":1,"message":"565","line":65,"column":20,"nodeType":"566","messageId":"567","endLine":65,"endColumn":22},{"ruleId":"564","severity":1,"message":"565","line":65,"column":52,"nodeType":"566","messageId":"567","endLine":65,"endColumn":54},{"ruleId":"564","severity":1,"message":"568","line":65,"column":52,"nodeType":"566","messageId":"567","endLine":65,"endColumn":54},{"ruleId":"564","severity":1,"message":"568","line":66,"column":20,"nodeType":"566","messageId":"567","endLine":66,"endColumn":22},{"ruleId":"564","severity":1,"message":"568","line":66,"column":45,"nodeType":"566","messageId":"567","endLine":66,"endColumn":47},{"ruleId":"564","severity":1,"message":"568","line":67,"column":20,"nodeType":"566","messageId":"567","endLine":67,"endColumn":22},{"ruleId":"564","severity":1,"message":"568","line":67,"column":52,"nodeType":"566","messageId":"567","endLine":67,"endColumn":54},{"ruleId":"564","severity":1,"message":"568","line":68,"column":20,"nodeType":"566","messageId":"567","endLine":68,"endColumn":22},{"ruleId":"564","severity":1,"message":"568","line":68,"column":43,"nodeType":"566","messageId":"567","endLine":68,"endColumn":45},{"ruleId":"564","severity":1,"message":"568","line":69,"column":18,"nodeType":"566","messageId":"567","endLine":69,"endColumn":20},{"ruleId":"564","severity":1,"message":"568","line":69,"column":46,"nodeType":"566","messageId":"567","endLine":69,"endColumn":48},{"ruleId":"564","severity":1,"message":"568","line":70,"column":18,"nodeType":"566","messageId":"567","endLine":70,"endColumn":20},{"ruleId":"564","severity":1,"message":"568","line":70,"column":40,"nodeType":"566","messageId":"567","endLine":70,"endColumn":42},{"ruleId":"564","severity":1,"message":"568","line":71,"column":17,"nodeType":"566","messageId":"567","endLine":71,"endColumn":19},{"ruleId":"564","severity":1,"message":"568","line":71,"column":43,"nodeType":"566","messageId":"567","endLine":71,"endColumn":45},{"ruleId":"564","severity":1,"message":"568","line":72,"column":17,"nodeType":"566","messageId":"567","endLine":72,"endColumn":19},{"ruleId":"564","severity":1,"message":"568","line":72,"column":41,"nodeType":"566","messageId":"567","endLine":72,"endColumn":43},{"ruleId":"564","severity":1,"message":"568","line":73,"column":18,"nodeType":"566","messageId":"567","endLine":73,"endColumn":20},{"ruleId":"564","severity":1,"message":"568","line":73,"column":51,"nodeType":"566","messageId":"567","endLine":73,"endColumn":53},{"ruleId":"564","severity":1,"message":"568","line":74,"column":19,"nodeType":"566","messageId":"567","endLine":74,"endColumn":21},{"ruleId":"509","severity":1,"message":"569","line":165,"column":7,"nodeType":"507","messageId":"511","endLine":165,"endColumn":15},{"ruleId":"509","severity":1,"message":"569","line":170,"column":7,"nodeType":"507","messageId":"511","endLine":170,"endColumn":15},{"ruleId":"500","severity":1,"message":"501","line":177,"column":22,"nodeType":"502","messageId":"503","endLine":177,"endColumn":24},{"ruleId":"500","severity":1,"message":"501","line":182,"column":29,"nodeType":"502","messageId":"503","endLine":182,"endColumn":31},{"ruleId":"500","severity":1,"message":"501","line":185,"column":29,"nodeType":"502","messageId":"503","endLine":185,"endColumn":31},{"ruleId":"500","severity":1,"message":"504","line":203,"column":30,"nodeType":"502","messageId":"503","endLine":203,"endColumn":32},{"ruleId":"505","severity":1,"message":"570","line":224,"column":9,"nodeType":"507","messageId":"508","endLine":224,"endColumn":17},{"ruleId":"500","severity":1,"message":"504","line":234,"column":28,"nodeType":"502","messageId":"503","endLine":234,"endColumn":30},{"ruleId":"509","severity":1,"message":"571","line":258,"column":9,"nodeType":"507","messageId":"511","endLine":258,"endColumn":17},{"ruleId":"500","severity":1,"message":"504","line":267,"column":29,"nodeType":"502","messageId":"503","endLine":267,"endColumn":31},{"ruleId":"500","severity":1,"message":"501","line":267,"column":67,"nodeType":"502","messageId":"503","endLine":267,"endColumn":69},{"ruleId":"500","severity":1,"message":"501","line":294,"column":40,"nodeType":"502","messageId":"503","endLine":294,"endColumn":42},{"ruleId":"500","severity":1,"message":"501","line":300,"column":37,"nodeType":"502","messageId":"503","endLine":300,"endColumn":39},{"ruleId":"500","severity":1,"message":"501","line":302,"column":20,"nodeType":"502","messageId":"503","endLine":302,"endColumn":22},{"ruleId":"529","severity":1,"message":"530","line":22,"column":3,"nodeType":"531","endLine":22,"endColumn":7},{"ruleId":"509","severity":1,"message":"572","line":46,"column":27,"nodeType":"507","messageId":"511","endLine":46,"endColumn":37},{"ruleId":"529","severity":1,"message":"530","line":19,"column":5,"nodeType":"531","endLine":19,"endColumn":9},{"ruleId":"509","severity":1,"message":"573","line":21,"column":9,"nodeType":"507","messageId":"511","endLine":21,"endColumn":16},{"ruleId":"509","severity":1,"message":"574","line":22,"column":9,"nodeType":"507","messageId":"511","endLine":22,"endColumn":10},{"ruleId":"500","severity":1,"message":"501","line":48,"column":30,"nodeType":"502","messageId":"503","endLine":48,"endColumn":32},{"ruleId":"500","severity":1,"message":"501","line":55,"column":30,"nodeType":"502","messageId":"503","endLine":55,"endColumn":32},{"ruleId":"509","severity":1,"message":"575","line":64,"column":38,"nodeType":"507","messageId":"511","endLine":64,"endColumn":59},{"ruleId":"549","severity":1,"message":"550","line":94,"column":27,"nodeType":"551","endLine":104,"endColumn":29},{"ruleId":"500","severity":1,"message":"504","line":294,"column":24,"nodeType":"502","messageId":"503","endLine":294,"endColumn":26},{"ruleId":"509","severity":1,"message":"576","line":9,"column":8,"nodeType":"507","messageId":"511","endLine":9,"endColumn":20},{"ruleId":"500","severity":1,"message":"504","line":34,"column":38,"nodeType":"502","messageId":"503","endLine":34,"endColumn":40},{"ruleId":"500","severity":1,"message":"504","line":36,"column":38,"nodeType":"502","messageId":"503","endLine":36,"endColumn":40},{"ruleId":"549","severity":1,"message":"550","line":62,"column":15,"nodeType":"551","endLine":66,"endColumn":17},{"ruleId":"500","severity":1,"message":"501","line":137,"column":28,"nodeType":"502","messageId":"503","endLine":137,"endColumn":30},{"ruleId":"500","severity":1,"message":"501","line":146,"column":28,"nodeType":"502","messageId":"503","endLine":146,"endColumn":30},{"ruleId":"509","severity":1,"message":"553","line":2,"column":10,"nodeType":"507","messageId":"511","endLine":2,"endColumn":17},{"ruleId":"509","severity":1,"message":"577","line":8,"column":45,"nodeType":"507","messageId":"511","endLine":8,"endColumn":50},{"ruleId":"509","severity":1,"message":"578","line":5,"column":47,"nodeType":"507","messageId":"511","endLine":5,"endColumn":50},{"ruleId":"500","severity":1,"message":"504","line":26,"column":26,"nodeType":"502","messageId":"503","endLine":26,"endColumn":28},{"ruleId":"500","severity":1,"message":"504","line":47,"column":38,"nodeType":"502","messageId":"503","endLine":47,"endColumn":40},{"ruleId":"500","severity":1,"message":"501","line":50,"column":64,"nodeType":"502","messageId":"503","endLine":50,"endColumn":66},{"ruleId":"500","severity":1,"message":"504","line":67,"column":32,"nodeType":"502","messageId":"503","endLine":67,"endColumn":34},{"ruleId":"500","severity":1,"message":"504","line":276,"column":47,"nodeType":"502","messageId":"503","endLine":276,"endColumn":49},{"ruleId":"509","severity":1,"message":"579","line":1,"column":8,"nodeType":"507","messageId":"511","endLine":1,"endColumn":9},{"ruleId":"509","severity":1,"message":"580","line":10,"column":7,"nodeType":"507","messageId":"511","endLine":10,"endColumn":17},{"ruleId":"500","severity":1,"message":"501","line":83,"column":20,"nodeType":"502","messageId":"503","endLine":83,"endColumn":22},{"ruleId":"500","severity":1,"message":"504","line":125,"column":43,"nodeType":"502","messageId":"503","endLine":125,"endColumn":45},{"ruleId":"500","severity":1,"message":"501","line":177,"column":35,"nodeType":"502","messageId":"503","endLine":177,"endColumn":37},{"ruleId":"509","severity":1,"message":"581","line":213,"column":13,"nodeType":"507","messageId":"511","endLine":213,"endColumn":18},{"ruleId":"500","severity":1,"message":"501","line":218,"column":16,"nodeType":"502","messageId":"503","endLine":218,"endColumn":18},{"ruleId":"500","severity":1,"message":"501","line":219,"column":17,"nodeType":"502","messageId":"503","endLine":219,"endColumn":19},{"ruleId":"500","severity":1,"message":"501","line":220,"column":25,"nodeType":"502","messageId":"503","endLine":220,"endColumn":27},{"ruleId":"500","severity":1,"message":"504","line":234,"column":32,"nodeType":"502","messageId":"503","endLine":234,"endColumn":34},{"ruleId":"500","severity":1,"message":"504","line":249,"column":21,"nodeType":"502","messageId":"503","endLine":249,"endColumn":23},{"ruleId":"509","severity":1,"message":"582","line":2,"column":8,"nodeType":"507","messageId":"511","endLine":2,"endColumn":16},{"ruleId":"509","severity":1,"message":"583","line":5,"column":10,"nodeType":"507","messageId":"511","endLine":5,"endColumn":19},{"ruleId":"500","severity":1,"message":"504","line":57,"column":48,"nodeType":"502","messageId":"503","endLine":57,"endColumn":50},{"ruleId":"500","severity":1,"message":"504","line":248,"column":66,"nodeType":"502","messageId":"503","endLine":248,"endColumn":68},{"ruleId":"500","severity":1,"message":"504","line":260,"column":67,"nodeType":"502","messageId":"503","endLine":260,"endColumn":69},{"ruleId":"500","severity":1,"message":"504","line":296,"column":44,"nodeType":"502","messageId":"503","endLine":296,"endColumn":46},{"ruleId":"500","severity":1,"message":"504","line":303,"column":42,"nodeType":"502","messageId":"503","endLine":303,"endColumn":44},{"ruleId":"509","severity":1,"message":"584","line":4,"column":15,"nodeType":"507","messageId":"511","endLine":4,"endColumn":22},{"ruleId":"529","severity":1,"message":"530","line":18,"column":5,"nodeType":"531","endLine":18,"endColumn":9},{"ruleId":"509","severity":1,"message":"585","line":38,"column":13,"nodeType":"507","messageId":"511","endLine":38,"endColumn":25},{"ruleId":"500","severity":1,"message":"504","line":79,"column":70,"nodeType":"502","messageId":"503","endLine":79,"endColumn":72},{"ruleId":"500","severity":1,"message":"504","line":87,"column":76,"nodeType":"502","messageId":"503","endLine":87,"endColumn":78},{"ruleId":"509","severity":1,"message":"586","line":1,"column":8,"nodeType":"507","messageId":"511","endLine":1,"endColumn":14},{"ruleId":"523","severity":1,"message":"524","line":18,"column":1,"nodeType":"525","endLine":54,"endColumn":2},{"ruleId":"529","severity":1,"message":"530","line":25,"column":5,"nodeType":"531","endLine":25,"endColumn":9},{"ruleId":"500","severity":1,"message":"504","line":273,"column":26,"nodeType":"502","messageId":"503","endLine":273,"endColumn":28},{"ruleId":"509","severity":1,"message":"510","line":67,"column":27,"nodeType":"507","messageId":"511","endLine":67,"endColumn":40},{"ruleId":"509","severity":1,"message":"540","line":67,"column":42,"nodeType":"507","messageId":"511","endLine":67,"endColumn":47},{"ruleId":"509","severity":1,"message":"541","line":67,"column":49,"nodeType":"507","messageId":"511","endLine":67,"endColumn":60},{"ruleId":"509","severity":1,"message":"542","line":70,"column":9,"nodeType":"507","messageId":"511","endLine":70,"endColumn":20},{"ruleId":"509","severity":1,"message":"510","line":64,"column":27,"nodeType":"507","messageId":"511","endLine":64,"endColumn":40},{"ruleId":"509","severity":1,"message":"527","line":66,"column":9,"nodeType":"507","messageId":"511","endLine":66,"endColumn":16},{"ruleId":"533","severity":1,"message":"534","line":8,"column":3,"nodeType":"535","messageId":"536","endLine":10,"endColumn":4},{"ruleId":"500","severity":1,"message":"501","line":40,"column":32,"nodeType":"502","messageId":"503","endLine":40,"endColumn":34},{"ruleId":"500","severity":1,"message":"504","line":73,"column":19,"nodeType":"502","messageId":"503","endLine":73,"endColumn":21},{"ruleId":"500","severity":1,"message":"504","line":73,"column":55,"nodeType":"502","messageId":"503","endLine":73,"endColumn":57},{"ruleId":"500","severity":1,"message":"504","line":172,"column":19,"nodeType":"502","messageId":"503","endLine":172,"endColumn":21},{"ruleId":"500","severity":1,"message":"504","line":172,"column":49,"nodeType":"502","messageId":"503","endLine":172,"endColumn":51},{"ruleId":"500","severity":1,"message":"504","line":172,"column":93,"nodeType":"502","messageId":"503","endLine":172,"endColumn":95},{"ruleId":"500","severity":1,"message":"504","line":179,"column":19,"nodeType":"502","messageId":"503","endLine":179,"endColumn":21},{"ruleId":"500","severity":1,"message":"504","line":179,"column":49,"nodeType":"502","messageId":"503","endLine":179,"endColumn":51},{"ruleId":"500","severity":1,"message":"501","line":179,"column":79,"nodeType":"502","messageId":"503","endLine":179,"endColumn":81},{"ruleId":"500","severity":1,"message":"504","line":230,"column":22,"nodeType":"502","messageId":"503","endLine":230,"endColumn":24},{"ruleId":"500","severity":1,"message":"504","line":230,"column":56,"nodeType":"502","messageId":"503","endLine":230,"endColumn":58},{"ruleId":"505","severity":1,"message":"506","line":231,"column":11,"nodeType":"507","messageId":"508","endLine":231,"endColumn":22},{"ruleId":"500","severity":1,"message":"504","line":259,"column":22,"nodeType":"502","messageId":"503","endLine":259,"endColumn":24},{"ruleId":"500","severity":1,"message":"504","line":259,"column":56,"nodeType":"502","messageId":"503","endLine":259,"endColumn":58},{"ruleId":"505","severity":1,"message":"506","line":260,"column":11,"nodeType":"507","messageId":"508","endLine":260,"endColumn":22},{"ruleId":"500","severity":1,"message":"504","line":322,"column":22,"nodeType":"502","messageId":"503","endLine":322,"endColumn":24},{"ruleId":"500","severity":1,"message":"504","line":322,"column":56,"nodeType":"502","messageId":"503","endLine":322,"endColumn":58},{"ruleId":"505","severity":1,"message":"506","line":323,"column":11,"nodeType":"507","messageId":"508","endLine":323,"endColumn":22},{"ruleId":"500","severity":1,"message":"504","line":32,"column":43,"nodeType":"502","messageId":"503","endLine":32,"endColumn":45},{"ruleId":"500","severity":1,"message":"504","line":34,"column":43,"nodeType":"502","messageId":"503","endLine":34,"endColumn":45},{"ruleId":"549","severity":1,"message":"550","line":60,"column":15,"nodeType":"551","endLine":64,"endColumn":17},{"ruleId":"500","severity":1,"message":"501","line":135,"column":28,"nodeType":"502","messageId":"503","endLine":135,"endColumn":30},{"ruleId":"500","severity":1,"message":"501","line":144,"column":28,"nodeType":"502","messageId":"503","endLine":144,"endColumn":30},{"ruleId":"529","severity":1,"message":"530","line":19,"column":5,"nodeType":"531","endLine":19,"endColumn":9},{"ruleId":"509","severity":1,"message":"573","line":21,"column":9,"nodeType":"507","messageId":"511","endLine":21,"endColumn":16},{"ruleId":"509","severity":1,"message":"574","line":22,"column":9,"nodeType":"507","messageId":"511","endLine":22,"endColumn":10},{"ruleId":"500","severity":1,"message":"501","line":48,"column":30,"nodeType":"502","messageId":"503","endLine":48,"endColumn":32},{"ruleId":"500","severity":1,"message":"501","line":55,"column":30,"nodeType":"502","messageId":"503","endLine":55,"endColumn":32},{"ruleId":"549","severity":1,"message":"550","line":94,"column":27,"nodeType":"551","endLine":104,"endColumn":29},{"ruleId":"500","severity":1,"message":"504","line":313,"column":24,"nodeType":"502","messageId":"503","endLine":313,"endColumn":26},{"ruleId":"529","severity":1,"message":"530","line":22,"column":3,"nodeType":"531","endLine":22,"endColumn":7},{"ruleId":"509","severity":1,"message":"572","line":46,"column":27,"nodeType":"507","messageId":"511","endLine":46,"endColumn":37},{"ruleId":"509","severity":1,"message":"520","line":3,"column":8,"nodeType":"507","messageId":"511","endLine":3,"endColumn":14},{"ruleId":"509","severity":1,"message":"510","line":56,"column":27,"nodeType":"507","messageId":"511","endLine":56,"endColumn":40},{"ruleId":"509","severity":1,"message":"527","line":58,"column":9,"nodeType":"507","messageId":"511","endLine":58,"endColumn":16},{"ruleId":"509","severity":1,"message":"579","line":1,"column":8,"nodeType":"507","messageId":"511","endLine":1,"endColumn":9},{"ruleId":"500","severity":1,"message":"504","line":38,"column":45,"nodeType":"502","messageId":"503","endLine":38,"endColumn":47},{"ruleId":"500","severity":1,"message":"501","line":85,"column":20,"nodeType":"502","messageId":"503","endLine":85,"endColumn":22},{"ruleId":"500","severity":1,"message":"504","line":110,"column":39,"nodeType":"502","messageId":"503","endLine":110,"endColumn":41},{"ruleId":"500","severity":1,"message":"501","line":170,"column":35,"nodeType":"502","messageId":"503","endLine":170,"endColumn":37},{"ruleId":"509","severity":1,"message":"581","line":206,"column":13,"nodeType":"507","messageId":"511","endLine":206,"endColumn":18},{"ruleId":"500","severity":1,"message":"501","line":211,"column":16,"nodeType":"502","messageId":"503","endLine":211,"endColumn":18},{"ruleId":"500","severity":1,"message":"501","line":212,"column":17,"nodeType":"502","messageId":"503","endLine":212,"endColumn":19},{"ruleId":"500","severity":1,"message":"501","line":213,"column":25,"nodeType":"502","messageId":"503","endLine":213,"endColumn":27},{"ruleId":"500","severity":1,"message":"504","line":226,"column":19,"nodeType":"502","messageId":"503","endLine":226,"endColumn":21},{"ruleId":"500","severity":1,"message":"504","line":229,"column":32,"nodeType":"502","messageId":"503","endLine":229,"endColumn":34},{"ruleId":"509","severity":1,"message":"582","line":2,"column":8,"nodeType":"507","messageId":"511","endLine":2,"endColumn":16},{"ruleId":"549","severity":1,"message":"550","line":67,"column":15,"nodeType":"551","endLine":67,"endColumn":72},{"ruleId":"500","severity":1,"message":"504","line":204,"column":68,"nodeType":"502","messageId":"503","endLine":204,"endColumn":70},{"ruleId":"500","severity":1,"message":"504","line":204,"column":110,"nodeType":"502","messageId":"503","endLine":204,"endColumn":112},{"ruleId":"500","severity":1,"message":"504","line":382,"column":68,"nodeType":"502","messageId":"503","endLine":382,"endColumn":70},{"ruleId":"500","severity":1,"message":"504","line":382,"column":110,"nodeType":"502","messageId":"503","endLine":382,"endColumn":112},{"ruleId":"529","severity":1,"message":"530","line":18,"column":5,"nodeType":"531","endLine":18,"endColumn":9},{"ruleId":"509","severity":1,"message":"587","line":39,"column":41,"nodeType":"507","messageId":"511","endLine":39,"endColumn":55},"no-native-reassign",["588"],"no-negated-in-lhs",["589"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-redeclare","'filter_data' is already defined.","Identifier","redeclared","no-unused-vars","'authenticated' is assigned a value but never used.","unusedVar","'authenticated_contractor' is assigned a value but never used.","'account_profile' is assigned a value but never used.","'contractor_profile' is assigned a value but never used.","'_this' is assigned a value but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","'axios' is defined but never used.","'cookie' is defined but never used.","'API_URL' is defined but never used.","'API_PREFIX' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'mapStateToProps' is defined but never used.","'isError' is assigned a value but never used.","'Link' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","ThisExpression","'Router' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-dupe-keys","Duplicate key 'animation-delay'.","ObjectExpression","'alert' is assigned a value but never used.","'login_phone' is assigned a value but never used.","'currentPage' is assigned a value but never used.","'text' is already defined.","'reqClassName' is already defined.","'icon' is assigned a value but never used.","'type' is assigned a value but never used.","'disabled' is assigned a value but never used.","'meta' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'PropTypes' is defined but never used.","'connect' is defined but never used.","'Component' is defined but never used.","no-useless-escape","Unnecessary escape character: \\+.","Literal","unnecessaryEscape",["590","591"],"Unnecessary escape character: \\-.",["592","593"],"Unnecessary escape character: \\:.",["594","595"],"no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","Unexpected mix of '||' and '&&'.","'pathname' is assigned a value but never used.","'msgTitle' is already defined.","'msgClose' is assigned a value but never used.","'submitting' is assigned a value but never used.","'keyName' is defined but never used.","'i' is assigned a value but never used.","'isPasswordConfirmText' is assigned a value but never used.","'AccountLogin' is defined but never used.","'space' is assigned a value but never used.","'lib' is defined but never used.","'$' is defined but never used.","'dateFormat' is assigned a value but never used.","'state' is assigned a value but never used.","'Lightbox' is defined but never used.","'IMAGE_URL' is defined but never used.","'Loading' is defined but never used.","'handleSubmit' is assigned a value but never used.","'update' is defined but never used.","'contractorData' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"messageId":"596","fix":"597","desc":"598"},{"messageId":"599","fix":"600","desc":"601"},{"messageId":"596","fix":"602","desc":"598"},{"messageId":"599","fix":"603","desc":"601"},{"messageId":"596","fix":"604","desc":"598"},{"messageId":"599","fix":"605","desc":"601"},"removeEscape",{"range":"606","text":"607"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"608","text":"609"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"610","text":"607"},{"range":"611","text":"609"},{"range":"612","text":"607"},{"range":"613","text":"609"},[1607,1608],"",[1607,1607],"\\",[1609,1610],[1609,1609],[1617,1618],[1617,1617]]